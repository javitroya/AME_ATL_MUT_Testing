<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="1:1-923:2" name="ATL_WFR">
    <inModels location="2:27-2:35" name="IN" metamodel="/2"/>
    <outModels location="2:8-2:21" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:Helper" location="13:1-17:4">
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- HELPERS --------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- This helper provides a set containing the name of the IteratorExp elements</commentsBefore>
      <commentsBefore>-- that accepts a single Iterator.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(String)</commentsBefore>
      <commentsAfter>-- This helper provides a set containing the name of the IteratorExp elements</commentsAfter>
      <commentsAfter>-- for which several Iterators may be declared according to the OCL spec.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(String)</commentsAfter>
      <definition location="13:8-17:3">
        <feature xsi:type="ocl:Attribute" location="13:13-17:3" name="singleIteratorExps">
          <initExpression xsi:type="ocl:SetExp" location="14:2-17:3">
            <elements xsi:type="ocl:StringExp" location="15:3-15:13" stringSymbol="isUnique"/>
            <elements xsi:type="ocl:StringExp" location="15:15-15:20" stringSymbol="any"/>
            <elements xsi:type="ocl:StringExp" location="15:22-15:27" stringSymbol="one"/>
            <elements xsi:type="ocl:StringExp" location="15:29-15:38" stringSymbol="collect"/>
            <elements xsi:type="ocl:StringExp" location="15:40-15:48" stringSymbol="select"/>
            <elements xsi:type="ocl:StringExp" location="16:3-16:11" stringSymbol="reject"/>
            <elements xsi:type="ocl:StringExp" location="16:13-16:28" stringSymbol="collectNested"/>
            <elements xsi:type="ocl:StringExp" location="16:30-16:40" stringSymbol="sortedBy"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="13:34-13:45">
            <elementType xsi:type="ocl:StringType" location="13:38-13:44"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="24:1-24:71">
      <commentsBefore>-- This helper provides a set containing the name of the IteratorExp elements</commentsBefore>
      <commentsBefore>-- for which several Iterators may be declared according to the OCL spec.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(String)</commentsBefore>
      <commentsAfter>-- This helper computes the set of existing CollectionType elements within the</commentsAfter>
      <commentsAfter>-- input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(ATL!CollectionType)</commentsAfter>
      <definition location="24:8-24:70">
        <feature xsi:type="ocl:Attribute" location="24:13-24:70" name="multiIteratorExps">
          <initExpression xsi:type="ocl:SetExp" location="24:47-24:70">
            <elements xsi:type="ocl:StringExp" location="24:51-24:59" stringSymbol="exists"/>
            <elements xsi:type="ocl:StringExp" location="24:61-24:69" stringSymbol="forAll"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="24:33-24:44">
            <elementType xsi:type="ocl:StringType" location="24:37-24:43"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="31:1-32:36">
      <commentsBefore>-- This helper computes the set of existing CollectionType elements within the</commentsBefore>
      <commentsBefore>-- input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(ATL!CollectionType)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the OclModel elements that</commentsAfter>
      <commentsAfter>-- are used in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!OclModel)</commentsAfter>
      <definition location="31:8-32:35">
        <feature xsi:type="ocl:Attribute" location="31:13-32:35" name="collectionTypes">
          <initExpression xsi:type="ocl:OperationCallExp" location="32:2-32:35" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="32:2-32:20" name="CollectionType" model="/2"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="31:31-31:54">
            <elementType xsi:type="ocl:OclModelElement" location="31:35-31:53" name="CollectionType" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="39:1-46:15">
      <commentsBefore>-- This helper computes a sequence containing all the OclModel elements that</commentsBefore>
      <commentsBefore>-- are used in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!OclModel)</commentsBefore>
      <commentsAfter>-- This helper computes the Query element that corresponds to the input ATL</commentsAfter>
      <commentsAfter>-- Unit. If the input ATL Unit corresponds to a Module (eg a transformation),</commentsAfter>
      <commentsAfter>-- the computed value is OclUndefined.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	ATL!Query</commentsAfter>
      <definition location="39:8-46:14">
        <feature xsi:type="ocl:Attribute" location="39:13-46:14" name="allModels">
          <initExpression xsi:type="ocl:LetExp" location="40:2-46:14">
            <variable location="40:6-41:51" varName="atlModule" variableExp="/0/@elements.3/@definition/@feature/@initExpression/@in_/@source/@elements.0/@source /0/@elements.3/@definition/@feature/@initExpression/@in_/@source/@elements.1/@source">
              <type xsi:type="ocl:OclModelElement" location="40:18-40:28" name="Module" model="/2"/>
              <initExpression xsi:type="ocl:CollectionOperationCallExp" location="41:3-41:51" operationName="first">
                <source xsi:type="ocl:CollectionOperationCallExp" location="41:3-41:42" operationName="asSequence">
                  <source xsi:type="ocl:OperationCallExp" location="41:3-41:28" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="41:3-41:13" name="Module" model="/2"/>
                  </source>
                </source>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:CollectionOperationCallExp" location="43:2-46:14" operationName="flatten">
              <source xsi:type="ocl:SequenceExp" location="43:2-46:3">
                <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="44:3-44:21" name="inModels">
                  <source xsi:type="ocl:VariableExp" location="44:3-44:12" referredVariable="/0/@elements.3/@definition/@feature/@initExpression/@variable"/>
                </elements>
                <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="45:3-45:22" name="outModels">
                  <source xsi:type="ocl:VariableExp" location="45:3-45:12" referredVariable="/0/@elements.3/@definition/@feature/@initExpression/@variable"/>
                </elements>
              </source>
            </in_>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="39:25-39:47">
            <elementType xsi:type="ocl:OclModelElement" location="39:34-39:46" name="OclModel" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="54:1-55:50">
      <commentsBefore>-- This helper computes the Query element that corresponds to the input ATL</commentsBefore>
      <commentsBefore>-- Unit. If the input ATL Unit corresponds to a Module (eg a transformation),</commentsBefore>
      <commentsBefore>-- the computed value is OclUndefined.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	ATL!Query</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the Binding elements that</commentsAfter>
      <commentsAfter>-- are defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!Binding)</commentsAfter>
      <definition location="54:8-55:49">
        <feature xsi:type="ocl:Attribute" location="54:13-55:49" name="queryElt">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="55:2-55:49" operationName="first">
            <source xsi:type="ocl:CollectionOperationCallExp" location="55:2-55:40" operationName="asSequence">
              <source xsi:type="ocl:OperationCallExp" location="55:2-55:26" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="55:2-55:11" name="Query" model="/2"/>
              </source>
            </source>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="54:24-54:33" name="Query" model="/2"/>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="62:1-63:43">
      <commentsBefore>-- This helper computes a sequence containing all the Binding elements that</commentsBefore>
      <commentsBefore>-- are defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!Binding)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the Pattern elements that</commentsAfter>
      <commentsAfter>-- are defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!InPattern)</commentsAfter>
      <definition location="62:8-63:42">
        <feature xsi:type="ocl:Attribute" location="62:13-63:42" name="allBindings">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="63:2-63:42" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="63:2-63:28" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="63:2-63:13" name="Binding" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="62:27-62:48">
            <elementType xsi:type="ocl:OclModelElement" location="62:36-62:47" name="Binding" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="70:1-71:45">
      <commentsBefore>-- This helper computes a sequence containing all the Pattern elements that</commentsBefore>
      <commentsBefore>-- are defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!InPattern)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the InPatternElement elements</commentsAfter>
      <commentsAfter>-- that are defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!InPatternElement)</commentsAfter>
      <definition location="70:8-71:44">
        <feature xsi:type="ocl:Attribute" location="70:13-71:44" name="allInPatterns">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="71:2-71:44" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="71:2-71:30" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="71:2-71:15" name="InPattern" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="70:29-70:52">
            <elementType xsi:type="ocl:OclModelElement" location="70:38-70:51" name="InPattern" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="78:1-79:52">
      <commentsBefore>-- This helper computes a sequence containing all the InPatternElement elements</commentsBefore>
      <commentsBefore>-- that are defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!InPatternElement)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the OutPatternElement</commentsAfter>
      <commentsAfter>-- elements that are defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!OutPatternElement)</commentsAfter>
      <definition location="78:8-79:51">
        <feature xsi:type="ocl:Attribute" location="78:13-79:51" name="allInPatternElts">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="79:2-79:51" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="79:2-79:37" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="79:2-79:22" name="InPatternElement" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="78:32-78:62">
            <elementType xsi:type="ocl:OclModelElement" location="78:41-78:61" name="InPatternElement" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="86:1-87:53">
      <commentsBefore>-- This helper computes a sequence containing all the OutPatternElement</commentsBefore>
      <commentsBefore>-- elements that are defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!OutPatternElement)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the Rule elements that are</commentsAfter>
      <commentsAfter>-- defined in the input ATL Unit. If the input Unit is a query, the computed</commentsAfter>
      <commentsAfter>-- sequence is empty.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!Rule)</commentsAfter>
      <definition location="86:8-87:52">
        <feature xsi:type="ocl:Attribute" location="86:13-87:52" name="allOutPatternElts">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="87:2-87:52" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="87:2-87:38" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="87:2-87:23" name="OutPatternElement" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="86:33-86:64">
            <elementType xsi:type="ocl:OclModelElement" location="86:42-86:63" name="OutPatternElement" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="95:1-96:40">
      <commentsBefore>-- This helper computes a sequence containing all the Rule elements that are</commentsBefore>
      <commentsBefore>-- defined in the input ATL Unit. If the input Unit is a query, the computed</commentsBefore>
      <commentsBefore>-- sequence is empty.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!Rule)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the Helper elements that are</commentsAfter>
      <commentsAfter>-- defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!Helper)</commentsAfter>
      <definition location="95:8-96:39">
        <feature xsi:type="ocl:Attribute" location="95:13-96:39" name="allRules">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="96:2-96:39" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="96:2-96:25" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="96:2-96:10" name="Rule" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="95:24-95:42">
            <elementType xsi:type="ocl:OclModelElement" location="95:33-95:41" name="Rule" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="103:1-104:42">
      <commentsBefore>-- This helper computes a sequence containing all the Helper elements that are</commentsBefore>
      <commentsBefore>-- defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!Helper)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the LoopExp elements that are</commentsAfter>
      <commentsAfter>-- defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!LoopExp)</commentsAfter>
      <definition location="103:8-104:41">
        <feature xsi:type="ocl:Attribute" location="103:13-104:41" name="allHelpers">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="104:2-104:41" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="104:2-104:27" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="104:2-104:12" name="Helper" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="103:26-103:46">
            <elementType xsi:type="ocl:OclModelElement" location="103:35-103:45" name="Helper" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="111:1-112:43">
      <commentsBefore>-- This helper computes a sequence containing all the LoopExp elements that are</commentsBefore>
      <commentsBefore>-- defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!LoopExp)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the IterateExp elements that</commentsAfter>
      <commentsAfter>-- are defined in the input ATL Unit.</commentsAfter>
      <commentsAfter>-- CONTEXT:	thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!IterateExp)</commentsAfter>
      <definition location="111:8-112:42">
        <feature xsi:type="ocl:Attribute" location="111:13-112:42" name="allLoopExps">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="112:2-112:42" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="112:2-112:28" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="112:2-112:13" name="LoopExp" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="111:27-111:48">
            <elementType xsi:type="ocl:OclModelElement" location="111:36-111:47" name="LoopExp" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="119:1-120:46">
      <commentsBefore>-- This helper computes a sequence containing all the IterateExp elements that</commentsBefore>
      <commentsBefore>-- are defined in the input ATL Unit.</commentsBefore>
      <commentsBefore>-- CONTEXT:	thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!IterateExp)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing all the VariableDeclaration</commentsAfter>
      <commentsAfter>-- elements that are associated with the contextual Rule. These declarations</commentsAfter>
      <commentsAfter>-- can be of 3 different kinds:</commentsAfter>
      <commentsAfter>--  * the variables declared for the rule;</commentsAfter>
      <commentsAfter>--  * the OutPatternElements of the rule;</commentsAfter>
      <commentsAfter>--  * the InPatternElements of the rule if this last is a MatchedRule.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!Rule</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
      <definition location="119:8-120:45">
        <feature xsi:type="ocl:Attribute" location="119:13-120:45" name="allIterateExps">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="120:2-120:45" operationName="asSequence">
            <source xsi:type="ocl:OperationCallExp" location="120:2-120:31" operationName="allInstances">
              <source xsi:type="ocl:OclModelElement" location="120:2-120:16" name="IterateExp" model="/2"/>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="119:30-119:54">
            <elementType xsi:type="ocl:OclModelElement" location="119:39-119:53" name="IterateExp" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="131:1-142:15">
      <commentsBefore>-- This helper computes a sequence containing all the VariableDeclaration</commentsBefore>
      <commentsBefore>-- elements that are associated with the contextual Rule. These declarations</commentsBefore>
      <commentsBefore>-- can be of 3 different kinds:</commentsBefore>
      <commentsBefore>--  * the variables declared for the rule;</commentsBefore>
      <commentsBefore>--  * the OutPatternElements of the rule;</commentsBefore>
      <commentsBefore>--  * the InPatternElements of the rule if this last is a MatchedRule.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!Rule</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
      <commentsAfter>-- This helper computes the Rule element in which the contextual PatterElement</commentsAfter>
      <commentsAfter>-- is declared. This is achieved by returning the Rule referred by the &quot;rule&quot;</commentsAfter>
      <commentsAfter>-- reference of the Pattern that conatins the contexual PatternElement. This </commentsAfter>
      <commentsAfter>-- last one is accessed through the &quot;outPattern&quot; reference if the contextual</commentsAfter>
      <commentsAfter>-- PatternElement is an OutPatternElement, throught the &quot;inPattern&quot; if it is</commentsAfter>
      <commentsAfter>-- an InPatternElement.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!PatternElement</commentsAfter>
      <commentsAfter>-- RETURN:	ATL!Rule</commentsAfter>
      <definition location="131:8-142:14">
        <feature xsi:type="ocl:Attribute" location="132:7-142:14" name="namedElements">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="133:2-142:14" operationName="flatten">
            <source xsi:type="ocl:SequenceExp" location="133:2-142:3">
              <elements xsi:type="ocl:IfExp" location="134:3-139:8">
                <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="136:4-136:41" operationName="asSequence">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="136:4-136:27" name="elements">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="136:4-136:18" name="inPattern">
                      <source xsi:type="ocl:VariableExp" location="136:4-136:8" referredVariable="/4"/>
                    </source>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="134:6-134:39" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="134:6-134:10" referredVariable="/3"/>
                  <arguments xsi:type="ocl:OclModelElement" location="134:23-134:38" name="MatchedRule" model="/2"/>
                </condition>
                <elseExpression xsi:type="ocl:SequenceExp" location="138:4-138:14"/>
              </elements>
              <elements xsi:type="ocl:CollectionOperationCallExp" location="140:3-140:31" operationName="asSequence">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="140:3-140:17" name="variables">
                  <source xsi:type="ocl:VariableExp" location="140:3-140:7" referredVariable="/5"/>
                </source>
              </elements>
              <elements xsi:type="ocl:CollectionOperationCallExp" location="141:3-141:41" operationName="asSequence">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="141:3-141:27" name="elements">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="141:3-141:18" name="outPattern">
                    <source xsi:type="ocl:VariableExp" location="141:3-141:7" referredVariable="/6"/>
                  </source>
                </source>
              </elements>
            </source>
          </initExpression>
          <type xsi:type="ocl:SequenceType" location="132:23-132:56">
            <elementType xsi:type="ocl:OclModelElement" location="132:32-132:55" name="VariableDeclaration" model="/2"/>
          </type>
        </feature>
        <context_ location="131:8-131:24">
          <context_ xsi:type="ocl:OclModelElement" location="131:16-131:24" name="Rule" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="153:1-159:8">
      <commentsBefore>-- This helper computes the Rule element in which the contextual PatterElement</commentsBefore>
      <commentsBefore>-- is declared. This is achieved by returning the Rule referred by the &quot;rule&quot;</commentsBefore>
      <commentsBefore>-- reference of the Pattern that conatins the contexual PatternElement. This </commentsBefore>
      <commentsBefore>-- last one is accessed through the &quot;outPattern&quot; reference if the contextual</commentsBefore>
      <commentsBefore>-- PatternElement is an OutPatternElement, throught the &quot;inPattern&quot; if it is</commentsBefore>
      <commentsBefore>-- an InPatternElement.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!PatternElement</commentsBefore>
      <commentsBefore>-- RETURN:	ATL!Rule</commentsBefore>
      <commentsAfter>-- This helper returns the immediate composite (container) of the contextual</commentsAfter>
      <commentsAfter>-- VariableDeclaration.</commentsAfter>
      <commentsAfter>-- If the &quot;letExp&quot; reference of the contextual VariableDeclaration is not</commentsAfter>
      <commentsAfter>-- undefined, the helper returns the pointed LetExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if the &quot;letExp&quot; reference of the contextual VD is not undefined,</commentsAfter>
      <commentsAfter>-- the helper returns the pointed IterateExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if the contextual VD is an InPatternElement, the helper returns</commentsAfter>
      <commentsAfter>-- the InPattern in which it is contained.</commentsAfter>
      <commentsAfter>-- Otherwise, if the contextual VD is an OutPatternElement, the helper returns</commentsAfter>
      <commentsAfter>-- the OutPattern in which it is contained.</commentsAfter>
      <commentsAfter>-- Otherwise, if there exists a LoopExp element that contains the contextual VD</commentsAfter>
      <commentsAfter>-- as an iterator, the helper returns this LoopExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if there exists an IterateExp element that contains the contextual</commentsAfter>
      <commentsAfter>-- VD as its result, the helper returns this IterateExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if there exists a Rule element that contains the contextual VD</commentsAfter>
      <commentsAfter>-- as a rule variable iterator, the helper returns this Rule element.</commentsAfter>
      <commentsAfter>-- Otherwise, the helper returns OclUndefined as a default value.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!VariableDeclaration</commentsAfter>
      <commentsAfter>-- RETURN:	ATL!Element</commentsAfter>
      <definition location="153:8-159:7">
        <feature xsi:type="ocl:Attribute" location="153:40-159:7" name="rule">
          <initExpression xsi:type="ocl:IfExp" location="154:2-159:7">
            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="156:3-156:25" name="rule">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="156:3-156:18" name="outPattern">
                <source xsi:type="ocl:VariableExp" location="156:3-156:7" referredVariable="/8"/>
              </source>
            </thenExpression>
            <condition xsi:type="ocl:OperationCallExp" location="154:5-154:44" operationName="oclIsKindOf">
              <source xsi:type="ocl:VariableExp" location="154:5-154:9" referredVariable="/7"/>
              <arguments xsi:type="ocl:OclModelElement" location="154:22-154:43" name="OutPatternElement" model="/2"/>
            </condition>
            <elseExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="158:3-158:24" name="rule">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="158:3-158:17" name="inPattern">
                <source xsi:type="ocl:VariableExp" location="158:3-158:7" referredVariable="/9"/>
              </source>
            </elseExpression>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="153:49-153:57" name="Rule" model="/2"/>
        </feature>
        <context_ location="153:8-153:34">
          <context_ xsi:type="ocl:OclModelElement" location="153:16-153:34" name="PatternElement" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="181:1-202:44">
      <commentsBefore>-- This helper returns the immediate composite (container) of the contextual</commentsBefore>
      <commentsBefore>-- VariableDeclaration.</commentsBefore>
      <commentsBefore>-- If the &quot;letExp&quot; reference of the contextual VariableDeclaration is not</commentsBefore>
      <commentsBefore>-- undefined, the helper returns the pointed LetExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if the &quot;letExp&quot; reference of the contextual VD is not undefined,</commentsBefore>
      <commentsBefore>-- the helper returns the pointed IterateExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if the contextual VD is an InPatternElement, the helper returns</commentsBefore>
      <commentsBefore>-- the InPattern in which it is contained.</commentsBefore>
      <commentsBefore>-- Otherwise, if the contextual VD is an OutPatternElement, the helper returns</commentsBefore>
      <commentsBefore>-- the OutPattern in which it is contained.</commentsBefore>
      <commentsBefore>-- Otherwise, if there exists a LoopExp element that contains the contextual VD</commentsBefore>
      <commentsBefore>-- as an iterator, the helper returns this LoopExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if there exists an IterateExp element that contains the contextual</commentsBefore>
      <commentsBefore>-- VD as its result, the helper returns this IterateExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if there exists a Rule element that contains the contextual VD</commentsBefore>
      <commentsBefore>-- as a rule variable iterator, the helper returns this Rule element.</commentsBefore>
      <commentsBefore>-- Otherwise, the helper returns OclUndefined as a default value.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!VariableDeclaration</commentsBefore>
      <commentsBefore>-- RETURN:	ATL!Element</commentsBefore>
      <commentsAfter>-- This helper returns the immediate composite (container) of the contextual</commentsAfter>
      <commentsAfter>-- OclExpression.</commentsAfter>
      <commentsAfter>-- If the one of the &quot;ifExp1&quot;, &quot;ifExp2&quot; and &quot;ifExp3&quot; references of the</commentsAfter>
      <commentsAfter>-- contextual OclExpression is not undefined, the helper returns the pointed</commentsAfter>
      <commentsAfter>-- IfExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;attribute&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed Attribute.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed Operation.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;initializedVariable&quot; is not undefined, the helper returns</commentsAfter>
      <commentsAfter>-- the pointed VariableDeclaration.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;parentOperation&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed OperationCallExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;loopExp&quot; is not undefined, the helper returns the pointed</commentsAfter>
      <commentsAfter>-- LoopExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;letExp&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed LetExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;collection&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed CollectionExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;appliedProperty&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed PropertyCallExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsAfter>
      <commentsAfter>-- pointed Operation.</commentsAfter>
      <commentsAfter>-- Otherwise, if there exists an InPattern that has the contextual OclExp as</commentsAfter>
      <commentsAfter>-- filter, the helper returns this InPattern.</commentsAfter>
      <commentsAfter>-- Otherwise, if there exists a Binding that has the contextual OclExp as</commentsAfter>
      <commentsAfter>-- value, the helper returns this Binding.</commentsAfter>
      <commentsAfter>-- Otherwise, if there exists a Query that has the contextual OclExp as body,</commentsAfter>
      <commentsAfter>-- the helper returns this Query.</commentsAfter>
      <commentsAfter>-- Otherwise, the helper retuns OclUndefined as default value.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
      <commentsAfter>-- RETURN:	ATL!Element</commentsAfter>
      <definition location="181:8-202:43">
        <feature xsi:type="ocl:Attribute" location="181:45-202:43" name="immediateComposite">
          <initExpression xsi:type="ocl:IfExp" location="182:2-202:43">
            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="183:3-183:14" name="letExp">
              <source xsi:type="ocl:VariableExp" location="183:3-183:7" referredVariable="/11"/>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="182:5-182:37" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="182:9-182:37" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="182:9-182:20" name="letExp">
                  <source xsi:type="ocl:VariableExp" location="182:9-182:13" referredVariable="/10"/>
                </source>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="184:7-202:37">
              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="185:3-185:15" name="baseExp">
                <source xsi:type="ocl:VariableExp" location="185:3-185:7" referredVariable="/13"/>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="184:10-184:43" operationName="not">
                <source xsi:type="ocl:OperationCallExp" location="184:14-184:43" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="184:14-184:26" name="baseExp">
                    <source xsi:type="ocl:VariableExp" location="184:14-184:18" referredVariable="/12"/>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="186:7-202:31">
                <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="187:3-187:71" name="inPattern">
                  <source xsi:type="ocl:CollectionOperationCallExp" location="187:3-187:61" operationName="first">
                    <source xsi:type="ocl:IteratorExp" location="187:3-187:52" name="select">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="187:3-187:30" name="allInPatternElts">
                        <source xsi:type="ocl:VariableExp" location="187:3-187:13" referredVariable="/16"/>
                      </source>
                      <body xsi:type="ocl:OperatorCallExp" location="187:43-187:51" operationName="=">
                        <source xsi:type="ocl:VariableExp" location="187:43-187:44" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@iterators.0"/>
                        <arguments xsi:type="ocl:VariableExp" location="187:47-187:51" referredVariable="/17"/>
                      </body>
                      <iterators location="187:39-187:40" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@body/@source"/>
                    </source>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:IteratorExp" location="186:10-186:59" name="exists">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="186:10-186:37" name="allInPatternElts">
                    <source xsi:type="ocl:VariableExp" location="186:10-186:20" referredVariable="/14"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="186:50-186:58" operationName="=">
                    <source xsi:type="ocl:VariableExp" location="186:50-186:51" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                    <arguments xsi:type="ocl:VariableExp" location="186:54-186:58" referredVariable="/15"/>
                  </body>
                  <iterators location="186:46-186:47" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@body/@source"/>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="188:7-202:25">
                  <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="189:3-189:73" name="outPattern">
                    <source xsi:type="ocl:CollectionOperationCallExp" location="189:3-189:62" operationName="first">
                      <source xsi:type="ocl:IteratorExp" location="189:3-189:53" name="select">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="189:3-189:31" name="allOutPatternElts">
                          <source xsi:type="ocl:VariableExp" location="189:3-189:13" referredVariable="/20"/>
                        </source>
                        <body xsi:type="ocl:OperatorCallExp" location="189:44-189:52" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="189:44-189:45" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@iterators.0"/>
                          <arguments xsi:type="ocl:VariableExp" location="189:48-189:52" referredVariable="/21"/>
                        </body>
                        <iterators location="189:40-189:41" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@body/@source"/>
                      </source>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:IteratorExp" location="188:10-188:60" name="exists">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="188:10-188:38" name="allOutPatternElts">
                      <source xsi:type="ocl:VariableExp" location="188:10-188:20" referredVariable="/18"/>
                    </source>
                    <body xsi:type="ocl:OperatorCallExp" location="188:51-188:59" operationName="=">
                      <source xsi:type="ocl:VariableExp" location="188:51-188:52" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                      <arguments xsi:type="ocl:VariableExp" location="188:55-188:59" referredVariable="/19"/>
                    </body>
                    <iterators location="188:47-188:48" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source"/>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="190:7-202:19">
                    <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="192:3-193:60" operationName="first">
                      <source xsi:type="ocl:IteratorExp" location="192:3-193:51" name="select">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="192:3-192:25" name="allLoopExps">
                          <source xsi:type="ocl:VariableExp" location="192:3-192:13" referredVariable="/24"/>
                        </source>
                        <body xsi:type="ocl:IteratorExp" location="193:17-193:50" name="exists">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="193:17-193:28" name="iterators">
                            <source xsi:type="ocl:VariableExp" location="193:17-193:18" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                          </source>
                          <body xsi:type="ocl:OperatorCallExp" location="193:41-193:49" operationName="=">
                            <source xsi:type="ocl:VariableExp" location="193:41-193:45" referredVariable="/25"/>
                            <arguments xsi:type="ocl:VariableExp" location="193:48-193:49" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@iterators.0"/>
                          </body>
                          <iterators location="193:37-193:38" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@body/@arguments.0"/>
                        </body>
                        <iterators location="193:13-193:14" varName="l" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                      </source>
                    </thenExpression>
                    <condition xsi:type="ocl:IteratorExp" location="190:10-191:52" name="exists">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="190:10-190:32" name="allLoopExps">
                        <source xsi:type="ocl:VariableExp" location="190:10-190:20" referredVariable="/22"/>
                      </source>
                      <body xsi:type="ocl:IteratorExp" location="191:18-191:51" name="exists">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="191:18-191:29" name="iterators">
                          <source xsi:type="ocl:VariableExp" location="191:18-191:19" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                        </source>
                        <body xsi:type="ocl:OperatorCallExp" location="191:42-191:50" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="191:42-191:46" referredVariable="/23"/>
                          <arguments xsi:type="ocl:VariableExp" location="191:49-191:50" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@iterators.0"/>
                        </body>
                        <iterators location="191:38-191:39" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@body/@arguments.0"/>
                      </body>
                      <iterators location="191:14-191:15" varName="l" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                    </condition>
                    <elseExpression xsi:type="ocl:IfExp" location="194:7-202:13">
                      <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="195:3-195:66" operationName="first">
                        <source xsi:type="ocl:IteratorExp" location="195:3-195:57" name="select">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="195:3-195:28" name="allIterateExps">
                            <source xsi:type="ocl:VariableExp" location="195:3-195:13" referredVariable="/28"/>
                          </source>
                          <body xsi:type="ocl:OperatorCallExp" location="195:41-195:56" operationName="=">
                            <source xsi:type="ocl:VariableExp" location="195:41-195:45" referredVariable="/29"/>
                            <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="195:48-195:56" name="result">
                              <source xsi:type="ocl:VariableExp" location="195:48-195:49" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                            </arguments>
                          </body>
                          <iterators location="195:37-195:38" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@arguments.0/@source"/>
                        </source>
                      </thenExpression>
                      <condition xsi:type="ocl:IteratorExp" location="194:10-194:64" name="exists">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="194:10-194:35" name="allIterateExps">
                          <source xsi:type="ocl:VariableExp" location="194:10-194:20" referredVariable="/26"/>
                        </source>
                        <body xsi:type="ocl:OperatorCallExp" location="194:48-194:63" operationName="=">
                          <source xsi:type="ocl:VariableExp" location="194:48-194:52" referredVariable="/27"/>
                          <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="194:55-194:63" name="result">
                            <source xsi:type="ocl:VariableExp" location="194:55-194:56" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                          </arguments>
                        </body>
                        <iterators location="194:44-194:45" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@arguments.0/@source"/>
                      </condition>
                      <elseExpression xsi:type="ocl:IfExp" location="196:7-202:7">
                        <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="198:3-200:13" operationName="first">
                          <source xsi:type="ocl:IteratorExp" location="198:3-199:51" name="select">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="198:3-198:22" name="allRules">
                              <source xsi:type="ocl:VariableExp" location="198:3-198:13" referredVariable="/32"/>
                            </source>
                            <body xsi:type="ocl:IteratorExp" location="199:17-199:50" name="exists">
                              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="199:17-199:28" name="variables">
                                <source xsi:type="ocl:VariableExp" location="199:17-199:18" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                              </source>
                              <body xsi:type="ocl:OperatorCallExp" location="199:41-199:49" operationName="=">
                                <source xsi:type="ocl:VariableExp" location="199:41-199:45" referredVariable="/33"/>
                                <arguments xsi:type="ocl:VariableExp" location="199:48-199:49" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@iterators.0"/>
                              </body>
                              <iterators location="199:37-199:38" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@body/@arguments.0"/>
                            </body>
                            <iterators location="199:13-199:14" varName="r" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                          </source>
                        </thenExpression>
                        <condition xsi:type="ocl:IteratorExp" location="196:10-197:52" name="exists">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="196:10-196:29" name="allRules">
                            <source xsi:type="ocl:VariableExp" location="196:10-196:20" referredVariable="/30"/>
                          </source>
                          <body xsi:type="ocl:IteratorExp" location="197:18-197:51" name="exists">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="197:18-197:29" name="variables">
                              <source xsi:type="ocl:VariableExp" location="197:18-197:19" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                            </source>
                            <body xsi:type="ocl:OperatorCallExp" location="197:42-197:50" operationName="=">
                              <source xsi:type="ocl:VariableExp" location="197:42-197:46" referredVariable="/31"/>
                              <arguments xsi:type="ocl:VariableExp" location="197:49-197:50" referredVariable="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@iterators.0"/>
                            </body>
                            <iterators location="197:38-197:39" varName="e" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@body/@arguments.0"/>
                          </body>
                          <iterators location="197:14-197:15" varName="r" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                        </condition>
                        <elseExpression xsi:type="ocl:OclUndefinedExp" location="201:7-201:19"/>
                      </elseExpression>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </elseExpression>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="181:66-181:77" name="Element" model="/2"/>
        </feature>
        <context_ location="181:8-181:39">
          <context_ xsi:type="ocl:OclModelElement" location="181:16-181:39" name="VariableDeclaration" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="237:1-267:38">
      <commentsBefore>-- This helper returns the immediate composite (container) of the contextual</commentsBefore>
      <commentsBefore>-- OclExpression.</commentsBefore>
      <commentsBefore>-- If the one of the &quot;ifExp1&quot;, &quot;ifExp2&quot; and &quot;ifExp3&quot; references of the</commentsBefore>
      <commentsBefore>-- contextual OclExpression is not undefined, the helper returns the pointed</commentsBefore>
      <commentsBefore>-- IfExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;attribute&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed Attribute.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed Operation.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;initializedVariable&quot; is not undefined, the helper returns</commentsBefore>
      <commentsBefore>-- the pointed VariableDeclaration.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;parentOperation&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed OperationCallExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;loopExp&quot; is not undefined, the helper returns the pointed</commentsBefore>
      <commentsBefore>-- LoopExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;letExp&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed LetExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;collection&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed CollectionExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;appliedProperty&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed PropertyCallExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if its &quot;operation&quot; is not undefined, the helper returns the</commentsBefore>
      <commentsBefore>-- pointed Operation.</commentsBefore>
      <commentsBefore>-- Otherwise, if there exists an InPattern that has the contextual OclExp as</commentsBefore>
      <commentsBefore>-- filter, the helper returns this InPattern.</commentsBefore>
      <commentsBefore>-- Otherwise, if there exists a Binding that has the contextual OclExp as</commentsBefore>
      <commentsBefore>-- value, the helper returns this Binding.</commentsBefore>
      <commentsBefore>-- Otherwise, if there exists a Query that has the contextual OclExp as body,</commentsBefore>
      <commentsBefore>-- the helper returns this Query.</commentsBefore>
      <commentsBefore>-- Otherwise, the helper retuns OclUndefined as default value.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
      <commentsBefore>-- RETURN:	ATL!Element</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing the VariableDeclarations that</commentsAfter>
      <commentsAfter>-- precede the contextual VariableDeclaration in its namespace.</commentsAfter>
      <commentsAfter>-- If the contextual VariableDeclaration is a PatternElement, the helper only</commentsAfter>
      <commentsAfter>-- returns this VD.</commentsAfter>
      <commentsAfter>-- Otherwise, it computes the container of the contextual VD. If the container</commentsAfter>
      <commentsAfter>-- is a LetExp, it returns a Sequence composed of the VD, and the results of</commentsAfter>
      <commentsAfter>-- the calls of the getUpD helper on the calculated container.</commentsAfter>
      <commentsAfter>-- If the container is an IteratorExp, the helper returns a Sequence composed</commentsAfter>
      <commentsAfter>-- of the VD and the results of the call of getUpD on the computed container.</commentsAfter>
      <commentsAfter>-- If the container is an IterateExp, the helper a Sequence containing the same</commentsAfter>
      <commentsAfter>-- elements that the one computed for an IteratorExp.</commentsAfter>
      <commentsAfter>-- Otherwise, the helper returns the only contextual VD as default value.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!VariableDeclaration</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
      <definition location="237:8-267:37">
        <feature xsi:type="ocl:Attribute" location="237:39-267:37" name="immediateComposite">
          <initExpression xsi:type="ocl:IfExp" location="238:2-267:37">
            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="238:43-238:54" name="ifExp1">
              <source xsi:type="ocl:VariableExp" location="238:43-238:47" referredVariable="/35"/>
            </thenExpression>
            <condition xsi:type="ocl:OperatorCallExp" location="238:5-238:37" operationName="not">
              <source xsi:type="ocl:OperationCallExp" location="238:9-238:37" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="238:9-238:20" name="ifExp1">
                  <source xsi:type="ocl:VariableExp" location="238:9-238:13" referredVariable="/34"/>
                </source>
              </source>
            </condition>
            <elseExpression xsi:type="ocl:IfExp" location="239:7-267:31">
              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="239:48-239:59" name="ifExp2">
                <source xsi:type="ocl:VariableExp" location="239:48-239:52" referredVariable="/37"/>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="239:10-239:42" operationName="not">
                <source xsi:type="ocl:OperationCallExp" location="239:14-239:42" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="239:14-239:25" name="ifExp2">
                    <source xsi:type="ocl:VariableExp" location="239:14-239:18" referredVariable="/36"/>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="240:7-267:25">
                <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="240:48-240:59" name="ifExp3">
                  <source xsi:type="ocl:VariableExp" location="240:48-240:52" referredVariable="/39"/>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="240:10-240:42" operationName="not">
                  <source xsi:type="ocl:OperationCallExp" location="240:14-240:42" operationName="oclIsUndefined">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="240:14-240:25" name="ifExp3">
                      <source xsi:type="ocl:VariableExp" location="240:14-240:18" referredVariable="/38"/>
                    </source>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="241:7-267:19">
                  <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="241:53-241:69" name="attribute">
                    <source xsi:type="ocl:VariableExp" location="241:53-241:57" referredVariable="/41"/>
                  </thenExpression>
                  <condition xsi:type="ocl:OperatorCallExp" location="241:10-241:47" operationName="not">
                    <source xsi:type="ocl:OperationCallExp" location="241:14-241:47" operationName="oclIsUndefined">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="241:14-241:30" name="attribute">
                        <source xsi:type="ocl:VariableExp" location="241:14-241:18" referredVariable="/40"/>
                      </source>
                    </source>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="242:7-267:13">
                    <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="242:53-242:69" name="operation">
                      <source xsi:type="ocl:VariableExp" location="242:53-242:57" referredVariable="/43"/>
                    </thenExpression>
                    <condition xsi:type="ocl:OperatorCallExp" location="242:10-242:47" operationName="not">
                      <source xsi:type="ocl:OperationCallExp" location="242:14-242:47" operationName="oclIsUndefined">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="242:14-242:30" name="operation">
                          <source xsi:type="ocl:VariableExp" location="242:14-242:18" referredVariable="/42"/>
                        </source>
                      </source>
                    </condition>
                    <elseExpression xsi:type="ocl:IfExp" location="243:7-267:7">
                      <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="244:8-244:32" name="initializedVariable">
                        <source xsi:type="ocl:VariableExp" location="244:8-244:12" referredVariable="/45"/>
                      </thenExpression>
                      <condition xsi:type="ocl:OperatorCallExp" location="243:10-243:55" operationName="not">
                        <source xsi:type="ocl:OperationCallExp" location="243:14-243:55" operationName="oclIsUndefined">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="243:14-243:38" name="initializedVariable">
                            <source xsi:type="ocl:VariableExp" location="243:14-243:18" referredVariable="/44"/>
                          </source>
                        </source>
                      </condition>
                      <elseExpression xsi:type="ocl:IfExp" location="245:7-266:43">
                        <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="245:57-245:77" name="parentOperation">
                          <source xsi:type="ocl:VariableExp" location="245:57-245:61" referredVariable="/47"/>
                        </thenExpression>
                        <condition xsi:type="ocl:OperatorCallExp" location="245:10-245:51" operationName="not">
                          <source xsi:type="ocl:OperationCallExp" location="245:14-245:51" operationName="oclIsUndefined">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="245:14-245:34" name="parentOperation">
                              <source xsi:type="ocl:VariableExp" location="245:14-245:18" referredVariable="/46"/>
                            </source>
                          </source>
                        </condition>
                        <elseExpression xsi:type="ocl:IfExp" location="246:7-266:37">
                          <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="246:49-246:61" name="loopExp">
                            <source xsi:type="ocl:VariableExp" location="246:49-246:53" referredVariable="/49"/>
                          </thenExpression>
                          <condition xsi:type="ocl:OperatorCallExp" location="246:10-246:43" operationName="not">
                            <source xsi:type="ocl:OperationCallExp" location="246:14-246:43" operationName="oclIsUndefined">
                              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="246:14-246:26" name="loopExp">
                                <source xsi:type="ocl:VariableExp" location="246:14-246:18" referredVariable="/48"/>
                              </source>
                            </source>
                          </condition>
                          <elseExpression xsi:type="ocl:IfExp" location="247:7-266:31">
                            <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="247:48-247:59" name="letExp">
                              <source xsi:type="ocl:VariableExp" location="247:48-247:52" referredVariable="/51"/>
                            </thenExpression>
                            <condition xsi:type="ocl:OperatorCallExp" location="247:10-247:42" operationName="not">
                              <source xsi:type="ocl:OperationCallExp" location="247:14-247:42" operationName="oclIsUndefined">
                                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="247:14-247:25" name="letExp">
                                  <source xsi:type="ocl:VariableExp" location="247:14-247:18" referredVariable="/50"/>
                                </source>
                              </source>
                            </condition>
                            <elseExpression xsi:type="ocl:IfExp" location="248:7-266:25">
                              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="248:52-248:67" name="collection">
                                <source xsi:type="ocl:VariableExp" location="248:52-248:56" referredVariable="/53"/>
                              </thenExpression>
                              <condition xsi:type="ocl:OperatorCallExp" location="248:10-248:46" operationName="not">
                                <source xsi:type="ocl:OperationCallExp" location="248:14-248:46" operationName="oclIsUndefined">
                                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="248:14-248:29" name="collection">
                                    <source xsi:type="ocl:VariableExp" location="248:14-248:18" referredVariable="/52"/>
                                  </source>
                                </source>
                              </condition>
                              <elseExpression xsi:type="ocl:IfExp" location="249:7-266:19">
                                <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="249:57-249:77" name="appliedProperty">
                                  <source xsi:type="ocl:VariableExp" location="249:57-249:61" referredVariable="/55"/>
                                </thenExpression>
                                <condition xsi:type="ocl:OperatorCallExp" location="249:10-249:51" operationName="not">
                                  <source xsi:type="ocl:OperationCallExp" location="249:14-249:51" operationName="oclIsUndefined">
                                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="249:14-249:34" name="appliedProperty">
                                      <source xsi:type="ocl:VariableExp" location="249:14-249:18" referredVariable="/54"/>
                                    </source>
                                  </source>
                                </condition>
                                <elseExpression xsi:type="ocl:IfExp" location="250:7-266:13">
                                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="251:8-251:70" operationName="first">
                                    <source xsi:type="ocl:IteratorExp" location="251:8-251:61" name="select">
                                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="251:8-251:32" name="allInPatterns">
                                        <source xsi:type="ocl:VariableExp" location="251:8-251:18" referredVariable="/58"/>
                                      </source>
                                      <body xsi:type="ocl:OperatorCallExp" location="251:45-251:60" operationName="=">
                                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="251:45-251:53" name="filter">
                                          <source xsi:type="ocl:VariableExp" location="251:45-251:46" referredVariable="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                                        </source>
                                        <arguments xsi:type="ocl:VariableExp" location="251:56-251:60" referredVariable="/59"/>
                                      </body>
                                      <iterators location="251:41-251:42" varName="e" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                                    </source>
                                  </thenExpression>
                                  <condition xsi:type="ocl:IteratorExp" location="250:10-250:63" name="exists">
                                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="250:10-250:34" name="allInPatterns">
                                      <source xsi:type="ocl:VariableExp" location="250:10-250:20" referredVariable="/56"/>
                                    </source>
                                    <body xsi:type="ocl:OperatorCallExp" location="250:47-250:62" operationName="=">
                                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="250:47-250:55" name="filter">
                                        <source xsi:type="ocl:VariableExp" location="250:47-250:48" referredVariable="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                                      </source>
                                      <arguments xsi:type="ocl:VariableExp" location="250:58-250:62" referredVariable="/57"/>
                                    </body>
                                    <iterators location="250:43-250:44" varName="e" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                                  </condition>
                                  <elseExpression xsi:type="ocl:IfExp" location="252:7-266:7">
                                    <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="253:8-253:67" operationName="first">
                                      <source xsi:type="ocl:IteratorExp" location="253:8-253:58" name="select">
                                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="253:8-253:30" name="allBindings">
                                          <source xsi:type="ocl:VariableExp" location="253:8-253:18" referredVariable="/62"/>
                                        </source>
                                        <body xsi:type="ocl:OperatorCallExp" location="253:43-253:57" operationName="=">
                                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="253:43-253:50" name="value">
                                            <source xsi:type="ocl:VariableExp" location="253:43-253:44" referredVariable="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@iterators.0"/>
                                          </source>
                                          <arguments xsi:type="ocl:VariableExp" location="253:53-253:57" referredVariable="/63"/>
                                        </body>
                                        <iterators location="253:39-253:40" varName="e" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source/@source"/>
                                      </source>
                                    </thenExpression>
                                    <condition xsi:type="ocl:IteratorExp" location="252:10-252:60" name="exists">
                                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="252:10-252:32" name="allBindings">
                                        <source xsi:type="ocl:VariableExp" location="252:10-252:20" referredVariable="/60"/>
                                      </source>
                                      <body xsi:type="ocl:OperatorCallExp" location="252:45-252:59" operationName="=">
                                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="252:45-252:52" name="value">
                                          <source xsi:type="ocl:VariableExp" location="252:45-252:46" referredVariable="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@iterators.0"/>
                                        </source>
                                        <arguments xsi:type="ocl:VariableExp" location="252:55-252:59" referredVariable="/61"/>
                                      </body>
                                      <iterators location="252:41-252:42" varName="e" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source/@source"/>
                                    </condition>
                                    <elseExpression xsi:type="ocl:IfExp" location="255:3-265:8">
                                      <thenExpression xsi:type="ocl:IfExp" location="257:4-262:9">
                                        <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="259:5-259:24" name="queryElt">
                                          <source xsi:type="ocl:VariableExp" location="259:5-259:15" referredVariable="/67"/>
                                        </thenExpression>
                                        <condition xsi:type="ocl:OperatorCallExp" location="257:7-257:38" operationName="=">
                                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="257:7-257:31" name="body">
                                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="257:7-257:26" name="queryElt">
                                              <source xsi:type="ocl:VariableExp" location="257:7-257:17" referredVariable="/65"/>
                                            </source>
                                          </source>
                                          <arguments xsi:type="ocl:VariableExp" location="257:34-257:38" referredVariable="/66"/>
                                        </condition>
                                        <elseExpression xsi:type="ocl:OclUndefinedExp" location="261:5-261:17"/>
                                      </thenExpression>
                                      <condition xsi:type="ocl:OperatorCallExp" location="255:6-255:46" operationName="not">
                                        <source xsi:type="ocl:OperationCallExp" location="255:10-255:46" operationName="oclIsUndefined">
                                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="255:10-255:29" name="queryElt">
                                            <source xsi:type="ocl:VariableExp" location="255:10-255:20" referredVariable="/64"/>
                                          </source>
                                        </source>
                                      </condition>
                                      <elseExpression xsi:type="ocl:OclUndefinedExp" location="264:4-264:16"/>
                                    </elseExpression>
                                  </elseExpression>
                                </elseExpression>
                              </elseExpression>
                            </elseExpression>
                          </elseExpression>
                        </elseExpression>
                      </elseExpression>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </elseExpression>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="237:60-237:71" name="Element" model="/2"/>
        </feature>
        <context_ location="237:8-237:33">
          <context_ xsi:type="ocl:OclModelElement" location="237:16-237:33" name="OclExpression" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="284:1-318:8">
      <commentsBefore>-- This helper computes a sequence containing the VariableDeclarations that</commentsBefore>
      <commentsBefore>-- precede the contextual VariableDeclaration in its namespace.</commentsBefore>
      <commentsBefore>-- If the contextual VariableDeclaration is a PatternElement, the helper only</commentsBefore>
      <commentsBefore>-- returns this VD.</commentsBefore>
      <commentsBefore>-- Otherwise, it computes the container of the contextual VD. If the container</commentsBefore>
      <commentsBefore>-- is a LetExp, it returns a Sequence composed of the VD, and the results of</commentsBefore>
      <commentsBefore>-- the calls of the getUpD helper on the calculated container.</commentsBefore>
      <commentsBefore>-- If the container is an IteratorExp, the helper returns a Sequence composed</commentsBefore>
      <commentsBefore>-- of the VD and the results of the call of getUpD on the computed container.</commentsBefore>
      <commentsBefore>-- If the container is an IterateExp, the helper a Sequence containing the same</commentsBefore>
      <commentsBefore>-- elements that the one computed for an IteratorExp.</commentsBefore>
      <commentsBefore>-- Otherwise, the helper returns the only contextual VD as default value.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!VariableDeclaration</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing the VariableDeclarations that are</commentsAfter>
      <commentsAfter>-- defined higher than the contextual OclExpression in its namespace tree.</commentsAfter>
      <commentsAfter>-- The helper first computes the container of the contextual OclExp. If this</commentsAfter>
      <commentsAfter>-- container is undefined, it retuns an empty sequence.</commentsAfter>
      <commentsAfter>-- Otherwise, if this container is not an OclExpression:</commentsAfter>
      <commentsAfter>--  * If the container is a RuleVariableDeclaration, the helper returns a</commentsAfter>
      <commentsAfter>--    sequence containing all the named elements of the rule that contains this</commentsAfter>
      <commentsAfter>--    InPattern.</commentsAfter>
      <commentsAfter>--  * If the container is a Binding, the helper returns a sequence containing</commentsAfter>
      <commentsAfter>--    all the named elements of the rule that contains this Binding.</commentsAfter>
      <commentsAfter>-- Otherwise, if the computed container is an OclExpression:</commentsAfter>
      <commentsAfter>--  * If the container is a LetExp, the helper returns a sequence composed of</commentsAfter>
      <commentsAfter>--    the LetExp variable and the result of its recursive call on the LetExp.</commentsAfter>
      <commentsAfter>--  * If the container is an IfExp, the helper returns a sequence composed of</commentsAfter>
      <commentsAfter>--    the result of its recursive call on the IfExp.</commentsAfter>
      <commentsAfter>--  * If the container is an IteratorExp, if the contextual OclExp is the</commentsAfter>
      <commentsAfter>--    source of the IteratorExp then the helper returns the result of its</commentsAfter>
      <commentsAfter>--    recursive call on the IteratorExp, else it returns this result with the</commentsAfter>
      <commentsAfter>--    &quot;iterators&quot; elements of the IteratorExp.</commentsAfter>
      <commentsAfter>--  * If the container is an IterateExp, the helper returns the same sequences</commentsAfter>
      <commentsAfter>--    that for an IteratorExp, with the additional &quot;result&quot; element in case the</commentsAfter>
      <commentsAfter>--    contextual OclExp is not the source of the IterateExp.</commentsAfter>
      <commentsAfter>-- Otherwise, the helper returns an empty sequence as default value.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
      <definition location="284:8-318:7">
        <feature xsi:type="ocl:Operation" location="285:7-318:7" name="getDeclarations">
          <returnType xsi:type="ocl:SequenceType" location="285:27-285:60">
            <elementType xsi:type="ocl:OclModelElement" location="285:36-285:59" name="VariableDeclaration" model="/2"/>
          </returnType>
          <body xsi:type="ocl:IfExp" location="286:2-318:7">
            <thenExpression xsi:type="ocl:SequenceExp" location="288:3-288:17">
              <elements xsi:type="ocl:VariableExp" location="288:12-288:16" referredVariable="/69"/>
            </thenExpression>
            <condition xsi:type="ocl:OperationCallExp" location="286:5-286:41" operationName="oclIsKindOf">
              <source xsi:type="ocl:VariableExp" location="286:5-286:9" referredVariable="/68"/>
              <arguments xsi:type="ocl:OclModelElement" location="286:22-286:40" name="PatternElement" model="/2"/>
            </condition>
            <elseExpression xsi:type="ocl:LetExp" location="290:3-317:8">
              <variable location="290:7-290:56" varName="container" variableExp="/0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@condition/@source /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@thenExpression/@source/@elements.1/@source /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@condition/@source /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@thenExpression/@source/@elements.1/@source /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@condition/@source /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.1/@source">
                <type xsi:type="ocl:OclModelElement" location="290:19-290:30" name="Element" model="/2"/>
                <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="290:33-290:56" name="immediateComposite">
                  <source xsi:type="ocl:VariableExp" location="290:33-290:37" referredVariable="/70"/>
                </initExpression>
              </variable>
              <in_ xsi:type="ocl:IfExp" location="291:3-317:8">
                <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="293:4-296:16" operationName="flatten">
                  <source xsi:type="ocl:SequenceExp" location="293:4-296:5">
                    <elements xsi:type="ocl:VariableExp" location="294:5-294:9" referredVariable="/71"/>
                    <elements xsi:type="ocl:OperationCallExp" location="295:5-295:23" operationName="getUpD">
                      <source xsi:type="ocl:VariableExp" location="295:5-295:14" referredVariable="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                    </elements>
                  </source>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="291:6-291:39" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="291:6-291:15" referredVariable="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="291:28-291:38" name="LetExp" model="/2"/>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="298:4-316:9">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="300:5-303:17" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="300:5-303:6">
                      <elements xsi:type="ocl:VariableExp" location="301:6-301:10" referredVariable="/72"/>
                      <elements xsi:type="ocl:OperationCallExp" location="302:6-302:24" operationName="getUpD">
                        <source xsi:type="ocl:VariableExp" location="302:6-302:15" referredVariable="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                      </elements>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="298:7-298:45" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="298:7-298:16" referredVariable="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="298:29-298:44" name="IteratorExp" model="/2"/>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="305:5-315:10">
                    <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="307:6-310:18" operationName="flatten">
                      <source xsi:type="ocl:SequenceExp" location="307:6-310:7">
                        <elements xsi:type="ocl:VariableExp" location="308:7-308:11" referredVariable="/73"/>
                        <elements xsi:type="ocl:OperationCallExp" location="309:7-309:25" operationName="getUpD">
                          <source xsi:type="ocl:VariableExp" location="309:7-309:16" referredVariable="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                        </elements>
                      </source>
                    </thenExpression>
                    <condition xsi:type="ocl:OperationCallExp" location="305:8-305:45" operationName="oclIsTypeOf">
                      <source xsi:type="ocl:VariableExp" location="305:8-305:17" referredVariable="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable"/>
                      <arguments xsi:type="ocl:OclModelElement" location="305:30-305:44" name="IterateExp" model="/2"/>
                    </condition>
                    <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="312:6-314:18" operationName="flatten">
                      <source xsi:type="ocl:SequenceExp" location="312:6-314:7">
                        <elements xsi:type="ocl:VariableExp" location="313:7-313:11" referredVariable="/74"/>
                      </source>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </in_>
            </elseExpression>
          </body>
        </feature>
        <context_ location="284:8-284:39">
          <context_ xsi:type="ocl:OclModelElement" location="284:16-284:39" name="VariableDeclaration" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="346:1-402:38">
      <commentsBefore>-- This helper computes a sequence containing the VariableDeclarations that are</commentsBefore>
      <commentsBefore>-- defined higher than the contextual OclExpression in its namespace tree.</commentsBefore>
      <commentsBefore>-- The helper first computes the container of the contextual OclExp. If this</commentsBefore>
      <commentsBefore>-- container is undefined, it retuns an empty sequence.</commentsBefore>
      <commentsBefore>-- Otherwise, if this container is not an OclExpression:</commentsBefore>
      <commentsBefore>--  * If the container is a RuleVariableDeclaration, the helper returns a</commentsBefore>
      <commentsBefore>--    sequence containing all the named elements of the rule that contains this</commentsBefore>
      <commentsBefore>--    InPattern.</commentsBefore>
      <commentsBefore>--  * If the container is a Binding, the helper returns a sequence containing</commentsBefore>
      <commentsBefore>--    all the named elements of the rule that contains this Binding.</commentsBefore>
      <commentsBefore>-- Otherwise, if the computed container is an OclExpression:</commentsBefore>
      <commentsBefore>--  * If the container is a LetExp, the helper returns a sequence composed of</commentsBefore>
      <commentsBefore>--    the LetExp variable and the result of its recursive call on the LetExp.</commentsBefore>
      <commentsBefore>--  * If the container is an IfExp, the helper returns a sequence composed of</commentsBefore>
      <commentsBefore>--    the result of its recursive call on the IfExp.</commentsBefore>
      <commentsBefore>--  * If the container is an IteratorExp, if the contextual OclExp is the</commentsBefore>
      <commentsBefore>--    source of the IteratorExp then the helper returns the result of its</commentsBefore>
      <commentsBefore>--    recursive call on the IteratorExp, else it returns this result with the</commentsBefore>
      <commentsBefore>--    &quot;iterators&quot; elements of the IteratorExp.</commentsBefore>
      <commentsBefore>--  * If the container is an IterateExp, the helper returns the same sequences</commentsBefore>
      <commentsBefore>--    that for an IteratorExp, with the additional &quot;result&quot; element in case the</commentsBefore>
      <commentsBefore>--    contextual OclExp is not the source of the IterateExp.</commentsBefore>
      <commentsBefore>-- Otherwise, the helper returns an empty sequence as default value.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
      <commentsAfter>-- This helper computes a sequence containing the VariableDeclarations that are</commentsAfter>
      <commentsAfter>-- defined lower than the contextual OclExpression in its namespace tree.</commentsAfter>
      <commentsAfter>-- If the contextual OclExpression is a LetExp, the helper returns a sequence</commentsAfter>
      <commentsAfter>-- composed of the LetExp variable and the result of its recursive call on the</commentsAfter>
      <commentsAfter>-- &quot;in_&quot; reference of the LetExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if the contextual OclExpression is a IfExp, the helper returns a</commentsAfter>
      <commentsAfter>-- sequence composed of the results of its recursive calls on the &quot;condition&quot;,</commentsAfter>
      <commentsAfter>-- &quot;thenExpression&quot; and &quot;elseExpression&quot; references of the IfExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if the contextual OclExpression is an IteratorExp, the helper</commentsAfter>
      <commentsAfter>-- returns a sequence composed of the IteratorExp iterators along with the</commentsAfter>
      <commentsAfter>-- results of its recursive calls on the &quot;source&quot; and the &quot;body&quot; references</commentsAfter>
      <commentsAfter>-- of the IteratorExp.</commentsAfter>
      <commentsAfter>-- Otherwise, if the contextual OclExpression is an IterateExp, the helper</commentsAfter>
      <commentsAfter>-- returns the sequence returned for an IteratorExp with its additional result</commentsAfter>
      <commentsAfter>-- element.</commentsAfter>
      <commentsAfter>-- Otherwise, the helper returns an empty sequence as default value.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
      <commentsAfter>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsAfter>
      <commentsAfter>--helper context ATL!OclExpression</commentsAfter>
      <commentsAfter>--	def: getDownD() : Sequence(ATL!VariableDeclaration) =</commentsAfter>
      <commentsAfter>--	if self.oclIsTypeOf(ATL!LetExp) then</commentsAfter>
      <commentsAfter>--		Sequence{</commentsAfter>
      <commentsAfter>--			self.variable,</commentsAfter>
      <commentsAfter>--			self.in_.getDownD()</commentsAfter>
      <commentsAfter>--		}->flatten()</commentsAfter>
      <commentsAfter>--	else if self.oclIsTypeOf(ATL!IfExp) then</commentsAfter>
      <commentsAfter>--		Sequence{</commentsAfter>
      <commentsAfter>--			self.condition.getDownD(),</commentsAfter>
      <commentsAfter>--			self.thenExpression.getDownD(),</commentsAfter>
      <commentsAfter>--			self.elseExpression.getDownD()</commentsAfter>
      <commentsAfter>--		}->flatten()</commentsAfter>
      <commentsAfter>--	else if self.oclIsTypeOf(ATL!IteratorExp) then</commentsAfter>
      <commentsAfter>--		Sequence{</commentsAfter>
      <commentsAfter>--			self.iterators,</commentsAfter>
      <commentsAfter>--			self.source.getDownD(),</commentsAfter>
      <commentsAfter>--			self.body.getDownD()</commentsAfter>
      <commentsAfter>--		}->flatten()</commentsAfter>
      <commentsAfter>--	else if self.oclIsTypeOf(ATL!IterateExp) then</commentsAfter>
      <commentsAfter>--		Sequence{</commentsAfter>
      <commentsAfter>--			self.iterators,</commentsAfter>
      <commentsAfter>--			self.result,</commentsAfter>
      <commentsAfter>--			self.source.getDownD(),</commentsAfter>
      <commentsAfter>--			self.body.getDownD()</commentsAfter>
      <commentsAfter>--		}->flatten()</commentsAfter>
      <commentsAfter>--	else Sequence{}</commentsAfter>
      <commentsAfter>--	endif endif endif endif;</commentsAfter>
      <commentsAfter>-- This helper returns the root composite (container) of the contextual</commentsAfter>
      <commentsAfter>-- OclExpression. For this purpose, the helper first computes the immediate</commentsAfter>
      <commentsAfter>-- composite of the contextual OclExpression.</commentsAfter>
      <commentsAfter>-- If this container is undefined, the helper returns OclUndefined.</commentsAfter>
      <commentsAfter>-- Otherwise, if it is a kind of OclExpression, the helper returns the value</commentsAfter>
      <commentsAfter>-- provided by its recursive call on the computed container.</commentsAfter>
      <commentsAfter>-- Finally, if this container is not an OclExpression, the root composite has</commentsAfter>
      <commentsAfter>-- been reached (Binding/InPattern/Operation/Query/Attribute) and is returned.</commentsAfter>
      <commentsAfter>-- CONTEXT:	ATL!OclExpression</commentsAfter>
      <commentsAfter>-- RETURN:	ATL!Element</commentsAfter>
      <definition location="346:8-402:37">
        <feature xsi:type="ocl:Operation" location="347:7-402:37" name="getUpD">
          <returnType xsi:type="ocl:SequenceType" location="347:18-347:51">
            <elementType xsi:type="ocl:OclModelElement" location="347:27-347:50" name="VariableDeclaration" model="/2"/>
          </returnType>
          <body xsi:type="ocl:LetExp" location="348:2-402:37">
            <variable location="348:6-348:55" varName="container" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@condition/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@thenExpression/@source/@elements.0/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@elseExpression/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@elseExpression/@thenExpression/@source/@elements.0/@source/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.0/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.1/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@elements.0/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@thenExpression/@source/@elements.0/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.0/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.1/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@thenExpression/@source/@elements.0/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.0/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.1/@source /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@elseExpression/@source/@elements.2/@source">
              <type xsi:type="ocl:OclModelElement" location="348:18-348:29" name="Element" model="/2"/>
              <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="348:32-348:55" name="immediateComposite">
                <source xsi:type="ocl:VariableExp" location="348:32-348:36" referredVariable="/75"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:IfExp" location="349:2-402:37">
              <thenExpression xsi:type="ocl:SequenceExp" location="350:3-350:13"/>
              <condition xsi:type="ocl:OperationCallExp" location="349:5-349:31" operationName="oclIsUndefined">
                <source xsi:type="ocl:VariableExp" location="349:5-349:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="351:7-402:31">
                <thenExpression xsi:type="ocl:IfExp" location="352:3-366:8">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="354:4-356:16" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="354:4-356:5">
                      <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="355:5-355:35" name="namedElements">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="355:5-355:21" name="rule">
                          <source xsi:type="ocl:VariableExp" location="355:5-355:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                        </source>
                      </elements>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="352:6-352:56" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="352:6-352:15" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="352:28-352:55" name="RuleVariableDeclaration" model="/2"/>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="358:4-365:9">
                    <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="360:5-362:17" operationName="flatten">
                      <source xsi:type="ocl:SequenceExp" location="360:5-362:6">
                        <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="361:6-361:54" name="namedElements">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="361:6-361:40" name="rule">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="361:6-361:33" name="outPatternElement">
                              <source xsi:type="ocl:VariableExp" location="361:6-361:15" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                            </source>
                          </source>
                        </elements>
                      </source>
                    </thenExpression>
                    <condition xsi:type="ocl:OperationCallExp" location="358:7-358:41" operationName="oclIsTypeOf">
                      <source xsi:type="ocl:VariableExp" location="358:7-358:16" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                      <arguments xsi:type="ocl:OclModelElement" location="358:29-358:40" name="Binding" model="/2"/>
                    </condition>
                    <elseExpression xsi:type="ocl:SequenceExp" location="364:5-364:15"/>
                  </elseExpression>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="351:10-351:54" operationName="not">
                  <source xsi:type="ocl:OperationCallExp" location="351:14-351:54" operationName="oclIsKindOf">
                    <source xsi:type="ocl:VariableExp" location="351:14-351:23" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="351:36-351:53" name="OclExpression" model="/2"/>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:IfExp" location="367:7-402:25">
                  <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="368:3-371:15" operationName="flatten">
                    <source xsi:type="ocl:SequenceExp" location="368:3-371:4">
                      <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="369:4-369:22" name="variable">
                        <source xsi:type="ocl:VariableExp" location="369:4-369:13" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                      </elements>
                      <elements xsi:type="ocl:OperationCallExp" location="370:4-370:22" operationName="getUpD">
                        <source xsi:type="ocl:VariableExp" location="370:4-370:13" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                      </elements>
                    </source>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="367:10-367:43" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="367:10-367:19" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="367:32-367:42" name="LetExp" model="/2"/>
                  </condition>
                  <elseExpression xsi:type="ocl:IfExp" location="372:7-402:19">
                    <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="373:3-375:15" operationName="flatten">
                      <source xsi:type="ocl:SequenceExp" location="373:3-375:4">
                        <elements xsi:type="ocl:OperationCallExp" location="374:4-374:22" operationName="getUpD">
                          <source xsi:type="ocl:VariableExp" location="374:4-374:13" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                        </elements>
                      </source>
                    </thenExpression>
                    <condition xsi:type="ocl:OperationCallExp" location="372:10-372:42" operationName="oclIsTypeOf">
                      <source xsi:type="ocl:VariableExp" location="372:10-372:19" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                      <arguments xsi:type="ocl:OclModelElement" location="372:32-372:41" name="IfExp" model="/2"/>
                    </condition>
                    <elseExpression xsi:type="ocl:IfExp" location="376:7-402:13">
                      <thenExpression xsi:type="ocl:IfExp" location="377:3-387:8">
                        <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="379:4-381:16" operationName="flatten">
                          <source xsi:type="ocl:SequenceExp" location="379:4-381:5">
                            <elements xsi:type="ocl:OperationCallExp" location="380:5-380:23" operationName="getUpD">
                              <source xsi:type="ocl:VariableExp" location="380:5-380:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                          </source>
                        </thenExpression>
                        <condition xsi:type="ocl:OperatorCallExp" location="377:6-377:29" operationName="=">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="377:6-377:22" name="source">
                            <source xsi:type="ocl:VariableExp" location="377:6-377:15" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                          </source>
                          <arguments xsi:type="ocl:VariableExp" location="377:25-377:29" referredVariable="/76"/>
                        </condition>
                        <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="383:4-386:16" operationName="flatten">
                          <source xsi:type="ocl:SequenceExp" location="383:4-386:5">
                            <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="384:5-384:24" name="iterators">
                              <source xsi:type="ocl:VariableExp" location="384:5-384:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                            <elements xsi:type="ocl:OperationCallExp" location="385:5-385:23" operationName="getUpD">
                              <source xsi:type="ocl:VariableExp" location="385:5-385:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                            </elements>
                          </source>
                        </elseExpression>
                      </thenExpression>
                      <condition xsi:type="ocl:OperationCallExp" location="376:10-376:48" operationName="oclIsTypeOf">
                        <source xsi:type="ocl:VariableExp" location="376:10-376:19" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                        <arguments xsi:type="ocl:OclModelElement" location="376:32-376:47" name="IteratorExp" model="/2"/>
                      </condition>
                      <elseExpression xsi:type="ocl:IfExp" location="388:7-402:7">
                        <thenExpression xsi:type="ocl:IfExp" location="389:3-400:8">
                          <thenExpression xsi:type="ocl:CollectionOperationCallExp" location="391:4-393:16" operationName="flatten">
                            <source xsi:type="ocl:SequenceExp" location="391:4-393:5">
                              <elements xsi:type="ocl:OperationCallExp" location="392:5-392:23" operationName="getUpD">
                                <source xsi:type="ocl:VariableExp" location="392:5-392:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                              </elements>
                            </source>
                          </thenExpression>
                          <condition xsi:type="ocl:OperatorCallExp" location="389:6-389:29" operationName="=">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="389:6-389:22" name="source">
                              <source xsi:type="ocl:VariableExp" location="389:6-389:15" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                            </source>
                            <arguments xsi:type="ocl:VariableExp" location="389:25-389:29" referredVariable="/77"/>
                          </condition>
                          <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="395:4-399:16" operationName="flatten">
                            <source xsi:type="ocl:SequenceExp" location="395:4-399:5">
                              <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="396:5-396:24" name="iterators">
                                <source xsi:type="ocl:VariableExp" location="396:5-396:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                              </elements>
                              <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="397:5-397:21" name="result">
                                <source xsi:type="ocl:VariableExp" location="397:5-397:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                              </elements>
                              <elements xsi:type="ocl:OperationCallExp" location="398:5-398:23" operationName="getUpD">
                                <source xsi:type="ocl:VariableExp" location="398:5-398:14" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                              </elements>
                            </source>
                          </elseExpression>
                        </thenExpression>
                        <condition xsi:type="ocl:OperationCallExp" location="388:10-388:47" operationName="oclIsTypeOf">
                          <source xsi:type="ocl:VariableExp" location="388:10-388:19" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                          <arguments xsi:type="ocl:OclModelElement" location="388:32-388:46" name="IterateExp" model="/2"/>
                        </condition>
                        <elseExpression xsi:type="ocl:SequenceExp" location="401:7-401:17"/>
                      </elseExpression>
                    </elseExpression>
                  </elseExpression>
                </elseExpression>
              </elseExpression>
            </in_>
          </body>
        </feature>
        <context_ location="346:8-346:33">
          <context_ xsi:type="ocl:OclModelElement" location="346:16-346:33" name="OclExpression" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="463:1-476:8">
      <commentsBefore>-- This helper computes a sequence containing the VariableDeclarations that are</commentsBefore>
      <commentsBefore>-- defined lower than the contextual OclExpression in its namespace tree.</commentsBefore>
      <commentsBefore>-- If the contextual OclExpression is a LetExp, the helper returns a sequence</commentsBefore>
      <commentsBefore>-- composed of the LetExp variable and the result of its recursive call on the</commentsBefore>
      <commentsBefore>-- &quot;in_&quot; reference of the LetExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if the contextual OclExpression is a IfExp, the helper returns a</commentsBefore>
      <commentsBefore>-- sequence composed of the results of its recursive calls on the &quot;condition&quot;,</commentsBefore>
      <commentsBefore>-- &quot;thenExpression&quot; and &quot;elseExpression&quot; references of the IfExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if the contextual OclExpression is an IteratorExp, the helper</commentsBefore>
      <commentsBefore>-- returns a sequence composed of the IteratorExp iterators along with the</commentsBefore>
      <commentsBefore>-- results of its recursive calls on the &quot;source&quot; and the &quot;body&quot; references</commentsBefore>
      <commentsBefore>-- of the IteratorExp.</commentsBefore>
      <commentsBefore>-- Otherwise, if the contextual OclExpression is an IterateExp, the helper</commentsBefore>
      <commentsBefore>-- returns the sequence returned for an IteratorExp with its additional result</commentsBefore>
      <commentsBefore>-- element.</commentsBefore>
      <commentsBefore>-- Otherwise, the helper returns an empty sequence as default value.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
      <commentsBefore>-- RETURN:	Sequence(ATL!VariableDeclaration)</commentsBefore>
      <commentsBefore>--helper context ATL!OclExpression</commentsBefore>
      <commentsBefore>--	def: getDownD() : Sequence(ATL!VariableDeclaration) =</commentsBefore>
      <commentsBefore>--	if self.oclIsTypeOf(ATL!LetExp) then</commentsBefore>
      <commentsBefore>--		Sequence{</commentsBefore>
      <commentsBefore>--			self.variable,</commentsBefore>
      <commentsBefore>--			self.in_.getDownD()</commentsBefore>
      <commentsBefore>--		}->flatten()</commentsBefore>
      <commentsBefore>--	else if self.oclIsTypeOf(ATL!IfExp) then</commentsBefore>
      <commentsBefore>--		Sequence{</commentsBefore>
      <commentsBefore>--			self.condition.getDownD(),</commentsBefore>
      <commentsBefore>--			self.thenExpression.getDownD(),</commentsBefore>
      <commentsBefore>--			self.elseExpression.getDownD()</commentsBefore>
      <commentsBefore>--		}->flatten()</commentsBefore>
      <commentsBefore>--	else if self.oclIsTypeOf(ATL!IteratorExp) then</commentsBefore>
      <commentsBefore>--		Sequence{</commentsBefore>
      <commentsBefore>--			self.iterators,</commentsBefore>
      <commentsBefore>--			self.source.getDownD(),</commentsBefore>
      <commentsBefore>--			self.body.getDownD()</commentsBefore>
      <commentsBefore>--		}->flatten()</commentsBefore>
      <commentsBefore>--	else if self.oclIsTypeOf(ATL!IterateExp) then</commentsBefore>
      <commentsBefore>--		Sequence{</commentsBefore>
      <commentsBefore>--			self.iterators,</commentsBefore>
      <commentsBefore>--			self.result,</commentsBefore>
      <commentsBefore>--			self.source.getDownD(),</commentsBefore>
      <commentsBefore>--			self.body.getDownD()</commentsBefore>
      <commentsBefore>--		}->flatten()</commentsBefore>
      <commentsBefore>--	else Sequence{}</commentsBefore>
      <commentsBefore>--	endif endif endif endif;</commentsBefore>
      <commentsBefore>-- This helper returns the root composite (container) of the contextual</commentsBefore>
      <commentsBefore>-- OclExpression. For this purpose, the helper first computes the immediate</commentsBefore>
      <commentsBefore>-- composite of the contextual OclExpression.</commentsBefore>
      <commentsBefore>-- If this container is undefined, the helper returns OclUndefined.</commentsBefore>
      <commentsBefore>-- Otherwise, if it is a kind of OclExpression, the helper returns the value</commentsBefore>
      <commentsBefore>-- provided by its recursive call on the computed container.</commentsBefore>
      <commentsBefore>-- Finally, if this container is not an OclExpression, the root composite has</commentsBefore>
      <commentsBefore>-- been reached (Binding/InPattern/Operation/Query/Attribute) and is returned.</commentsBefore>
      <commentsBefore>-- CONTEXT:	ATL!OclExpression</commentsBefore>
      <commentsBefore>-- RETURN:	ATL!Element</commentsBefore>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- RULES ----------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- Rule 'FreeVariableIsSelfOrThisModule'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each VariableDeclaration that has</commentsAfter>
      <commentsAfter>-- no composite, and whose name is different from both 'self' and 'thisModule'.</commentsAfter>
      <commentsAfter>-- The VariableExps that have not been previously declared in an ATL file are</commentsAfter>
      <commentsAfter>-- associated with a new VariableDeclaration without any composite in the</commentsAfter>
      <commentsAfter>-- correspoding ATL model.</commentsAfter>
      <definition location="463:8-476:7">
        <feature xsi:type="ocl:Operation" location="463:39-476:7" name="getRootComposite">
          <returnType xsi:type="ocl:OclModelElement" location="463:60-463:71" name="Element" model="/2"/>
          <body xsi:type="ocl:LetExp" location="464:2-476:7">
            <variable location="464:6-464:55" varName="container" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@condition/@source /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@condition/@source /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@source /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@elseExpression">
              <type xsi:type="ocl:OclModelElement" location="464:18-464:29" name="Element" model="/2"/>
              <initExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="464:32-464:55" name="immediateComposite">
                <source xsi:type="ocl:VariableExp" location="464:32-464:36" referredVariable="/78"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:IfExp" location="466:2-476:7">
              <thenExpression xsi:type="ocl:OclUndefinedExp" location="468:3-468:15"/>
              <condition xsi:type="ocl:OperationCallExp" location="466:5-466:31" operationName="oclIsUndefined">
                <source xsi:type="ocl:VariableExp" location="466:5-466:14" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
              </condition>
              <elseExpression xsi:type="ocl:IfExp" location="470:3-475:8">
                <thenExpression xsi:type="ocl:OperationCallExp" location="472:4-472:32" operationName="getRootComposite">
                  <source xsi:type="ocl:VariableExp" location="472:4-472:13" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="470:6-470:46" operationName="oclIsKindOf">
                  <source xsi:type="ocl:VariableExp" location="470:6-470:15" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="470:28-470:45" name="OclExpression" model="/2"/>
                </condition>
                <elseExpression xsi:type="ocl:VariableExp" location="474:4-474:13" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
              </elseExpression>
            </in_>
          </body>
        </feature>
        <context_ location="463:8-463:33">
          <context_ xsi:type="ocl:OclModelElement" location="463:16-463:33" name="OclExpression" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="489:1-507:2" name="FreeVariableIsSelfOrThisModule">
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- RULES ----------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- Rule 'FreeVariableIsSelfOrThisModule'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each VariableDeclaration that has</commentsBefore>
      <commentsBefore>-- no composite, and whose name is different from both 'self' and 'thisModule'.</commentsBefore>
      <commentsBefore>-- The VariableExps that have not been previously declared in an ATL file are</commentsBefore>
      <commentsBefore>-- associated with a new VariableDeclaration without any composite in the</commentsBefore>
      <commentsBefore>-- correspoding ATL model.</commentsBefore>
      <commentsAfter>-- Rule 'ModelNameIsUnique'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem when there exists models that have</commentsAfter>
      <commentsAfter>-- the same name that the checked model.</commentsAfter>
      <outPattern location="495:2-506:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="496:3-506:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="496:7-496:22" name="Problem" model="/1"/>
          <bindings location="497:4-497:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="497:16-497:22" name="error"/>
          </bindings>
          <bindings location="498:4-504:10" propertyName="location">
            <value xsi:type="ocl:IfExp" location="499:5-504:10">
              <thenExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="501:6-501:16" name="location">
                <source xsi:type="ocl:VariableExp" location="501:6-501:7" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
              </thenExpression>
              <condition xsi:type="ocl:CollectionOperationCallExp" location="499:8-499:32" operationName="isEmpty">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="499:8-499:21" name="variableExp">
                  <source xsi:type="ocl:VariableExp" location="499:8-499:9" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="503:6-503:37" name="location">
                <source xsi:type="ocl:CollectionOperationCallExp" location="503:6-503:28" operationName="first">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="503:6-503:19" name="variableExp">
                    <source xsi:type="ocl:VariableExp" location="503:6-503:7" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
                  </source>
                </source>
              </elseExpression>
            </value>
          </bindings>
          <bindings location="505:4-505:61" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="505:19-505:61" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="505:19-505:44" operationName="+">
                <source xsi:type="ocl:StringExp" location="505:19-505:32" stringSymbol="variable '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="505:35-505:44" name="varName">
                  <source xsi:type="ocl:VariableExp" location="505:35-505:36" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="505:47-505:61" stringSymbol="' undefined"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="490:2-494:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="491:3-491:30" varName="s" variableExp="/0/@elements.20/@inPattern/@filter/@source/@source/@source/@source /0/@elements.20/@inPattern/@filter/@source/@arguments.0/@source/@source /0/@elements.20/@inPattern/@filter/@arguments.0/@source/@source /0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@condition/@source/@source /0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@source /0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@source/@source/@source /0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="491:7-491:30" name="VariableDeclaration" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="492:4-493:53" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="492:4-493:23" operationName="and">
            <source xsi:type="ocl:OperationCallExp" location="492:4-492:41" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="492:4-492:24" name="immediateComposite">
                <source xsi:type="ocl:VariableExp" location="492:4-492:5" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="493:4-493:23" operationName="&lt;>">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="493:4-493:13" name="varName">
                <source xsi:type="ocl:VariableExp" location="493:4-493:5" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="493:17-493:23" stringSymbol="self"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="493:28-493:53" operationName="&lt;>">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="493:28-493:37" name="varName">
              <source xsi:type="ocl:VariableExp" location="493:28-493:29" referredVariable="/0/@elements.20/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:StringExp" location="493:41-493:53" stringSymbol="thisModule"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="512:1-523:2" name="ModelNameIsUnique">
      <commentsBefore>-- Rule 'ModelNameIsUnique'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem when there exists models that have</commentsBefore>
      <commentsBefore>-- the same name that the checked model.</commentsBefore>
      <commentsAfter>-- Rule 'RuleNameIsUnique'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem when there exists rules that have</commentsAfter>
      <commentsAfter>-- the same name that the checked rule.</commentsAfter>
      <outPattern location="517:2-522:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="518:3-522:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="518:7-518:22" name="Problem" model="/1"/>
          <bindings location="519:4-519:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="519:16-519:22" name="error"/>
          </bindings>
          <bindings location="520:4-520:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="520:16-520:26" name="location">
              <source xsi:type="ocl:VariableExp" location="520:16-520:17" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="521:4-521:61" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="521:19-521:61" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="521:19-521:38" operationName="+">
                <source xsi:type="ocl:StringExp" location="521:19-521:29" stringSymbol="model '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="521:32-521:38" name="name">
                  <source xsi:type="ocl:VariableExp" location="521:32-521:33" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="521:41-521:61" stringSymbol="' already defined"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="513:2-516:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="514:3-514:19" varName="s" variableExp="/0/@elements.21/@inPattern/@filter/@body/@source/@arguments.0/@source /0/@elements.21/@inPattern/@filter/@body/@arguments.0/@arguments.0 /0/@elements.21/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.21/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="514:7-514:19" name="OclModel" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IteratorExp" location="515:4-515:64" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="515:4-515:24" name="allModels">
            <source xsi:type="ocl:VariableExp" location="515:4-515:14" referredVariable="/79"/>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="515:37-515:63" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="515:37-515:52" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="515:37-515:43" name="name">
                <source xsi:type="ocl:VariableExp" location="515:37-515:38" referredVariable="/0/@elements.21/@inPattern/@filter/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="515:46-515:52" name="name">
                <source xsi:type="ocl:VariableExp" location="515:46-515:47" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="515:57-515:63" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="515:57-515:58" referredVariable="/0/@elements.21/@inPattern/@filter/@iterators.0"/>
              <arguments xsi:type="ocl:VariableExp" location="515:62-515:63" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
            </arguments>
          </body>
          <iterators location="515:33-515:34" varName="e" variableExp="/0/@elements.21/@inPattern/@filter/@body/@source/@source/@source /0/@elements.21/@inPattern/@filter/@body/@arguments.0/@source"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="528:1-539:2" name="RuleNameIsUnique">
      <commentsBefore>-- Rule 'RuleNameIsUnique'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem when there exists rules that have</commentsBefore>
      <commentsBefore>-- the same name that the checked rule.</commentsBefore>
      <commentsAfter>-- Rule 'HelperSignatureIsUnique'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem when there exists helpers that have</commentsAfter>
      <commentsAfter>-- the same signature that the checked helper.</commentsAfter>
      <commentsAfter>-- Note that in current implementation, the helper signature corresponds to the</commentsAfter>
      <commentsAfter>-- name and the context of the helper.</commentsAfter>
      <outPattern location="533:2-538:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="534:3-538:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="534:7-534:22" name="Problem" model="/1"/>
          <bindings location="535:4-535:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="535:16-535:22" name="error"/>
          </bindings>
          <bindings location="536:4-536:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="536:16-536:26" name="location">
              <source xsi:type="ocl:VariableExp" location="536:16-536:17" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="537:4-537:60" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="537:19-537:60" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="537:19-537:37" operationName="+">
                <source xsi:type="ocl:StringExp" location="537:19-537:28" stringSymbol="rule '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="537:31-537:37" name="name">
                  <source xsi:type="ocl:VariableExp" location="537:31-537:32" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="537:40-537:60" stringSymbol="' already defined"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="529:2-532:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="530:3-530:15" varName="s" variableExp="/0/@elements.22/@inPattern/@filter/@body/@source/@arguments.0/@source /0/@elements.22/@inPattern/@filter/@body/@arguments.0/@arguments.0 /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.22/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="530:7-530:15" name="Rule" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IteratorExp" location="531:4-531:63" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="531:4-531:23" name="allRules">
            <source xsi:type="ocl:VariableExp" location="531:4-531:14" referredVariable="/80"/>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="531:36-531:62" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="531:36-531:51" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="531:36-531:42" name="name">
                <source xsi:type="ocl:VariableExp" location="531:36-531:37" referredVariable="/0/@elements.22/@inPattern/@filter/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="531:45-531:51" name="name">
                <source xsi:type="ocl:VariableExp" location="531:45-531:46" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="531:56-531:62" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="531:56-531:57" referredVariable="/0/@elements.22/@inPattern/@filter/@iterators.0"/>
              <arguments xsi:type="ocl:VariableExp" location="531:61-531:62" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
            </arguments>
          </body>
          <iterators location="531:32-531:33" varName="e" variableExp="/0/@elements.22/@inPattern/@filter/@body/@source/@source/@source /0/@elements.22/@inPattern/@filter/@body/@arguments.0/@source"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="546:1-585:2" name="HelperSignatureIsUnique">
      <commentsBefore>-- Rule 'HelperSignatureIsUnique'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem when there exists helpers that have</commentsBefore>
      <commentsBefore>-- the same signature that the checked helper.</commentsBefore>
      <commentsBefore>-- Note that in current implementation, the helper signature corresponds to the</commentsBefore>
      <commentsBefore>-- name and the context of the helper.</commentsBefore>
      <commentsAfter>-- Rule 'BindingNameIsUniqueInPattern'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem when there exists, in a same pattern,</commentsAfter>
      <commentsAfter>-- bindings that have the same name that the checked binding.</commentsAfter>
      <outPattern location="578:2-584:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="579:3-584:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="579:7-579:22" name="Problem" model="/1"/>
          <bindings location="580:4-580:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="580:16-580:22" name="error"/>
          </bindings>
          <bindings location="581:4-581:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="581:16-581:26" name="location">
              <source xsi:type="ocl:VariableExp" location="581:16-581:17" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="582:4-583:30" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="582:19-583:30" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="582:19-582:58" operationName="+">
                <source xsi:type="ocl:StringExp" location="582:19-582:30" stringSymbol="helper '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="582:33-582:58" name="name">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="582:33-582:53" name="feature">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="582:33-582:45" name="definition">
                      <source xsi:type="ocl:VariableExp" location="582:33-582:34" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="583:10-583:30" stringSymbol="' already defined"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="547:2-577:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="548:3-548:17" varName="s" variableExp="/0/@elements.23/@inPattern/@filter/@body/@source/@source/@arguments.0 /0/@elements.23/@inPattern/@filter/@body/@source/@arguments.0/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@condition/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@condition/@source/@source/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@thenExpression/@thenExpression/@source/@source/@source/@source/@source /0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.23/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="548:7-548:17" name="Helper" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IteratorExp" location="549:4-576:6" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="549:4-549:25" name="allHelpers">
            <source xsi:type="ocl:VariableExp" location="549:4-549:14" referredVariable="/81"/>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="551:6-575:8" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="551:6-552:59" operationName="and">
              <source xsi:type="ocl:OperatorCallExp" location="551:6-551:12" operationName="&lt;>">
                <source xsi:type="ocl:VariableExp" location="551:6-551:7" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                <arguments xsi:type="ocl:VariableExp" location="551:11-551:12" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:OperatorCallExp" location="552:6-552:59" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="552:6-552:31" name="name">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="552:6-552:26" name="feature">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="552:6-552:18" name="definition">
                      <source xsi:type="ocl:VariableExp" location="552:6-552:7" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </source>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="552:34-552:59" name="name">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="552:34-552:54" name="feature">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="552:34-552:46" name="definition">
                      <source xsi:type="ocl:VariableExp" location="552:34-552:35" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                    </source>
                  </source>
                </arguments>
              </arguments>
            </source>
            <arguments xsi:type="ocl:IfExp" location="554:7-574:12">
              <thenExpression xsi:type="ocl:IfExp" location="556:8-571:12">
                <thenExpression xsi:type="ocl:IfExp" location="558:7-568:13">
                  <thenExpression xsi:type="ocl:IfExp" location="560:8-565:14">
                    <thenExpression xsi:type="ocl:OperatorCallExp" location="562:10-562:83" operationName="=">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:10-562:45" name="name">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:10-562:40" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:10-562:31" name="context_">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:10-562:22" name="definition">
                              <source xsi:type="ocl:VariableExp" location="562:10-562:11" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                            </source>
                          </source>
                        </source>
                      </source>
                      <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="562:48-562:83" name="name">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:48-562:78" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:48-562:69" name="context_">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="562:48-562:60" name="definition">
                              <source xsi:type="ocl:VariableExp" location="562:48-562:49" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                            </source>
                          </source>
                        </source>
                      </arguments>
                    </thenExpression>
                    <condition xsi:type="ocl:OperatorCallExp" location="560:11-560:67" operationName="not">
                      <source xsi:type="ocl:OperationCallExp" location="560:15-560:67" operationName="oclIsUndefined">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="560:15-560:50" name="name">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="560:15-560:45" name="context_">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="560:15-560:36" name="context_">
                              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="560:15-560:27" name="definition">
                                <source xsi:type="ocl:VariableExp" location="560:15-560:16" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                              </source>
                            </source>
                          </source>
                        </source>
                      </source>
                    </condition>
                    <elseExpression xsi:type="ocl:BooleanExp" location="564:10-564:15"/>
                  </thenExpression>
                  <condition xsi:type="ocl:OperatorCallExp" location="558:10-558:66" operationName="not">
                    <source xsi:type="ocl:OperationCallExp" location="558:14-558:66" operationName="oclIsUndefined">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="558:14-558:49" name="name">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="558:14-558:44" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="558:14-558:35" name="context_">
                            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="558:14-558:26" name="definition">
                              <source xsi:type="ocl:VariableExp" location="558:14-558:15" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                            </source>
                          </source>
                        </source>
                      </source>
                    </source>
                  </condition>
                  <elseExpression xsi:type="ocl:OperationCallExp" location="567:9-567:61" operationName="oclIsUndefined">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="567:9-567:44" name="name">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="567:9-567:39" name="context_">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="567:9-567:30" name="context_">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="567:9-567:21" name="definition">
                            <source xsi:type="ocl:VariableExp" location="567:9-567:10" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                          </source>
                        </source>
                      </source>
                    </source>
                  </elseExpression>
                </thenExpression>
                <condition xsi:type="ocl:OperatorCallExp" location="556:11-556:53" operationName="not">
                  <source xsi:type="ocl:OperationCallExp" location="556:15-556:53" operationName="oclIsUndefined">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="556:15-556:36" name="context_">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="556:15-556:27" name="definition">
                        <source xsi:type="ocl:VariableExp" location="556:15-556:16" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                      </source>
                    </source>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:BooleanExp" location="570:8-570:13"/>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="554:10-554:52" operationName="not">
                <source xsi:type="ocl:OperationCallExp" location="554:14-554:52" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="554:14-554:35" name="context_">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="554:14-554:26" name="definition">
                      <source xsi:type="ocl:VariableExp" location="554:14-554:15" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </source>
              </condition>
              <elseExpression xsi:type="ocl:OperationCallExp" location="573:8-573:46" operationName="oclIsUndefined">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="573:8-573:29" name="context_">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="573:8-573:20" name="definition">
                    <source xsi:type="ocl:VariableExp" location="573:8-573:9" referredVariable="/0/@elements.23/@inPattern/@filter/@iterators.0"/>
                  </source>
                </source>
              </elseExpression>
            </arguments>
          </body>
          <iterators location="550:14-550:15" varName="e" variableExp="/0/@elements.23/@inPattern/@filter/@body/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@source/@arguments.0/@arguments.0/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@condition/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@thenExpression/@condition/@source/@source/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@thenExpression/@thenExpression/@arguments.0/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@thenExpression/@thenExpression/@elseExpression/@source/@source/@source/@source/@source /0/@elements.23/@inPattern/@filter/@body/@arguments.0/@elseExpression/@source/@source/@source"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="590:1-603:2" name="BindingNameIsUniqueInPattern">
      <commentsBefore>-- Rule 'BindingNameIsUniqueInPattern'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem when there exists, in a same pattern,</commentsBefore>
      <commentsBefore>-- bindings that have the same name that the checked binding.</commentsBefore>
      <commentsAfter>-- Rule 'PatternNameIsUniqueInRule'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsAfter>
      <commentsAfter>-- some named elements (InPatternElement/OutPatternElement/</commentsAfter>
      <commentsAfter>-- RuleVariableDeclaration) that have the same name that the checked pattern.</commentsAfter>
      <outPattern location="596:2-602:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="597:3-602:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="597:7-597:22" name="Problem" model="/1"/>
          <bindings location="598:4-598:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="598:16-598:22" name="error"/>
          </bindings>
          <bindings location="599:4-599:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="599:16-599:26" name="location">
              <source xsi:type="ocl:VariableExp" location="599:16-599:17" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="600:4-601:68" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="601:5-601:68" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="601:5-601:34" operationName="+">
                <source xsi:type="ocl:StringExp" location="601:5-601:17" stringSymbol="binding '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="601:20-601:34" name="propertyName">
                  <source xsi:type="ocl:VariableExp" location="601:20-601:21" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="601:37-601:68" stringSymbol="' already defined in pattern"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="591:2-595:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="592:3-592:18" varName="s" variableExp="/0/@elements.24/@inPattern/@filter/@source/@source/@source /0/@elements.24/@inPattern/@filter/@body/@source/@arguments.0/@source /0/@elements.24/@inPattern/@filter/@body/@arguments.0/@arguments.0 /0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.24/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="592:7-592:18" name="Binding" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IteratorExp" location="593:4-594:61" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="593:4-593:32" name="bindings">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="593:4-593:23" name="outPatternElement">
              <source xsi:type="ocl:VariableExp" location="593:4-593:5" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="594:18-594:60" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="594:18-594:49" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="594:18-594:32" name="propertyName">
                <source xsi:type="ocl:VariableExp" location="594:18-594:19" referredVariable="/0/@elements.24/@inPattern/@filter/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="594:35-594:49" name="propertyName">
                <source xsi:type="ocl:VariableExp" location="594:35-594:36" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="594:54-594:60" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="594:54-594:55" referredVariable="/0/@elements.24/@inPattern/@filter/@iterators.0"/>
              <arguments xsi:type="ocl:VariableExp" location="594:59-594:60" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
            </arguments>
          </body>
          <iterators location="594:14-594:15" varName="e" variableExp="/0/@elements.24/@inPattern/@filter/@body/@source/@source/@source /0/@elements.24/@inPattern/@filter/@body/@arguments.0/@source"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="609:1-623:2" name="PatternNameIsUniqueInRule">
      <commentsBefore>-- Rule 'PatternNameIsUniqueInRule'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsBefore>
      <commentsBefore>-- some named elements (InPatternElement/OutPatternElement/</commentsBefore>
      <commentsBefore>-- RuleVariableDeclaration) that have the same name that the checked pattern.</commentsBefore>
      <commentsAfter>-- Rule 'VariableNameIsUniqueInRule'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsAfter>
      <commentsAfter>-- some named elements (InPatternElement/OutPatternElement/</commentsAfter>
      <commentsAfter>-- RuleVariableDeclaration) that have the same name that the checked rule</commentsAfter>
      <commentsAfter>-- variable declaration.</commentsAfter>
      <outPattern location="615:2-622:4">
        <commentsBefore>--(</commentsBefore>
        <commentsBefore>--s.&quot;rule&quot;.namedElements</commentsBefore>
        <commentsBefore>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsBefore>
        <commentsBefore>--)</commentsBefore>
        <elements xsi:type="atl:SimpleOutPatternElement" location="616:3-622:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="616:7-616:22" name="Problem" model="/1"/>
          <bindings location="617:4-617:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="617:16-617:22" name="error"/>
          </bindings>
          <bindings location="618:4-618:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="618:16-618:26" name="location">
              <source xsi:type="ocl:VariableExp" location="618:16-618:17" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="619:4-621:47" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="620:5-621:47" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="620:5-621:16" operationName="+">
                <source xsi:type="ocl:StringExp" location="620:5-620:35" stringSymbol="pattern or variable named '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="621:7-621:16" name="varName">
                  <source xsi:type="ocl:VariableExp" location="621:7-621:8" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="621:19-621:47" stringSymbol="' already defined in rule"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="610:2-611:25">
        <commentsAfter>--(</commentsAfter>
        <commentsAfter>--s.&quot;rule&quot;.namedElements</commentsAfter>
        <commentsAfter>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsAfter>
        <commentsAfter>--)</commentsAfter>
        <elements xsi:type="atl:SimpleInPatternElement" location="611:3-611:25" varName="s" variableExp="/0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.25/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <commentsAfter>--(</commentsAfter>
          <commentsAfter>--s.&quot;rule&quot;.namedElements</commentsAfter>
          <commentsAfter>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsAfter>
          <commentsAfter>--)</commentsAfter>
          <type xsi:type="ocl:OclModelElement" location="611:7-611:25" name="PatternElement" model="/2">
            <commentsAfter>--(</commentsAfter>
            <commentsAfter>--s.&quot;rule&quot;.namedElements</commentsAfter>
            <commentsAfter>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsAfter>
            <commentsAfter>--)</commentsAfter>
          </type>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="630:1-644:2" name="VariableNameIsUniqueInRule">
      <commentsBefore>-- Rule 'VariableNameIsUniqueInRule'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem when there exists, in a same rule,</commentsBefore>
      <commentsBefore>-- some named elements (InPatternElement/OutPatternElement/</commentsBefore>
      <commentsBefore>-- RuleVariableDeclaration) that have the same name that the checked rule</commentsBefore>
      <commentsBefore>-- variable declaration.</commentsBefore>
      <commentsAfter>-- Rule 'NoHelperWithCollectionAsContext'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each Helper defined with a</commentsAfter>
      <commentsAfter>-- collection type as context.</commentsAfter>
      <commentsAfter>-- Note that this problem is due to the limitations of the current</commentsAfter>
      <commentsAfter>-- implementation</commentsAfter>
      <outPattern location="636:2-643:4">
        <commentsBefore>--(</commentsBefore>
        <commentsBefore>--s.&quot;rule&quot;.namedElements</commentsBefore>
        <commentsBefore>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsBefore>
        <commentsBefore>--)</commentsBefore>
        <elements xsi:type="atl:SimpleOutPatternElement" location="637:3-643:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="637:7-637:22" name="Problem" model="/1"/>
          <bindings location="638:4-638:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="638:16-638:22" name="error"/>
          </bindings>
          <bindings location="639:4-639:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="639:16-639:26" name="location">
              <source xsi:type="ocl:VariableExp" location="639:16-639:17" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="640:4-642:35" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="641:5-642:35" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="641:5-641:47" operationName="+">
                <source xsi:type="ocl:StringExp" location="641:5-641:35" stringSymbol="pattern or variable named '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="641:38-641:47" name="varName">
                  <source xsi:type="ocl:VariableExp" location="641:38-641:39" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="642:7-642:35" stringSymbol="' already defined in rule"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="631:2-632:34">
        <commentsAfter>--(</commentsAfter>
        <commentsAfter>--s.&quot;rule&quot;.namedElements</commentsAfter>
        <commentsAfter>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsAfter>
        <commentsAfter>--)</commentsAfter>
        <elements xsi:type="atl:SimpleInPatternElement" location="632:3-632:34" varName="s" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <commentsAfter>--(</commentsAfter>
          <commentsAfter>--s.&quot;rule&quot;.namedElements</commentsAfter>
          <commentsAfter>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsAfter>
          <commentsAfter>--)</commentsAfter>
          <type xsi:type="ocl:OclModelElement" location="632:7-632:34" name="RuleVariableDeclaration" model="/2">
            <commentsAfter>--(</commentsAfter>
            <commentsAfter>--s.&quot;rule&quot;.namedElements</commentsAfter>
            <commentsAfter>--->exists(e | e.varName = s.varName and e &lt;> s)</commentsAfter>
            <commentsAfter>--)</commentsAfter>
          </type>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="651:1-671:2" name="NoHelperWithCollectionAsContext">
      <commentsBefore>-- Rule 'NoHelperWithCollectionAsContext'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each Helper defined with a</commentsBefore>
      <commentsBefore>-- collection type as context.</commentsBefore>
      <commentsBefore>-- Note that this problem is due to the limitations of the current</commentsBefore>
      <commentsBefore>-- implementation</commentsBefore>
      <commentsAfter>-- Rule 'NoSelfOrThisModuleVariableDeclaration'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each declaration of a variable</commentsAfter>
      <commentsAfter>-- named 'self' or 'thisModule' in the ATL program.</commentsAfter>
      <commentsAfter>-- Considered variable declarations must have a non-undefined immediate</commentsAfter>
      <commentsAfter>-- composite since the input ATL model may already include a 'self' and a</commentsAfter>
      <commentsAfter>-- 'thisModule' VD without any immediate composite that correspond to the</commentsAfter>
      <commentsAfter>-- global declarations of the 'self' and 'thisModule' variables.</commentsAfter>
      <outPattern location="662:2-670:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="663:3-670:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="663:7-663:22" name="Problem" model="/1"/>
          <bindings location="664:4-664:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="664:16-664:22" name="error"/>
          </bindings>
          <bindings location="665:4-665:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="665:16-665:26" name="location">
              <source xsi:type="ocl:VariableExp" location="665:16-665:17" referredVariable="/0/@elements.27/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="666:4-669:49" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="667:5-669:49" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="667:5-668:46" operationName="+">
                <source xsi:type="ocl:OperatorCallExp" location="667:5-667:44" operationName="+">
                  <source xsi:type="ocl:StringExp" location="667:5-667:16" stringSymbol="helper '"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="667:19-667:44" name="name">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="667:19-667:39" name="feature">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="667:19-667:31" name="definition">
                        <source xsi:type="ocl:VariableExp" location="667:19-667:20" referredVariable="/0/@elements.27/@inPattern/@elements.0"/>
                      </source>
                    </source>
                  </arguments>
                </source>
                <arguments xsi:type="ocl:StringExp" location="668:8-668:46" stringSymbol="': current implementation does not "/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="669:8-669:49" stringSymbol="support helpers with collection context"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="652:2-661:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="653:3-653:17" varName="s" variableExp="/0/@elements.27/@inPattern/@filter/@condition/@source/@source/@source /0/@elements.27/@inPattern/@filter/@elseExpression/@body/@source/@source/@source/@source /0/@elements.27/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.27/@outPattern/@elements.0/@bindings.2/@value/@source/@source/@arguments.0/@source/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="653:7-653:17" name="Helper" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IfExp" location="654:4-660:9">
          <thenExpression xsi:type="ocl:BooleanExp" location="656:5-656:10"/>
          <condition xsi:type="ocl:OperationCallExp" location="654:7-654:45" operationName="oclIsUndefined">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="654:7-654:28" name="context_">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="654:7-654:19" name="definition">
                <source xsi:type="ocl:VariableExp" location="654:7-654:8" referredVariable="/0/@elements.27/@inPattern/@elements.0"/>
              </source>
            </source>
          </condition>
          <elseExpression xsi:type="ocl:IteratorExp" location="658:5-659:54" name="exists">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="658:5-658:31" name="collectionTypes">
              <source xsi:type="ocl:VariableExp" location="658:5-658:15" referredVariable="/82"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="659:19-659:53" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="659:19-659:49" name="context_">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="659:19-659:40" name="context_">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="659:19-659:31" name="definition">
                    <source xsi:type="ocl:VariableExp" location="659:19-659:20" referredVariable="/0/@elements.27/@inPattern/@elements.0"/>
                  </source>
                </source>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="659:52-659:53" referredVariable="/0/@elements.27/@inPattern/@filter/@elseExpression/@iterators.0"/>
            </body>
            <iterators location="659:15-659:16" varName="e" variableExp="/0/@elements.27/@inPattern/@filter/@elseExpression/@body/@arguments.0"/>
          </elseExpression>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="680:1-693:2" name="NoSelfOrThisModuleVariableDeclaration">
      <commentsBefore>-- Rule 'NoSelfOrThisModuleVariableDeclaration'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each declaration of a variable</commentsBefore>
      <commentsBefore>-- named 'self' or 'thisModule' in the ATL program.</commentsBefore>
      <commentsBefore>-- Considered variable declarations must have a non-undefined immediate</commentsBefore>
      <commentsBefore>-- composite since the input ATL model may already include a 'self' and a</commentsBefore>
      <commentsBefore>-- 'thisModule' VD without any immediate composite that correspond to the</commentsBefore>
      <commentsBefore>-- global declarations of the 'self' and 'thisModule' variables.</commentsBefore>
      <commentsAfter>-- Rule 'NoSelfVariableInRule'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each 'self' variable expression</commentsAfter>
      <commentsAfter>-- that is contained by a rule element.</commentsAfter>
      <outPattern location="686:2-692:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="687:3-692:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="687:7-687:22" name="Problem" model="/1"/>
          <bindings location="688:4-688:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="688:16-688:22" name="error"/>
          </bindings>
          <bindings location="689:4-689:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="689:16-689:26" name="location">
              <source xsi:type="ocl:VariableExp" location="689:16-689:17" referredVariable="/0/@elements.28/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="690:4-691:62" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="691:5-691:62" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="691:5-691:28" operationName="+">
                <source xsi:type="ocl:StringExp" location="691:5-691:16" stringSymbol="helper '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="691:19-691:28" name="varName">
                  <source xsi:type="ocl:VariableExp" location="691:19-691:20" referredVariable="/0/@elements.28/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="691:31-691:62" stringSymbol="' is not valid variable name"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="681:2-685:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="682:3-682:30" varName="s" variableExp="/0/@elements.28/@inPattern/@filter/@source/@source/@source/@source /0/@elements.28/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.28/@inPattern/@filter/@arguments.0/@arguments.0/@source/@source /0/@elements.28/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.28/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="682:7-682:30" name="VariableDeclaration" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="683:4-684:52" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="683:4-683:45" operationName="not">
            <source xsi:type="ocl:OperationCallExp" location="683:8-683:45" operationName="oclIsUndefined">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="683:8-683:28" name="immediateComposite">
                <source xsi:type="ocl:VariableExp" location="683:8-683:9" referredVariable="/0/@elements.28/@inPattern/@elements.0"/>
              </source>
            </source>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="684:5-684:51" operationName="or">
            <source xsi:type="ocl:OperatorCallExp" location="684:5-684:23" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="684:5-684:14" name="varName">
                <source xsi:type="ocl:VariableExp" location="684:5-684:6" referredVariable="/0/@elements.28/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="684:17-684:23" stringSymbol="self"/>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="684:27-684:51" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="684:27-684:36" name="varName">
                <source xsi:type="ocl:VariableExp" location="684:27-684:28" referredVariable="/0/@elements.28/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="684:39-684:51" stringSymbol="thisModule"/>
            </arguments>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="698:1-727:2" name="NoSelfVariableInRule">
      <commentsBefore>-- Rule 'NoSelfVariableInRule'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each 'self' variable expression</commentsBefore>
      <commentsBefore>-- that is contained by a rule element.</commentsBefore>
      <commentsAfter>-- Rule 'NoResolveTempInSourcePattern'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each call of the</commentsAfter>
      <commentsAfter>-- 'thisModule.resolveTemp()' operation within a source pattern of a rule.</commentsAfter>
      <outPattern location="719:2-726:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="720:3-726:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="720:7-720:22" name="Problem" model="/1"/>
          <bindings location="721:4-721:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="721:16-721:22" name="error"/>
          </bindings>
          <bindings location="722:4-722:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="722:16-722:26" name="location">
              <source xsi:type="ocl:VariableExp" location="722:16-722:17" referredVariable="/0/@elements.29/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="723:4-725:61" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="724:5-725:61" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="724:5-724:43" operationName="+">
                <source xsi:type="ocl:StringExp" location="724:5-724:14" stringSymbol="rule '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="724:17-724:43" name="varName">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="724:17-724:35" name="referredVariable">
                    <source xsi:type="ocl:VariableExp" location="724:17-724:18" referredVariable="/0/@elements.29/@inPattern/@elements.0"/>
                  </source>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="725:7-725:61" stringSymbol="': use of the 'self' variable prohibited in rules"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="699:2-718:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="700:3-700:22" varName="s" variableExp="/0/@elements.29/@inPattern/@filter/@condition/@source/@source /0/@elements.29/@inPattern/@filter/@elseExpression/@source/@source/@source/@source /0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable/@initExpression/@source /0/@elements.29/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.29/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="700:7-700:22" name="VariableExp" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IfExp" location="707:4-717:9">
          <commentsBefore>--			s.referredVariable.varName = 'self' and </commentsBefore>
          <commentsBefore>--			(</commentsBefore>
          <commentsBefore>--				let rComp : ATL!Element = s.getRootComposite() in</commentsBefore>
          <commentsBefore>--				rComp.oclIsTypeOf(ATL!Binding) or</commentsBefore>
          <commentsBefore>--				rComp.oclIsTypeOf(ATL!InPattern)</commentsBefore>
          <commentsBefore>--			)</commentsBefore>
          <thenExpression xsi:type="ocl:BooleanExp" location="709:5-709:10"/>
          <condition xsi:type="ocl:OperationCallExp" location="707:7-707:42" operationName="oclIsUndefined">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="707:7-707:25" name="referredVariable">
              <source xsi:type="ocl:VariableExp" location="707:7-707:8" referredVariable="/0/@elements.29/@inPattern/@elements.0"/>
            </source>
          </condition>
          <elseExpression xsi:type="ocl:OperatorCallExp" location="711:5-716:6" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="711:5-711:40" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="711:5-711:31" name="varName">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="711:5-711:23" name="referredVariable">
                  <source xsi:type="ocl:VariableExp" location="711:5-711:6" referredVariable="/0/@elements.29/@inPattern/@elements.0"/>
                </source>
              </source>
              <arguments xsi:type="ocl:StringExp" location="711:34-711:40" stringSymbol="self"/>
            </source>
            <arguments xsi:type="ocl:LetExp" location="713:6-715:38">
              <variable location="713:10-713:52" varName="rComp" variableExp="/0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@in_/@source/@source /0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@in_/@arguments.0/@source">
                <type xsi:type="ocl:OclModelElement" location="713:18-713:29" name="Element" model="/2"/>
                <initExpression xsi:type="ocl:OperationCallExp" location="713:32-713:52" operationName="getRootComposite">
                  <source xsi:type="ocl:VariableExp" location="713:32-713:33" referredVariable="/0/@elements.29/@inPattern/@elements.0"/>
                </initExpression>
              </variable>
              <in_ xsi:type="ocl:OperatorCallExp" location="714:6-715:38" operationName="or">
                <source xsi:type="ocl:OperationCallExp" location="714:6-714:36" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="714:6-714:11" referredVariable="/0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="714:24-714:35" name="Binding" model="/2"/>
                </source>
                <arguments xsi:type="ocl:OperationCallExp" location="715:6-715:38" operationName="oclIsTypeOf">
                  <source xsi:type="ocl:VariableExp" location="715:6-715:11" referredVariable="/0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable"/>
                  <arguments xsi:type="ocl:OclModelElement" location="715:24-715:37" name="InPattern" model="/2"/>
                </arguments>
              </in_>
            </arguments>
          </elseExpression>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="732:1-760:2" name="NoResolveTempInSourcePattern">
      <commentsBefore>-- Rule 'NoResolveTempInSourcePattern'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each call of the</commentsBefore>
      <commentsBefore>-- 'thisModule.resolveTemp()' operation within a source pattern of a rule.</commentsBefore>
      <commentsAfter>-- Rule 'NoResolveTempInModuleAttribute'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each call of the</commentsAfter>
      <commentsAfter>-- 'thisModule.resolveTemp()' operation within a model attribute.</commentsAfter>
      <outPattern location="751:2-759:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="752:3-759:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="752:7-752:22" name="Problem" model="/1"/>
          <bindings location="753:4-753:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="753:16-753:22" name="error"/>
          </bindings>
          <bindings location="754:4-754:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="754:16-754:26" name="location">
              <source xsi:type="ocl:VariableExp" location="754:16-754:17" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="755:4-758:41" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="756:5-758:41" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="756:5-757:58" operationName="+">
                <source xsi:type="ocl:OperatorCallExp" location="756:5-756:49" operationName="+">
                  <source xsi:type="ocl:StringExp" location="756:5-756:14" stringSymbol="rule '"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="756:17-756:49" name="name">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="756:17-756:44" name="rule">
                      <source xsi:type="ocl:OperationCallExp" location="756:17-756:37" operationName="getRootComposite">
                        <source xsi:type="ocl:VariableExp" location="756:17-756:18" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
                      </source>
                    </source>
                  </arguments>
                </source>
                <arguments xsi:type="ocl:StringExp" location="757:7-757:58" stringSymbol="': use of 'thisModule.resolveTemp()' function "/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="758:7-758:41" stringSymbol="is prohibited in source patterns"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="733:2-750:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="734:3-734:27" varName="s" variableExp="/0/@elements.30/@inPattern/@filter/@source/@source/@source/@source /0/@elements.30/@inPattern/@filter/@source/@arguments.0/@condition/@source/@source /0/@elements.30/@inPattern/@filter/@source/@arguments.0/@thenExpression/@condition/@source/@source/@source /0/@elements.30/@inPattern/@filter/@source/@arguments.0/@thenExpression/@elseExpression/@source/@source/@source/@source /0/@elements.30/@inPattern/@filter/@arguments.0/@source/@source /0/@elements.30/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.30/@outPattern/@elements.0/@bindings.2/@value/@source/@source/@arguments.0/@source/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="734:7-734:27" name="OperationCallExp" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="735:4-749:51" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="735:4-748:5" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="735:4-735:35" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="735:4-735:19" name="operationName">
                <source xsi:type="ocl:VariableExp" location="735:4-735:5" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="735:22-735:35" stringSymbol="resolveTemp"/>
            </source>
            <arguments xsi:type="ocl:IfExp" location="737:5-747:10">
              <thenExpression xsi:type="ocl:IfExp" location="739:6-744:11">
                <thenExpression xsi:type="ocl:BooleanExp" location="741:7-741:12"/>
                <condition xsi:type="ocl:OperationCallExp" location="739:9-739:51" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="739:9-739:34" name="referredVariable">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="739:9-739:17" name="source">
                      <source xsi:type="ocl:VariableExp" location="739:9-739:10" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:OperatorCallExp" location="743:7-743:55" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="743:7-743:40" name="varName">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="743:7-743:32" name="referredVariable">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="743:7-743:15" name="source">
                        <source xsi:type="ocl:VariableExp" location="743:7-743:8" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
                      </source>
                    </source>
                  </source>
                  <arguments xsi:type="ocl:StringExp" location="743:43-743:55" stringSymbol="thisModule"/>
                </elseExpression>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="737:8-737:45" operationName="oclIsTypeOf">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="737:8-737:16" name="source">
                  <source xsi:type="ocl:VariableExp" location="737:8-737:9" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:OclModelElement" location="737:29-737:44" name="VariableExp" model="/2"/>
              </condition>
              <elseExpression xsi:type="ocl:BooleanExp" location="746:6-746:11"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperationCallExp" location="749:4-749:51" operationName="oclIsTypeOf">
            <source xsi:type="ocl:OperationCallExp" location="749:4-749:24" operationName="getRootComposite">
              <source xsi:type="ocl:VariableExp" location="749:4-749:5" referredVariable="/0/@elements.30/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="749:37-749:50" name="InPattern" model="/2"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="765:1-793:2" name="NoResolveTempInModuleAttribute">
      <commentsBefore>-- Rule 'NoResolveTempInModuleAttribute'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each call of the</commentsBefore>
      <commentsBefore>-- 'thisModule.resolveTemp()' operation within a model attribute.</commentsBefore>
      <commentsAfter>-- Rule 'ProhibitedMultiIteratorCollectionOperation'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsAfter>
      <commentsAfter>-- singleIteratorExps set that is associated with several Iterators.</commentsAfter>
      <outPattern location="784:2-792:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="785:3-792:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="785:7-785:22" name="Problem" model="/1"/>
          <bindings location="786:4-786:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="786:16-786:22" name="error"/>
          </bindings>
          <bindings location="787:4-787:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="787:16-787:26" name="location">
              <source xsi:type="ocl:VariableExp" location="787:16-787:17" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="788:4-791:36" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="789:5-791:36" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="789:5-790:58" operationName="+">
                <source xsi:type="ocl:OperatorCallExp" location="789:5-789:47" operationName="+">
                  <source xsi:type="ocl:StringExp" location="789:5-789:19" stringSymbol="attribute '"/>
                  <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="789:22-789:47" name="name">
                    <source xsi:type="ocl:OperationCallExp" location="789:22-789:42" operationName="getRootComposite">
                      <source xsi:type="ocl:VariableExp" location="789:22-789:23" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
                    </source>
                  </arguments>
                </source>
                <arguments xsi:type="ocl:StringExp" location="790:7-790:58" stringSymbol="': use of 'thisModule.resolveTemp()' function "/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="791:7-791:36" stringSymbol="is prohibited in attributes"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="766:2-783:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="767:3-767:27" varName="s" variableExp="/0/@elements.31/@inPattern/@filter/@source/@source/@source/@source /0/@elements.31/@inPattern/@filter/@source/@arguments.0/@condition/@source/@source /0/@elements.31/@inPattern/@filter/@source/@arguments.0/@thenExpression/@condition/@source/@source/@source /0/@elements.31/@inPattern/@filter/@source/@arguments.0/@thenExpression/@elseExpression/@source/@source/@source/@source /0/@elements.31/@inPattern/@filter/@arguments.0/@source/@source /0/@elements.31/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.31/@outPattern/@elements.0/@bindings.2/@value/@source/@source/@arguments.0/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="767:7-767:27" name="OperationCallExp" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="768:4-782:51" operationName="and">
          <source xsi:type="ocl:OperatorCallExp" location="768:4-781:5" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="768:4-768:35" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="768:4-768:19" name="operationName">
                <source xsi:type="ocl:VariableExp" location="768:4-768:5" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:StringExp" location="768:22-768:35" stringSymbol="resolveTemp"/>
            </source>
            <arguments xsi:type="ocl:IfExp" location="770:5-780:10">
              <thenExpression xsi:type="ocl:IfExp" location="772:6-777:11">
                <thenExpression xsi:type="ocl:BooleanExp" location="774:7-774:12"/>
                <condition xsi:type="ocl:OperationCallExp" location="772:9-772:51" operationName="oclIsUndefined">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="772:9-772:34" name="referredVariable">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="772:9-772:17" name="source">
                      <source xsi:type="ocl:VariableExp" location="772:9-772:10" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
                    </source>
                  </source>
                </condition>
                <elseExpression xsi:type="ocl:OperatorCallExp" location="776:7-776:55" operationName="=">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="776:7-776:40" name="varName">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="776:7-776:32" name="referredVariable">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="776:7-776:15" name="source">
                        <source xsi:type="ocl:VariableExp" location="776:7-776:8" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
                      </source>
                    </source>
                  </source>
                  <arguments xsi:type="ocl:StringExp" location="776:43-776:55" stringSymbol="thisModule"/>
                </elseExpression>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="770:8-770:45" operationName="oclIsTypeOf">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="770:8-770:16" name="source">
                  <source xsi:type="ocl:VariableExp" location="770:8-770:9" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:OclModelElement" location="770:29-770:44" name="VariableExp" model="/2"/>
              </condition>
              <elseExpression xsi:type="ocl:BooleanExp" location="779:6-779:11"/>
            </arguments>
          </source>
          <arguments xsi:type="ocl:OperationCallExp" location="782:4-782:51" operationName="oclIsTypeOf">
            <source xsi:type="ocl:OperationCallExp" location="782:4-782:24" operationName="getRootComposite">
              <source xsi:type="ocl:VariableExp" location="782:4-782:5" referredVariable="/0/@elements.31/@inPattern/@elements.0"/>
            </source>
            <arguments xsi:type="ocl:OclModelElement" location="782:37-782:50" name="Attribute" model="/2"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="798:1-812:2" name="ProhibitedMultiIteratorCollectionOperation">
      <commentsBefore>-- Rule 'ProhibitedMultiIteratorCollectionOperation'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsBefore>
      <commentsBefore>-- singleIteratorExps set that is associated with several Iterators.</commentsBefore>
      <commentsAfter>-- Rule 'UnsupportedMultiIteratorCollectionOperation'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsAfter>
      <commentsAfter>-- multiIteratorExps set that is associated with several Iterators.</commentsAfter>
      <commentsAfter>-- Note that this problem is due to limitations of the current implementation.</commentsAfter>
      <outPattern location="804:2-811:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="805:3-811:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="805:7-805:22" name="Problem" model="/1"/>
          <bindings location="806:4-806:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="806:16-806:22" name="error"/>
          </bindings>
          <bindings location="807:4-807:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="807:16-807:26" name="location">
              <source xsi:type="ocl:VariableExp" location="807:16-807:17" referredVariable="/0/@elements.32/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="808:4-810:50" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="809:5-810:50" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="809:5-809:27" operationName="+">
                <source xsi:type="ocl:StringExp" location="809:5-809:18" stringSymbol="iterator '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="809:21-809:27" name="name">
                  <source xsi:type="ocl:VariableExp" location="809:21-809:22" referredVariable="/0/@elements.32/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="810:7-810:50" stringSymbol="' may have at most one iterator variable"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="799:2-803:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="800:3-800:22" varName="s" variableExp="/0/@elements.32/@inPattern/@filter/@source/@body/@source/@source /0/@elements.32/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.32/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.32/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="800:7-800:22" name="IteratorExp" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="801:4-802:27" operationName="and">
          <source xsi:type="ocl:IteratorExp" location="801:4-801:57" name="exists">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="801:4-801:33" name="singleIteratorExps">
              <source xsi:type="ocl:VariableExp" location="801:4-801:14" referredVariable="/83"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="801:46-801:56" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="801:46-801:52" name="name">
                <source xsi:type="ocl:VariableExp" location="801:46-801:47" referredVariable="/0/@elements.32/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="801:55-801:56" referredVariable="/0/@elements.32/@inPattern/@filter/@source/@iterators.0"/>
            </body>
            <iterators location="801:42-801:43" varName="e" variableExp="/0/@elements.32/@inPattern/@filter/@source/@body/@arguments.0"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="802:4-802:27" operationName=">">
            <source xsi:type="ocl:CollectionOperationCallExp" location="802:4-802:23" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="802:4-802:15" name="iterators">
                <source xsi:type="ocl:VariableExp" location="802:4-802:5" referredVariable="/0/@elements.32/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="802:26-802:27" integerSymbol="1"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="818:1-832:2" name="UnsupportedMultiIteratorCollectionOperation">
      <commentsBefore>-- Rule 'UnsupportedMultiIteratorCollectionOperation'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each IteratorExp of the</commentsBefore>
      <commentsBefore>-- multiIteratorExps set that is associated with several Iterators.</commentsBefore>
      <commentsBefore>-- Note that this problem is due to limitations of the current implementation.</commentsBefore>
      <commentsAfter>-- Rule 'ParameterNameIsUniqueInOperation'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each parameter for which there</commentsAfter>
      <commentsAfter>-- exists another parameter of the same name in the operation declaration.</commentsAfter>
      <outPattern location="824:2-831:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="825:3-831:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="825:7-825:22" name="Problem" model="/1"/>
          <bindings location="826:4-826:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="826:16-826:22" name="error"/>
          </bindings>
          <bindings location="827:4-827:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="827:16-827:26" name="location">
              <source xsi:type="ocl:VariableExp" location="827:16-827:17" referredVariable="/0/@elements.33/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="828:4-830:50" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="829:5-830:50" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="829:5-829:56" operationName="+">
                <source xsi:type="ocl:StringExp" location="829:5-829:47" stringSymbol="with current implementation, iterator '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="829:50-829:56" name="name">
                  <source xsi:type="ocl:VariableExp" location="829:50-829:51" referredVariable="/0/@elements.33/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="830:7-830:50" stringSymbol="' may have at most one iterator variable"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="819:2-823:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="820:3-820:22" varName="s" variableExp="/0/@elements.33/@inPattern/@filter/@source/@body/@source/@source /0/@elements.33/@inPattern/@filter/@arguments.0/@source/@source/@source /0/@elements.33/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.33/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="820:7-820:22" name="IteratorExp" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="821:4-822:27" operationName="and">
          <source xsi:type="ocl:IteratorExp" location="821:4-821:56" name="exists">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="821:4-821:32" name="multiIteratorExps">
              <source xsi:type="ocl:VariableExp" location="821:4-821:14" referredVariable="/84"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="821:45-821:55" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="821:45-821:51" name="name">
                <source xsi:type="ocl:VariableExp" location="821:45-821:46" referredVariable="/0/@elements.33/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="821:54-821:55" referredVariable="/0/@elements.33/@inPattern/@filter/@source/@iterators.0"/>
            </body>
            <iterators location="821:41-821:42" varName="e" variableExp="/0/@elements.33/@inPattern/@filter/@source/@body/@arguments.0"/>
          </source>
          <arguments xsi:type="ocl:OperatorCallExp" location="822:4-822:27" operationName=">">
            <source xsi:type="ocl:CollectionOperationCallExp" location="822:4-822:23" operationName="size">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="822:4-822:15" name="iterators">
                <source xsi:type="ocl:VariableExp" location="822:4-822:5" referredVariable="/0/@elements.33/@inPattern/@elements.0"/>
              </source>
            </source>
            <arguments xsi:type="ocl:IntegerExp" location="822:26-822:27" integerSymbol="1"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="837:1-851:2" name="ParameterNameIsUniqueInOperation">
      <commentsBefore>-- Rule 'ParameterNameIsUniqueInOperation'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each parameter for which there</commentsBefore>
      <commentsBefore>-- exists another parameter of the same name in the operation declaration.</commentsBefore>
      <commentsAfter>-- Rule 'IteratorNameIsUniqueInLoop'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each Iterator declaration for</commentsAfter>
      <commentsAfter>-- which there exists either another Iterator or a result variable declaration</commentsAfter>
      <commentsAfter>-- (for Iterate loop only) of the same name within the same loop definition.</commentsAfter>
      <outPattern location="843:2-850:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="844:3-850:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="844:7-844:22" name="Problem" model="/1"/>
          <bindings location="845:4-845:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="845:16-845:22" name="error"/>
          </bindings>
          <bindings location="846:4-846:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="846:16-846:26" name="location">
              <source xsi:type="ocl:VariableExp" location="846:16-846:17" referredVariable="/0/@elements.34/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="847:4-849:49" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="848:5-849:49" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="848:5-848:39" operationName="+">
                <source xsi:type="ocl:StringExp" location="848:5-848:27" stringSymbol="a parameter named '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="848:30-848:39" name="varName">
                  <source xsi:type="ocl:VariableExp" location="848:30-848:31" referredVariable="/0/@elements.34/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="849:7-849:49" stringSymbol="' is already declared in this operation"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="838:2-842:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="839:3-839:20" varName="s" variableExp="/0/@elements.34/@inPattern/@filter/@source/@source/@source /0/@elements.34/@inPattern/@filter/@body/@source/@source/@source /0/@elements.34/@inPattern/@filter/@body/@arguments.0/@source /0/@elements.34/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.34/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="839:7-839:20" name="Parameter" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IteratorExp" location="840:4-841:51" name="exists">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="840:4-840:26" name="parameters">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="840:4-840:15" name="operation">
              <source xsi:type="ocl:VariableExp" location="840:4-840:5" referredVariable="/0/@elements.34/@inPattern/@elements.0"/>
            </source>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="841:18-841:50" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="841:18-841:39" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="841:18-841:27" name="varName">
                <source xsi:type="ocl:VariableExp" location="841:18-841:19" referredVariable="/0/@elements.34/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="841:30-841:39" name="varName">
                <source xsi:type="ocl:VariableExp" location="841:30-841:31" referredVariable="/0/@elements.34/@inPattern/@filter/@iterators.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="841:44-841:50" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="841:44-841:45" referredVariable="/0/@elements.34/@inPattern/@elements.0"/>
              <arguments xsi:type="ocl:VariableExp" location="841:49-841:50" referredVariable="/0/@elements.34/@inPattern/@filter/@iterators.0"/>
            </arguments>
          </body>
          <iterators location="841:14-841:15" varName="e" variableExp="/0/@elements.34/@inPattern/@filter/@body/@source/@arguments.0/@source /0/@elements.34/@inPattern/@filter/@body/@arguments.0/@arguments.0"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="857:1-878:2" name="VariableNameIsUniqueInLoop">
      <commentsBefore>-- Rule 'IteratorNameIsUniqueInLoop'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each Iterator declaration for</commentsBefore>
      <commentsBefore>-- which there exists either another Iterator or a result variable declaration</commentsBefore>
      <commentsBefore>-- (for Iterate loop only) of the same name within the same loop definition.</commentsBefore>
      <commentsAfter>-- Rule 'ResultNameIsUniqueInIterate'</commentsAfter>
      <commentsAfter>-- This rule generates an 'error' Problem for each 'result' variable</commentsAfter>
      <commentsAfter>-- declaration of an IterateExp for which there exists an Iterator variable of</commentsAfter>
      <commentsAfter>-- the same name in the Iterate loop definition.</commentsAfter>
      <outPattern location="870:2-877:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="871:3-877:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="871:7-871:22" name="Problem" model="/1"/>
          <bindings location="872:4-872:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="872:16-872:22" name="error"/>
          </bindings>
          <bindings location="873:4-873:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="873:16-873:26" name="location">
              <source xsi:type="ocl:VariableExp" location="873:16-873:17" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="874:4-876:44" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="875:5-876:44" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="875:5-875:38" operationName="+">
                <source xsi:type="ocl:StringExp" location="875:5-875:26" stringSymbol="a variable named '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="875:29-875:38" name="varName">
                  <source xsi:type="ocl:VariableExp" location="875:29-875:30" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="876:7-876:44" stringSymbol="' is already declared in this loop"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="858:2-869:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="859:3-859:19" varName="s" variableExp="/0/@elements.35/@inPattern/@filter/@source/@source/@source/@source /0/@elements.35/@inPattern/@filter/@source/@body/@source/@source/@source /0/@elements.35/@inPattern/@filter/@source/@body/@arguments.0/@source /0/@elements.35/@inPattern/@filter/@arguments.0/@condition/@source/@source /0/@elements.35/@inPattern/@filter/@arguments.0/@thenExpression/@source/@source/@source/@source /0/@elements.35/@inPattern/@filter/@arguments.0/@thenExpression/@arguments.0/@source /0/@elements.35/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.35/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="859:7-859:19" name="Iterator" model="/2"/>
        </elements>
        <filter xsi:type="ocl:OperatorCallExp" location="860:4-868:9" operationName="or">
          <source xsi:type="ocl:IteratorExp" location="860:4-861:51" name="exists">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="860:4-860:24" name="iterators">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="860:4-860:14" name="loopExpr">
                <source xsi:type="ocl:VariableExp" location="860:4-860:5" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
              </source>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="861:18-861:50" operationName="and">
              <source xsi:type="ocl:OperatorCallExp" location="861:18-861:39" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="861:18-861:27" name="varName">
                  <source xsi:type="ocl:VariableExp" location="861:18-861:19" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="861:30-861:39" name="varName">
                  <source xsi:type="ocl:VariableExp" location="861:30-861:31" referredVariable="/0/@elements.35/@inPattern/@filter/@source/@iterators.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:OperatorCallExp" location="861:44-861:50" operationName="&lt;>">
                <source xsi:type="ocl:VariableExp" location="861:44-861:45" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
                <arguments xsi:type="ocl:VariableExp" location="861:49-861:50" referredVariable="/0/@elements.35/@inPattern/@filter/@source/@iterators.0"/>
              </arguments>
            </body>
            <iterators location="861:14-861:15" varName="e" variableExp="/0/@elements.35/@inPattern/@filter/@source/@body/@source/@arguments.0/@source /0/@elements.35/@inPattern/@filter/@source/@body/@arguments.0/@arguments.0"/>
          </source>
          <arguments xsi:type="ocl:IfExp" location="863:4-868:9">
            <thenExpression xsi:type="ocl:OperatorCallExp" location="865:5-865:42" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="865:5-865:30" name="varName">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="865:5-865:22" name="result">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="865:5-865:15" name="loopExpr">
                    <source xsi:type="ocl:VariableExp" location="865:5-865:6" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
                  </source>
                </source>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="865:33-865:42" name="varName">
                <source xsi:type="ocl:VariableExp" location="865:33-865:34" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
              </arguments>
            </thenExpression>
            <condition xsi:type="ocl:OperationCallExp" location="863:7-863:45" operationName="oclIsTypeOf">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="863:7-863:17" name="loopExpr">
                <source xsi:type="ocl:VariableExp" location="863:7-863:8" referredVariable="/0/@elements.35/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:OclModelElement" location="863:30-863:44" name="IterateExp" model="/2"/>
            </condition>
            <elseExpression xsi:type="ocl:BooleanExp" location="867:5-867:10"/>
          </arguments>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="884:1-903:2" name="ResultNameIsUniqueInIterate">
      <commentsBefore>-- Rule 'ResultNameIsUniqueInIterate'</commentsBefore>
      <commentsBefore>-- This rule generates an 'error' Problem for each 'result' variable</commentsBefore>
      <commentsBefore>-- declaration of an IterateExp for which there exists an Iterator variable of</commentsBefore>
      <commentsBefore>-- the same name in the Iterate loop definition.</commentsBefore>
      <commentsAfter>-- Rule 'VariableNameIsUniqueInContainer'</commentsAfter>
      <commentsAfter>-- This rule generates a 'warning' Problem for each declaration of a variable</commentsAfter>
      <commentsAfter>-- for which there exists another variable declaration of the same name in the</commentsAfter>
      <commentsAfter>-- same namespace (except multiple intances of an Iterator name in a same loop</commentsAfter>
      <commentsAfter>-- which handle 'error' Problems).</commentsAfter>
      <outPattern location="895:2-902:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="896:3-902:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="896:7-896:22" name="Problem" model="/1"/>
          <bindings location="897:4-897:22" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="897:16-897:22" name="error"/>
          </bindings>
          <bindings location="898:4-898:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="898:16-898:26" name="location">
              <source xsi:type="ocl:VariableExp" location="898:16-898:17" referredVariable="/0/@elements.36/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="899:4-901:44" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="900:5-901:44" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="900:5-900:38" operationName="+">
                <source xsi:type="ocl:StringExp" location="900:5-900:26" stringSymbol="a variable named '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="900:29-900:38" name="varName">
                  <source xsi:type="ocl:VariableExp" location="900:29-900:30" referredVariable="/0/@elements.36/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="901:7-901:44" stringSymbol="' is already declared in this loop"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="885:2-894:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="886:3-886:30" varName="s" variableExp="/0/@elements.36/@inPattern/@filter/@condition/@source/@source /0/@elements.36/@inPattern/@filter/@elseExpression/@source/@source/@source /0/@elements.36/@inPattern/@filter/@elseExpression/@body/@source/@source/@source /0/@elements.36/@inPattern/@filter/@elseExpression/@body/@arguments.0/@source /0/@elements.36/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.36/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="886:7-886:30" name="VariableDeclaration" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IfExp" location="887:4-893:9">
          <thenExpression xsi:type="ocl:BooleanExp" location="889:5-889:10"/>
          <condition xsi:type="ocl:OperationCallExp" location="887:7-887:33" operationName="oclIsUndefined">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="887:7-887:16" name="baseExp">
              <source xsi:type="ocl:VariableExp" location="887:7-887:8" referredVariable="/0/@elements.36/@inPattern/@elements.0"/>
            </source>
          </condition>
          <elseExpression xsi:type="ocl:IteratorExp" location="891:5-892:52" name="exists">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="891:5-891:24" name="iterators">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="891:5-891:14" name="baseExp">
                <source xsi:type="ocl:VariableExp" location="891:5-891:6" referredVariable="/0/@elements.36/@inPattern/@elements.0"/>
              </source>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="892:19-892:51" operationName="and">
              <source xsi:type="ocl:OperatorCallExp" location="892:19-892:40" operationName="=">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="892:19-892:28" name="varName">
                  <source xsi:type="ocl:VariableExp" location="892:19-892:20" referredVariable="/0/@elements.36/@inPattern/@elements.0"/>
                </source>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="892:31-892:40" name="varName">
                  <source xsi:type="ocl:VariableExp" location="892:31-892:32" referredVariable="/0/@elements.36/@inPattern/@filter/@elseExpression/@iterators.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:OperatorCallExp" location="892:45-892:51" operationName="&lt;>">
                <source xsi:type="ocl:VariableExp" location="892:45-892:46" referredVariable="/0/@elements.36/@inPattern/@elements.0"/>
                <arguments xsi:type="ocl:VariableExp" location="892:50-892:51" referredVariable="/0/@elements.36/@inPattern/@filter/@elseExpression/@iterators.0"/>
              </arguments>
            </body>
            <iterators location="892:15-892:16" varName="e" variableExp="/0/@elements.36/@inPattern/@filter/@elseExpression/@body/@source/@arguments.0/@source /0/@elements.36/@inPattern/@filter/@elseExpression/@body/@arguments.0/@arguments.0"/>
          </elseExpression>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="910:1-923:2" name="VariableNameIsUniqueInContainer">
      <commentsBefore>-- Rule 'VariableNameIsUniqueInContainer'</commentsBefore>
      <commentsBefore>-- This rule generates a 'warning' Problem for each declaration of a variable</commentsBefore>
      <commentsBefore>-- for which there exists another variable declaration of the same name in the</commentsBefore>
      <commentsBefore>-- same namespace (except multiple intances of an Iterator name in a same loop</commentsBefore>
      <commentsBefore>-- which handle 'error' Problems).</commentsBefore>
      <outPattern location="915:2-922:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="916:3-922:4" varName="t">
          <type xsi:type="ocl:OclModelElement" location="916:7-916:22" name="Problem" model="/1"/>
          <bindings location="917:4-917:24" propertyName="severity">
            <value xsi:type="ocl:EnumLiteralExp" location="917:16-917:24" name="warning"/>
          </bindings>
          <bindings location="918:4-918:26" propertyName="location">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="918:16-918:26" name="location">
              <source xsi:type="ocl:VariableExp" location="918:16-918:17" referredVariable="/0/@elements.37/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="919:4-921:49" propertyName="description">
            <value xsi:type="ocl:OperatorCallExp" location="920:5-921:49" operationName="+">
              <source xsi:type="ocl:OperatorCallExp" location="920:5-920:38" operationName="+">
                <source xsi:type="ocl:StringExp" location="920:5-920:26" stringSymbol="a variable named '"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="920:29-920:38" name="varName">
                  <source xsi:type="ocl:VariableExp" location="920:29-920:30" referredVariable="/0/@elements.37/@inPattern/@elements.0"/>
                </arguments>
              </source>
              <arguments xsi:type="ocl:StringExp" location="921:7-921:49" stringSymbol="' is already declared in this container"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="911:2-914:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="912:3-912:30" varName="s" variableExp="/0/@elements.37/@inPattern/@filter/@source/@source /0/@elements.37/@inPattern/@filter/@body/@source/@source/@source /0/@elements.37/@inPattern/@filter/@body/@arguments.0/@source /0/@elements.37/@outPattern/@elements.0/@bindings.1/@value/@source /0/@elements.37/@outPattern/@elements.0/@bindings.2/@value/@source/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="912:7-912:30" name="VariableDeclaration" model="/2"/>
        </elements>
        <filter xsi:type="ocl:IteratorExp" location="913:4-913:69" name="exists">
          <source xsi:type="ocl:OperationCallExp" location="913:4-913:23" operationName="getDeclarations">
            <source xsi:type="ocl:VariableExp" location="913:4-913:5" referredVariable="/0/@elements.37/@inPattern/@elements.0"/>
          </source>
          <body xsi:type="ocl:OperatorCallExp" location="913:36-913:68" operationName="and">
            <source xsi:type="ocl:OperatorCallExp" location="913:36-913:57" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="913:36-913:45" name="varName">
                <source xsi:type="ocl:VariableExp" location="913:36-913:37" referredVariable="/0/@elements.37/@inPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="913:48-913:57" name="varName">
                <source xsi:type="ocl:VariableExp" location="913:48-913:49" referredVariable="/0/@elements.37/@inPattern/@filter/@iterators.0"/>
              </arguments>
            </source>
            <arguments xsi:type="ocl:OperatorCallExp" location="913:62-913:68" operationName="&lt;>">
              <source xsi:type="ocl:VariableExp" location="913:62-913:63" referredVariable="/0/@elements.37/@inPattern/@elements.0"/>
              <arguments xsi:type="ocl:VariableExp" location="913:67-913:68" referredVariable="/0/@elements.37/@inPattern/@filter/@iterators.0"/>
            </arguments>
          </body>
          <iterators location="913:32-913:33" varName="e" variableExp="/0/@elements.37/@inPattern/@filter/@body/@source/@arguments.0/@source /0/@elements.37/@inPattern/@filter/@body/@arguments.0/@arguments.0"/>
        </filter>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="2:14-2:21" name="Problem" elements="/0/@elements.20/@outPattern/@elements.0/@type /0/@elements.21/@outPattern/@elements.0/@type /0/@elements.22/@outPattern/@elements.0/@type /0/@elements.23/@outPattern/@elements.0/@type /0/@elements.24/@outPattern/@elements.0/@type /0/@elements.25/@outPattern/@elements.0/@type /0/@elements.26/@outPattern/@elements.0/@type /0/@elements.27/@outPattern/@elements.0/@type /0/@elements.28/@outPattern/@elements.0/@type /0/@elements.29/@outPattern/@elements.0/@type /0/@elements.30/@outPattern/@elements.0/@type /0/@elements.31/@outPattern/@elements.0/@type /0/@elements.32/@outPattern/@elements.0/@type /0/@elements.33/@outPattern/@elements.0/@type /0/@elements.34/@outPattern/@elements.0/@type /0/@elements.35/@outPattern/@elements.0/@type /0/@elements.36/@outPattern/@elements.0/@type /0/@elements.37/@outPattern/@elements.0/@type" model="/0/@outModels.0"/>
  <ocl:OclModel location="2:32-2:35" name="ATL" elements="/0/@elements.2/@definition/@feature/@type/@elementType /0/@elements.2/@definition/@feature/@initExpression/@source /0/@elements.3/@definition/@feature/@type/@elementType /0/@elements.3/@definition/@feature/@initExpression/@variable/@type /0/@elements.3/@definition/@feature/@initExpression/@variable/@initExpression/@source/@source/@source /0/@elements.4/@definition/@feature/@type /0/@elements.4/@definition/@feature/@initExpression/@source/@source/@source /0/@elements.5/@definition/@feature/@type/@elementType /0/@elements.5/@definition/@feature/@initExpression/@source/@source /0/@elements.6/@definition/@feature/@type/@elementType /0/@elements.6/@definition/@feature/@initExpression/@source/@source /0/@elements.7/@definition/@feature/@type/@elementType /0/@elements.7/@definition/@feature/@initExpression/@source/@source /0/@elements.8/@definition/@feature/@type/@elementType /0/@elements.8/@definition/@feature/@initExpression/@source/@source /0/@elements.9/@definition/@feature/@type/@elementType /0/@elements.9/@definition/@feature/@initExpression/@source/@source /0/@elements.10/@definition/@feature/@type/@elementType /0/@elements.10/@definition/@feature/@initExpression/@source/@source /0/@elements.11/@definition/@feature/@type/@elementType /0/@elements.11/@definition/@feature/@initExpression/@source/@source /0/@elements.12/@definition/@feature/@type/@elementType /0/@elements.12/@definition/@feature/@initExpression/@source/@source /0/@elements.13/@definition/@context_/@context_ /0/@elements.13/@definition/@feature/@type/@elementType /0/@elements.13/@definition/@feature/@initExpression/@source/@elements.0/@condition/@arguments.0 /0/@elements.14/@definition/@context_/@context_ /0/@elements.14/@definition/@feature/@type /0/@elements.14/@definition/@feature/@initExpression/@condition/@arguments.0 /0/@elements.15/@definition/@context_/@context_ /0/@elements.15/@definition/@feature/@type /0/@elements.16/@definition/@context_/@context_ /0/@elements.16/@definition/@feature/@type /0/@elements.17/@definition/@context_/@context_ /0/@elements.17/@definition/@feature/@returnType/@elementType /0/@elements.17/@definition/@feature/@body/@condition/@arguments.0 /0/@elements.17/@definition/@feature/@body/@elseExpression/@variable/@type /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@condition/@arguments.0 /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@condition/@arguments.0 /0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@condition/@arguments.0 /0/@elements.18/@definition/@context_/@context_ /0/@elements.18/@definition/@feature/@returnType/@elementType /0/@elements.18/@definition/@feature/@body/@variable/@type /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@condition/@source/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@condition/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@thenExpression/@elseExpression/@condition/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@condition/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@condition/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@arguments.0 /0/@elements.19/@definition/@context_/@context_ /0/@elements.19/@definition/@feature/@returnType /0/@elements.19/@definition/@feature/@body/@variable/@type /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@condition/@arguments.0 /0/@elements.20/@inPattern/@elements.0/@type /0/@elements.21/@inPattern/@elements.0/@type /0/@elements.22/@inPattern/@elements.0/@type /0/@elements.23/@inPattern/@elements.0/@type /0/@elements.24/@inPattern/@elements.0/@type /0/@elements.25/@inPattern/@elements.0/@type /0/@elements.26/@inPattern/@elements.0/@type /0/@elements.27/@inPattern/@elements.0/@type /0/@elements.28/@inPattern/@elements.0/@type /0/@elements.29/@inPattern/@elements.0/@type /0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@variable/@type /0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@in_/@source/@arguments.0 /0/@elements.29/@inPattern/@filter/@elseExpression/@arguments.0/@in_/@arguments.0/@arguments.0 /0/@elements.30/@inPattern/@elements.0/@type /0/@elements.30/@inPattern/@filter/@source/@arguments.0/@condition/@arguments.0 /0/@elements.30/@inPattern/@filter/@arguments.0/@arguments.0 /0/@elements.31/@inPattern/@elements.0/@type /0/@elements.31/@inPattern/@filter/@source/@arguments.0/@condition/@arguments.0 /0/@elements.31/@inPattern/@filter/@arguments.0/@arguments.0 /0/@elements.32/@inPattern/@elements.0/@type /0/@elements.33/@inPattern/@elements.0/@type /0/@elements.34/@inPattern/@elements.0/@type /0/@elements.35/@inPattern/@elements.0/@type /0/@elements.35/@inPattern/@filter/@arguments.0/@condition/@arguments.0 /0/@elements.36/@inPattern/@elements.0/@type /0/@elements.37/@inPattern/@elements.0/@type" model="/0/@inModels.0"/>
  <ocl:VariableDeclaration location="134:6-134:10" varName="self" variableExp="/0/@elements.13/@definition/@feature/@initExpression/@source/@elements.0/@condition/@source"/>
  <ocl:VariableDeclaration location="136:4-136:8" varName="self" variableExp="/0/@elements.13/@definition/@feature/@initExpression/@source/@elements.0/@thenExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="140:3-140:7" varName="self" variableExp="/0/@elements.13/@definition/@feature/@initExpression/@source/@elements.1/@source/@source"/>
  <ocl:VariableDeclaration location="141:3-141:7" varName="self" variableExp="/0/@elements.13/@definition/@feature/@initExpression/@source/@elements.2/@source/@source/@source"/>
  <ocl:VariableDeclaration location="154:5-154:9" varName="self" variableExp="/0/@elements.14/@definition/@feature/@initExpression/@condition/@source"/>
  <ocl:VariableDeclaration location="156:3-156:7" varName="self" variableExp="/0/@elements.14/@definition/@feature/@initExpression/@thenExpression/@source/@source"/>
  <ocl:VariableDeclaration location="158:3-158:7" varName="self" variableExp="/0/@elements.14/@definition/@feature/@initExpression/@elseExpression/@source/@source"/>
  <ocl:VariableDeclaration location="182:9-182:13" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="183:3-183:7" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="184:14-184:18" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="185:3-185:7" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="186:10-186:20" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="186:54-186:58" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="187:3-187:13" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="187:47-187:51" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="188:10-188:20" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="188:55-188:59" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="189:3-189:13" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="189:48-189:52" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="190:10-190:20" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="191:42-191:46" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@body/@source"/>
  <ocl:VariableDeclaration location="192:3-192:13" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="193:41-193:45" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@body/@source"/>
  <ocl:VariableDeclaration location="194:10-194:20" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="194:48-194:52" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@source"/>
  <ocl:VariableDeclaration location="195:3-195:13" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="195:41-195:45" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@source"/>
  <ocl:VariableDeclaration location="196:10-196:20" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="197:42-197:46" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@body/@source"/>
  <ocl:VariableDeclaration location="198:3-198:13" varName="thisModule" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="199:41-199:45" varName="self" variableExp="/0/@elements.15/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@body/@source"/>
  <ocl:VariableDeclaration location="238:9-238:13" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="238:43-238:47" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="239:14-239:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="239:48-239:52" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="240:14-240:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="240:48-240:52" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="241:14-241:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="241:53-241:57" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="242:14-242:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="242:53-242:57" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="243:14-243:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="244:8-244:12" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="245:14-245:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="245:57-245:61" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="246:14-246:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="246:49-246:53" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="247:14-247:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="247:48-247:52" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="248:14-248:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="248:52-248:56" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="249:14-249:18" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="249:57-249:61" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="250:10-250:20" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="250:58-250:62" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="251:8-251:18" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="251:56-251:60" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="252:10-252:20" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source"/>
  <ocl:VariableDeclaration location="252:55-252:59" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="253:8-253:18" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="253:53-253:57" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@source/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="255:10-255:20" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="257:7-257:17" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@source/@source/@source"/>
  <ocl:VariableDeclaration location="257:34-257:38" varName="self" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@arguments.0"/>
  <ocl:VariableDeclaration location="259:5-259:15" varName="thisModule" variableExp="/0/@elements.16/@definition/@feature/@initExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="286:5-286:9" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@condition/@source"/>
  <ocl:VariableDeclaration location="288:12-288:16" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@thenExpression/@elements.0"/>
  <ocl:VariableDeclaration location="290:33-290:37" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@elseExpression/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="294:5-294:9" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@thenExpression/@source/@elements.0"/>
  <ocl:VariableDeclaration location="301:6-301:10" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@thenExpression/@source/@elements.0"/>
  <ocl:VariableDeclaration location="308:7-308:11" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@thenExpression/@source/@elements.0"/>
  <ocl:VariableDeclaration location="313:7-313:11" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@elseExpression/@in_/@elseExpression/@elseExpression/@elseExpression/@source/@elements.0"/>
  <ocl:VariableDeclaration location="348:32-348:36" varName="self" variableExp="/0/@elements.18/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="377:25-377:29" varName="self" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@arguments.0"/>
  <ocl:VariableDeclaration location="389:25-389:29" varName="self" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@elseExpression/@thenExpression/@condition/@arguments.0"/>
  <ocl:VariableDeclaration location="464:32-464:36" varName="self" variableExp="/0/@elements.19/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="515:4-515:14" varName="thisModule" variableExp="/0/@elements.21/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="531:4-531:14" varName="thisModule" variableExp="/0/@elements.22/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="549:4-549:14" varName="thisModule" variableExp="/0/@elements.23/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="658:5-658:15" varName="thisModule" variableExp="/0/@elements.27/@inPattern/@filter/@elseExpression/@source/@source"/>
  <ocl:VariableDeclaration location="801:4-801:14" varName="thisModule" variableExp="/0/@elements.32/@inPattern/@filter/@source/@source/@source"/>
  <ocl:VariableDeclaration location="821:4-821:14" varName="thisModule" variableExp="/0/@elements.33/@inPattern/@filter/@source/@source/@source"/>
</xmi:XMI>

<?xml version="1.0" encoding="ISO-8859-1"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:atl="http://www.eclipse.org/gmt/2005/ATL" xmlns:ocl="http://www.eclipse.org/gmt/2005/OCL">
  <atl:Module location="1:1-643:2" name="TextualPathExp2PathExp">
    <inModels location="2:27-2:46" name="IN" metamodel="/2"/>
    <outModels location="2:8-2:21" name="OUT" metamodel="/1"/>
    <elements xsi:type="atl:Helper" location="13:1-15:27">
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- HELPERS --------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- This helper returns the root TextualPathExp element of the input</commentsBefore>
      <commentsBefore>-- TextualPathExp model.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!TextualPathExp</commentsBefore>
      <commentsAfter>-- This helper returns the 1st Transition element contained by the root</commentsAfter>
      <commentsAfter>-- TextualPathExp model.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="13:8-15:26">
        <feature xsi:type="ocl:Attribute" location="13:13-15:26" name="root">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="14:2-15:26" operationName="first">
            <source xsi:type="ocl:CollectionOperationCallExp" location="14:2-15:17" operationName="asSequence">
              <source xsi:type="ocl:OperationCallExp" location="14:2-14:46" operationName="allInstances">
                <source xsi:type="ocl:OclModelElement" location="14:2-14:31" name="TextualPathExp" model="/2"/>
              </source>
            </source>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="13:20-13:49" name="TextualPathExp" model="/2"/>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="22:1-23:44">
      <commentsBefore>-- This helper returns the 1st Transition element contained by the root</commentsBefore>
      <commentsBefore>-- TextualPathExp model.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-- This helper returns the last Transition element contained by the root</commentsAfter>
      <commentsAfter>-- TextualPathExp model.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="22:8-23:43">
        <feature xsi:type="ocl:Attribute" location="22:13-23:43" name="rootTrans">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="23:2-23:43" operationName="first">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="23:2-23:34" name="transitions">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="23:2-23:22" name="path">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="23:2-23:17" name="root">
                  <source xsi:type="ocl:VariableExp" location="23:2-23:12" referredVariable="/3"/>
                </source>
              </source>
            </source>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="22:25-22:50" name="Transition" model="/2"/>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="30:1-31:43">
      <commentsBefore>-- This helper returns the last Transition element contained by the root</commentsBefore>
      <commentsBefore>-- TextualPathExp model.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-- This helper computes the Set containing all the Path elements of the input</commentsAfter>
      <commentsAfter>-- TextualPathExp model.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!Path)</commentsAfter>
      <definition location="30:8-31:42">
        <feature xsi:type="ocl:Attribute" location="30:13-31:42" name="leafTrans">
          <initExpression xsi:type="ocl:CollectionOperationCallExp" location="31:2-31:42" operationName="last">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="31:2-31:34" name="transitions">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="31:2-31:22" name="path">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="31:2-31:17" name="root">
                  <source xsi:type="ocl:VariableExp" location="31:2-31:12" referredVariable="/4"/>
                </source>
              </source>
            </source>
          </initExpression>
          <type xsi:type="ocl:OclModelElement" location="30:25-30:50" name="Transition" model="/2"/>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="38:1-39:37">
      <commentsBefore>-- This helper computes the Set containing all the Path elements of the input</commentsBefore>
      <commentsBefore>-- TextualPathExp model.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!Path)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of Path elements that are contained by</commentsAfter>
      <commentsAfter>-- AlternativeTransition elements.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="38:8-39:36">
        <feature xsi:type="ocl:Attribute" location="38:13-39:36" name="allPaths">
          <initExpression xsi:type="ocl:OperationCallExp" location="39:2-39:36" operationName="allInstances">
            <source xsi:type="ocl:OclModelElement" location="39:2-39:21" name="Path" model="/2"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="38:24-38:48">
            <elementType xsi:type="ocl:OclModelElement" location="38:28-38:47" name="Path" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="46:1-53:5">
      <commentsBefore>-- This helper computes the Set of Path elements that are contained by</commentsBefore>
      <commentsBefore>-- AlternativeTransition elements.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of PrimitiveTrans that are not contained</commentsAfter>
      <commentsAfter>-- by any AlternativeTransition.</commentsAfter>
      <commentsAfter>-- To this end, it selects, among all Paths, those that are not contained</commentsAfter>
      <commentsAfter>-- by any AlternativeTransition element. It then gets, for the selected Paths,</commentsAfter>
      <commentsAfter>-- the transitions of type PrimitiveTrans.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="46:8-53:4">
        <feature xsi:type="ocl:Attribute" location="46:13-53:4" name="altPaths">
          <initExpression xsi:type="ocl:IteratorExp" location="47:2-53:4" name="select">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="47:2-47:21" name="allPaths">
              <source xsi:type="ocl:VariableExp" location="47:2-47:12" referredVariable="/5"/>
            </source>
            <body xsi:type="ocl:CollectionOperationCallExp" location="49:4-52:18" operationName="includes">
              <source xsi:type="ocl:CollectionOperationCallExp" location="49:4-51:16" operationName="flatten">
                <source xsi:type="ocl:IteratorExp" location="49:4-50:30" name="collect">
                  <source xsi:type="ocl:OperationCallExp" location="49:4-49:50" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="49:4-49:35" name="AlternativeTrans" model="/2"/>
                  </source>
                  <body xsi:type="ocl:NavigationOrAttributeCallExp" location="50:19-50:29" name="altPaths">
                    <source xsi:type="ocl:VariableExp" location="50:19-50:20" referredVariable="/0/@elements.4/@definition/@feature/@initExpression/@body/@source/@source/@iterators.0"/>
                  </body>
                  <iterators location="50:15-50:16" varName="b" variableExp="/0/@elements.4/@definition/@feature/@initExpression/@body/@source/@source/@body/@source"/>
                </source>
              </source>
              <arguments xsi:type="ocl:VariableExp" location="52:16-52:17" referredVariable="/0/@elements.4/@definition/@feature/@initExpression/@iterators.0"/>
            </body>
            <iterators location="48:12-48:13" varName="a" variableExp="/0/@elements.4/@definition/@feature/@initExpression/@body/@arguments.0"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="46:24-46:48">
            <elementType xsi:type="ocl:OclModelElement" location="46:28-46:47" name="Path" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="63:1-73:62">
      <commentsBefore>-- This helper computes the Set of PrimitiveTrans that are not contained</commentsBefore>
      <commentsBefore>-- by any AlternativeTransition.</commentsBefore>
      <commentsBefore>-- To this end, it selects, among all Paths, those that are not contained</commentsBefore>
      <commentsBefore>-- by any AlternativeTransition element. It then gets, for the selected Paths,</commentsBefore>
      <commentsBefore>-- the transitions of type PrimitiveTrans.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of 'single' primitive transitions.</commentsAfter>
      <commentsAfter>-- For this purpose, it selects in the primTransitions set, the transitions</commentsAfter>
      <commentsAfter>-- whose 'isMultiple' attribute is set to false.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="63:8-73:61">
        <feature xsi:type="ocl:Attribute" location="63:13-73:61" name="primTransitions">
          <initExpression xsi:type="ocl:IteratorExp" location="64:2-73:61" name="select">
            <source xsi:type="ocl:CollectionOperationCallExp" location="64:2-72:14" operationName="flatten">
              <source xsi:type="ocl:IteratorExp" location="64:2-71:31" name="collect">
                <source xsi:type="ocl:IteratorExp" location="64:2-70:4" name="select">
                  <source xsi:type="ocl:OperationCallExp" location="64:2-64:36" operationName="allInstances">
                    <source xsi:type="ocl:OclModelElement" location="64:2-64:21" name="Path" model="/2"/>
                  </source>
                  <body xsi:type="ocl:OperatorCallExp" location="66:4-69:18" operationName="not">
                    <source xsi:type="ocl:CollectionOperationCallExp" location="66:8-69:18" operationName="includes">
                      <source xsi:type="ocl:CollectionOperationCallExp" location="66:8-68:16" operationName="flatten">
                        <source xsi:type="ocl:IteratorExp" location="66:8-67:30" name="collect">
                          <source xsi:type="ocl:OperationCallExp" location="66:8-66:54" operationName="allInstances">
                            <source xsi:type="ocl:OclModelElement" location="66:8-66:39" name="AlternativeTrans" model="/2"/>
                          </source>
                          <body xsi:type="ocl:NavigationOrAttributeCallExp" location="67:19-67:29" name="altPaths">
                            <source xsi:type="ocl:VariableExp" location="67:19-67:20" referredVariable="/0/@elements.5/@definition/@feature/@initExpression/@source/@source/@source/@body/@source/@source/@source/@iterators.0"/>
                          </body>
                          <iterators location="67:15-67:16" varName="b" variableExp="/0/@elements.5/@definition/@feature/@initExpression/@source/@source/@source/@body/@source/@source/@source/@body/@source"/>
                        </source>
                      </source>
                      <arguments xsi:type="ocl:VariableExp" location="69:16-69:17" referredVariable="/0/@elements.5/@definition/@feature/@initExpression/@source/@source/@source/@iterators.0"/>
                    </source>
                  </body>
                  <iterators location="65:12-65:13" varName="a" variableExp="/0/@elements.5/@definition/@feature/@initExpression/@source/@source/@source/@body/@source/@arguments.0"/>
                </source>
                <body xsi:type="ocl:NavigationOrAttributeCallExp" location="71:17-71:30" name="transitions">
                  <source xsi:type="ocl:VariableExp" location="71:17-71:18" referredVariable="/0/@elements.5/@definition/@feature/@initExpression/@source/@source/@iterators.0"/>
                </body>
                <iterators location="71:13-71:14" varName="p" variableExp="/0/@elements.5/@definition/@feature/@initExpression/@source/@source/@body/@source"/>
              </source>
            </source>
            <body xsi:type="ocl:OperationCallExp" location="73:16-73:60" operationName="oclIsTypeOf">
              <source xsi:type="ocl:VariableExp" location="73:16-73:17" referredVariable="/0/@elements.5/@definition/@feature/@initExpression/@iterators.0"/>
              <arguments xsi:type="ocl:OclModelElement" location="73:30-73:59" name="PrimitiveTrans" model="/2"/>
            </body>
            <iterators location="73:12-73:13" varName="c" variableExp="/0/@elements.5/@definition/@feature/@initExpression/@body/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="63:31-63:65">
            <elementType xsi:type="ocl:OclModelElement" location="63:35-63:64" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="81:1-82:63">
      <commentsBefore>-- This helper computes the Set of 'single' primitive transitions.</commentsBefore>
      <commentsBefore>-- For this purpose, it selects in the primTransitions set, the transitions</commentsBefore>
      <commentsBefore>-- whose 'isMultiple' attribute is set to false.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of 'multiple' primitive transitions.</commentsAfter>
      <commentsAfter>-- For this purpose, it selects in the primTransitions set, the transitions</commentsAfter>
      <commentsAfter>-- whose 'isMultiple' attribute is set to true.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="81:8-82:62">
        <feature xsi:type="ocl:Attribute" location="81:13-82:62" name="singlePrimTransitions">
          <initExpression xsi:type="ocl:IteratorExp" location="82:2-82:62" name="select">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="82:2-82:28" name="primTransitions">
              <source xsi:type="ocl:VariableExp" location="82:2-82:12" referredVariable="/6"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="82:41-82:61" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="82:41-82:53" name="isMultiple">
                <source xsi:type="ocl:VariableExp" location="82:41-82:42" referredVariable="/0/@elements.6/@definition/@feature/@initExpression/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:BooleanExp" location="82:56-82:61"/>
            </body>
            <iterators location="82:37-82:38" varName="c" variableExp="/0/@elements.6/@definition/@feature/@initExpression/@body/@source/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="81:37-81:71">
            <elementType xsi:type="ocl:OclModelElement" location="81:41-81:70" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="90:1-91:62">
      <commentsBefore>-- This helper computes the Set of 'multiple' primitive transitions.</commentsBefore>
      <commentsBefore>-- For this purpose, it selects in the primTransitions set, the transitions</commentsBefore>
      <commentsBefore>-- whose 'isMultiple' attribute is set to true.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of PrimitiveTrans that are contained by an</commentsAfter>
      <commentsAfter>-- AlternativeTransition, except those that are the last transition of their</commentsAfter>
      <commentsAfter>-- Path.</commentsAfter>
      <commentsAfter>-- To this end, the helper first collects the transitions contained by each</commentsAfter>
      <commentsAfter>-- alternative path. For each collected sequence of transitions of size S, it</commentsAfter>
      <commentsAfter>-- gets the (S-1 ) first transition. Finally, it selects in the built sequence</commentsAfter>
      <commentsAfter>-- the transitions of type PrimitiveTrans.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="90:8-91:61">
        <feature xsi:type="ocl:Attribute" location="90:13-91:61" name="multiplePrimTransitions">
          <initExpression xsi:type="ocl:IteratorExp" location="91:2-91:61" name="select">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="91:2-91:28" name="primTransitions">
              <source xsi:type="ocl:VariableExp" location="91:2-91:12" referredVariable="/7"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="91:41-91:60" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="91:41-91:53" name="isMultiple">
                <source xsi:type="ocl:VariableExp" location="91:41-91:42" referredVariable="/0/@elements.7/@definition/@feature/@initExpression/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:BooleanExp" location="91:56-91:60" booleanSymbol="true"/>
            </body>
            <iterators location="91:37-91:38" varName="c" variableExp="/0/@elements.7/@definition/@feature/@initExpression/@body/@source/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="90:39-90:73">
            <elementType xsi:type="ocl:OclModelElement" location="90:43-90:72" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="103:1-112:62">
      <commentsBefore>-- This helper computes the Set of PrimitiveTrans that are contained by an</commentsBefore>
      <commentsBefore>-- AlternativeTransition, except those that are the last transition of their</commentsBefore>
      <commentsBefore>-- Path.</commentsBefore>
      <commentsBefore>-- To this end, the helper first collects the transitions contained by each</commentsBefore>
      <commentsBefore>-- alternative path. For each collected sequence of transitions of size S, it</commentsBefore>
      <commentsBefore>-- gets the (S-1 ) first transition. Finally, it selects in the built sequence</commentsBefore>
      <commentsBefore>-- the transitions of type PrimitiveTrans.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of 'single' alternative transitions.</commentsAfter>
      <commentsAfter>-- For this purpose, it selects in the altTransitions1 set, the transitions</commentsAfter>
      <commentsAfter>-- whose 'isMultiple' attribute is set to false.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="103:8-112:61">
        <feature xsi:type="ocl:Attribute" location="103:13-112:61" name="altTransitions1">
          <initExpression xsi:type="ocl:IteratorExp" location="104:2-112:61" name="select">
            <source xsi:type="ocl:CollectionOperationCallExp" location="104:2-111:14" operationName="flatten">
              <source xsi:type="ocl:CollectionOperationCallExp" location="104:2-110:17" operationName="asSequence">
                <source xsi:type="ocl:IterateExp" location="104:2-109:4">
                  <source xsi:type="ocl:IteratorExp" location="104:2-105:31" name="collect">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="104:2-104:21" name="altPaths">
                      <source xsi:type="ocl:VariableExp" location="104:2-104:12" referredVariable="/8"/>
                    </source>
                    <body xsi:type="ocl:NavigationOrAttributeCallExp" location="105:17-105:30" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="105:17-105:18" referredVariable="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@source/@iterators.0"/>
                    </body>
                    <iterators location="105:13-105:14" varName="p" variableExp="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@source/@body/@source"/>
                  </source>
                  <body xsi:type="ocl:CollectionOperationCallExp" location="108:4-108:50" operationName="including">
                    <source xsi:type="ocl:VariableExp" location="108:4-108:7" referredVariable="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@result"/>
                    <arguments xsi:type="ocl:CollectionOperationCallExp" location="108:19-108:49" operationName="subSequence">
                      <source xsi:type="ocl:VariableExp" location="108:19-108:20" referredVariable="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@iterators.0"/>
                      <arguments xsi:type="ocl:IntegerExp" location="108:34-108:35" integerSymbol="1"/>
                      <arguments xsi:type="ocl:OperatorCallExp" location="108:37-108:48" operationName="-">
                        <source xsi:type="ocl:CollectionOperationCallExp" location="108:37-108:46" operationName="size">
                          <source xsi:type="ocl:VariableExp" location="108:37-108:38" referredVariable="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@iterators.0"/>
                        </source>
                        <arguments xsi:type="ocl:IntegerExp" location="108:47-108:48" integerSymbol="1"/>
                      </arguments>
                    </arguments>
                  </body>
                  <iterators location="106:13-106:14" varName="e" variableExp="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@body/@arguments.0/@source /0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@body/@arguments.0/@arguments.1/@source/@source"/>
                  <result location="107:7-107:66" varName="res" variableExp="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@body/@source">
                    <type xsi:type="ocl:SequenceType" location="107:13-107:58">
                      <elementType xsi:type="ocl:SequenceType" location="107:22-107:57">
                        <elementType xsi:type="ocl:OclModelElement" location="107:31-107:56" name="Transition" model="/2"/>
                      </elementType>
                    </type>
                    <initExpression xsi:type="ocl:SetExp" location="107:61-107:66"/>
                  </result>
                </source>
              </source>
            </source>
            <body xsi:type="ocl:OperationCallExp" location="112:16-112:60" operationName="oclIsTypeOf">
              <source xsi:type="ocl:VariableExp" location="112:16-112:17" referredVariable="/0/@elements.8/@definition/@feature/@initExpression/@iterators.0"/>
              <arguments xsi:type="ocl:OclModelElement" location="112:30-112:59" name="PrimitiveTrans" model="/2"/>
            </body>
            <iterators location="112:12-112:13" varName="c" variableExp="/0/@elements.8/@definition/@feature/@initExpression/@body/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="103:31-103:65">
            <elementType xsi:type="ocl:OclModelElement" location="103:35-103:64" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="120:1-121:63">
      <commentsBefore>-- This helper computes the Set of 'single' alternative transitions.</commentsBefore>
      <commentsBefore>-- For this purpose, it selects in the altTransitions1 set, the transitions</commentsBefore>
      <commentsBefore>-- whose 'isMultiple' attribute is set to false.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of 'multiple' alternative transitions.</commentsAfter>
      <commentsAfter>-- For this purpose, it selects in the altTransitions1 set, the transitions</commentsAfter>
      <commentsAfter>-- whose 'isMultiple' attribute is set to true.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="120:8-121:62">
        <feature xsi:type="ocl:Attribute" location="120:13-121:62" name="singleAltTransitions1">
          <initExpression xsi:type="ocl:IteratorExp" location="121:2-121:62" name="select">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="121:2-121:28" name="altTransitions1">
              <source xsi:type="ocl:VariableExp" location="121:2-121:12" referredVariable="/9"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="121:41-121:61" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="121:41-121:53" name="isMultiple">
                <source xsi:type="ocl:VariableExp" location="121:41-121:42" referredVariable="/0/@elements.9/@definition/@feature/@initExpression/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:BooleanExp" location="121:56-121:61"/>
            </body>
            <iterators location="121:37-121:38" varName="c" variableExp="/0/@elements.9/@definition/@feature/@initExpression/@body/@source/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="120:37-120:71">
            <elementType xsi:type="ocl:OclModelElement" location="120:41-120:70" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="129:1-130:62">
      <commentsBefore>-- This helper computes the Set of 'multiple' alternative transitions.</commentsBefore>
      <commentsBefore>-- For this purpose, it selects in the altTransitions1 set, the transitions</commentsBefore>
      <commentsBefore>-- whose 'isMultiple' attribute is set to true.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Set of PrimitiveTrans that are contained by an</commentsAfter>
      <commentsAfter>-- AlternativeTransition and that are the last transition of their Path (which</commentsAfter>
      <commentsAfter>-- may also be the first transition if the path contains a singel transition).</commentsAfter>
      <commentsAfter>-- To this end, the helper first collects the transitions contained by each</commentsAfter>
      <commentsAfter>-- alternative path. For each collected sequence of transitions of size S, it</commentsAfter>
      <commentsAfter>-- gets the transition number S. Finally, it selects in the built sequence</commentsAfter>
      <commentsAfter>-- the transitions of type PrimitiveTrans.</commentsAfter>
      <commentsAfter>-- CONTEXT: thisModule</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="129:8-130:61">
        <feature xsi:type="ocl:Attribute" location="129:13-130:61" name="multipleAltTransitions1">
          <initExpression xsi:type="ocl:IteratorExp" location="130:2-130:61" name="select">
            <source xsi:type="ocl:NavigationOrAttributeCallExp" location="130:2-130:28" name="altTransitions1">
              <source xsi:type="ocl:VariableExp" location="130:2-130:12" referredVariable="/10"/>
            </source>
            <body xsi:type="ocl:OperatorCallExp" location="130:41-130:60" operationName="=">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="130:41-130:53" name="isMultiple">
                <source xsi:type="ocl:VariableExp" location="130:41-130:42" referredVariable="/0/@elements.10/@definition/@feature/@initExpression/@iterators.0"/>
              </source>
              <arguments xsi:type="ocl:BooleanExp" location="130:56-130:60" booleanSymbol="true"/>
            </body>
            <iterators location="130:37-130:38" varName="c" variableExp="/0/@elements.10/@definition/@feature/@initExpression/@body/@source/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="129:39-129:73">
            <elementType xsi:type="ocl:OclModelElement" location="129:43-129:72" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="142:1-151:62">
      <commentsBefore>-- This helper computes the Set of PrimitiveTrans that are contained by an</commentsBefore>
      <commentsBefore>-- AlternativeTransition and that are the last transition of their Path (which</commentsBefore>
      <commentsBefore>-- may also be the first transition if the path contains a singel transition).</commentsBefore>
      <commentsBefore>-- To this end, the helper first collects the transitions contained by each</commentsBefore>
      <commentsBefore>-- alternative path. For each collected sequence of transitions of size S, it</commentsBefore>
      <commentsBefore>-- gets the transition number S. Finally, it selects in the built sequence</commentsBefore>
      <commentsBefore>-- the transitions of type PrimitiveTrans.</commentsBefore>
      <commentsBefore>-- CONTEXT: thisModule</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the containing Path of the contextual Transition</commentsAfter>
      <commentsAfter>-- element.</commentsAfter>
      <commentsAfter>-- For this purpose, it selects ammong all Paths, the one that contains the</commentsAfter>
      <commentsAfter>-- contextual Transition elements.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!Transition</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Path</commentsAfter>
      <definition location="142:8-151:61">
        <feature xsi:type="ocl:Attribute" location="142:13-151:61" name="altTransitions2">
          <initExpression xsi:type="ocl:IteratorExp" location="143:2-151:61" name="select">
            <source xsi:type="ocl:CollectionOperationCallExp" location="143:2-150:14" operationName="flatten">
              <source xsi:type="ocl:CollectionOperationCallExp" location="143:2-149:17" operationName="asSequence">
                <source xsi:type="ocl:IterateExp" location="143:2-148:4">
                  <source xsi:type="ocl:IteratorExp" location="143:2-144:31" name="collect">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="143:2-143:21" name="altPaths">
                      <source xsi:type="ocl:VariableExp" location="143:2-143:12" referredVariable="/11"/>
                    </source>
                    <body xsi:type="ocl:NavigationOrAttributeCallExp" location="144:17-144:30" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="144:17-144:18" referredVariable="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@source/@iterators.0"/>
                    </body>
                    <iterators location="144:13-144:14" varName="p" variableExp="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@source/@body/@source"/>
                  </source>
                  <body xsi:type="ocl:CollectionOperationCallExp" location="147:4-147:29" operationName="including">
                    <source xsi:type="ocl:VariableExp" location="147:4-147:7" referredVariable="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@result"/>
                    <arguments xsi:type="ocl:CollectionOperationCallExp" location="147:19-147:28" operationName="last">
                      <source xsi:type="ocl:VariableExp" location="147:19-147:20" referredVariable="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@iterators.0"/>
                    </arguments>
                  </body>
                  <iterators location="145:13-145:14" varName="e" variableExp="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@body/@arguments.0/@source"/>
                  <result location="146:7-146:66" varName="res" variableExp="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@body/@source">
                    <type xsi:type="ocl:SequenceType" location="146:13-146:58">
                      <elementType xsi:type="ocl:SequenceType" location="146:22-146:57">
                        <elementType xsi:type="ocl:OclModelElement" location="146:31-146:56" name="Transition" model="/2"/>
                      </elementType>
                    </type>
                    <initExpression xsi:type="ocl:SetExp" location="146:61-146:66"/>
                  </result>
                </source>
              </source>
            </source>
            <body xsi:type="ocl:OperationCallExp" location="151:16-151:60" operationName="oclIsTypeOf">
              <source xsi:type="ocl:VariableExp" location="151:16-151:17" referredVariable="/0/@elements.11/@definition/@feature/@initExpression/@iterators.0"/>
              <arguments xsi:type="ocl:OclModelElement" location="151:30-151:59" name="PrimitiveTrans" model="/2"/>
            </body>
            <iterators location="151:12-151:13" varName="c" variableExp="/0/@elements.11/@definition/@feature/@initExpression/@body/@source"/>
          </initExpression>
          <type xsi:type="ocl:SetType" location="142:31-142:65">
            <elementType xsi:type="ocl:OclModelElement" location="142:35-142:64" name="PrimitiveTrans" model="/2"/>
          </type>
        </feature>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="160:1-164:13">
      <commentsBefore>-- This helper computes the containing Path of the contextual Transition</commentsBefore>
      <commentsBefore>-- element.</commentsBefore>
      <commentsBefore>-- For this purpose, it selects ammong all Paths, the one that contains the</commentsBefore>
      <commentsBefore>-- contextual Transition elements.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!Transition</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Path</commentsBefore>
      <commentsAfter>-- This helper computes a boolean value assessing whether or not the contextual</commentsAfter>
      <commentsAfter>-- PrimitiveTrans is the last transition of its Path.</commentsAfter>
      <commentsAfter>-- To this end, the helper first gets the path of the contextual transition (by</commentsAfter>
      <commentsAfter>-- means of the 'getPath' helper) and then compares the contextual transition</commentsAfter>
      <commentsAfter>-- to the last transition of the path.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="160:8-164:12">
        <feature xsi:type="ocl:Operation" location="161:7-164:12" name="getPath">
          <returnType xsi:type="ocl:OclModelElement" location="161:20-161:39" name="Path" model="/2"/>
          <body xsi:type="ocl:CollectionOperationCallExp" location="162:2-164:12" operationName="first">
            <source xsi:type="ocl:IteratorExp" location="162:2-163:46" name="select">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="162:2-162:21" name="allPaths">
                <source xsi:type="ocl:VariableExp" location="162:2-162:12" referredVariable="/12"/>
              </source>
              <body xsi:type="ocl:CollectionOperationCallExp" location="163:16-163:45" operationName="includes">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="163:16-163:29" name="transitions">
                  <source xsi:type="ocl:VariableExp" location="163:16-163:17" referredVariable="/0/@elements.12/@definition/@feature/@body/@source/@iterators.0"/>
                </source>
                <arguments xsi:type="ocl:VariableExp" location="163:40-163:44" referredVariable="/13"/>
              </body>
              <iterators location="163:12-163:13" varName="a" variableExp="/0/@elements.12/@definition/@feature/@body/@source/@body/@source/@source"/>
            </source>
          </body>
        </feature>
        <context_ location="160:8-160:41">
          <context_ xsi:type="ocl:OclModelElement" location="160:16-160:41" name="Transition" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="174:1-177:34">
      <commentsBefore>-- This helper computes a boolean value assessing whether or not the contextual</commentsBefore>
      <commentsBefore>-- PrimitiveTrans is the last transition of its Path.</commentsBefore>
      <commentsBefore>-- To this end, the helper first gets the path of the contextual transition (by</commentsBefore>
      <commentsBefore>-- means of the 'getPath' helper) and then compares the contextual transition</commentsBefore>
      <commentsBefore>-- to the last transition of the path.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-- This helper computes a boolean value assessing whether or not the contextual</commentsAfter>
      <commentsAfter>-- PrimitiveTrans is the first transition of its Path.</commentsAfter>
      <commentsAfter>-- To this end, the helper first gets the path of the contextual transition (by</commentsAfter>
      <commentsAfter>-- means of the 'getPath' helper) and then compares the contextual transition</commentsAfter>
      <commentsAfter>-- to the first transition of the path.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="174:8-177:33">
        <feature xsi:type="ocl:Operation" location="175:7-177:33" name="isLastOfPath">
          <returnType xsi:type="ocl:BooleanType" location="175:24-175:31"/>
          <body xsi:type="ocl:LetExp" location="176:2-177:33">
            <variable location="176:6-176:46" varName="p" variableExp="/0/@elements.13/@definition/@feature/@body/@in_/@arguments.0/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="176:10-176:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="176:32-176:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="176:32-176:36" referredVariable="/14"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:OperatorCallExp" location="177:5-177:33" operationName="=">
              <source xsi:type="ocl:VariableExp" location="177:5-177:9" referredVariable="/15"/>
              <arguments xsi:type="ocl:CollectionOperationCallExp" location="177:12-177:33" operationName="last">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="177:12-177:25" name="transitions">
                  <source xsi:type="ocl:VariableExp" location="177:12-177:13" referredVariable="/0/@elements.13/@definition/@feature/@body/@variable"/>
                </source>
              </arguments>
            </in_>
          </body>
        </feature>
        <context_ location="174:8-174:45">
          <context_ xsi:type="ocl:OclModelElement" location="174:16-174:45" name="PrimitiveTrans" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="187:1-190:35">
      <commentsBefore>-- This helper computes a boolean value assessing whether or not the contextual</commentsBefore>
      <commentsBefore>-- PrimitiveTrans is the first transition of its Path.</commentsBefore>
      <commentsBefore>-- To this end, the helper first gets the path of the contextual transition (by</commentsBefore>
      <commentsBefore>-- means of the 'getPath' helper) and then compares the contextual transition</commentsBefore>
      <commentsBefore>-- to the first transition of the path.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-- This helper computes the Transition for which is generated the target state</commentsAfter>
      <commentsAfter>-- of the loop defined by the contextual PrimitiveTrans. A multiple primitive</commentsAfter>
      <commentsAfter>-- transition only leads to the generation of a loop transition. As a</commentsAfter>
      <commentsAfter>-- consequence, the computed Transition is the one preceding the contextual </commentsAfter>
      <commentsAfter>-- primitive transition in their path. The contextual primitrive transition</commentsAfter>
      <commentsAfter>-- should therefore not be the first of its path.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="187:8-190:34">
        <feature xsi:type="ocl:Operation" location="188:7-190:34" name="isFirstOfPath">
          <returnType xsi:type="ocl:BooleanType" location="188:25-188:32"/>
          <body xsi:type="ocl:LetExp" location="189:2-190:34">
            <variable location="189:6-189:46" varName="p" variableExp="/0/@elements.14/@definition/@feature/@body/@in_/@arguments.0/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="189:10-189:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="189:32-189:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="189:32-189:36" referredVariable="/16"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:OperatorCallExp" location="190:5-190:34" operationName="=">
              <source xsi:type="ocl:VariableExp" location="190:5-190:9" referredVariable="/17"/>
              <arguments xsi:type="ocl:CollectionOperationCallExp" location="190:12-190:34" operationName="first">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="190:12-190:25" name="transitions">
                  <source xsi:type="ocl:VariableExp" location="190:12-190:13" referredVariable="/0/@elements.14/@definition/@feature/@body/@variable"/>
                </source>
              </arguments>
            </in_>
          </body>
        </feature>
        <context_ location="187:8-187:45">
          <context_ xsi:type="ocl:OclModelElement" location="187:16-187:45" name="PrimitiveTrans" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="201:1-205:28">
      <commentsBefore>-- This helper computes the Transition for which is generated the target state</commentsBefore>
      <commentsBefore>-- of the loop defined by the contextual PrimitiveTrans. A multiple primitive</commentsBefore>
      <commentsBefore>-- transition only leads to the generation of a loop transition. As a</commentsBefore>
      <commentsBefore>-- consequence, the computed Transition is the one preceding the contextual </commentsBefore>
      <commentsBefore>-- primitive transition in their path. The contextual primitrive transition</commentsBefore>
      <commentsBefore>-- should therefore not be the first of its path.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-- This helper computes a boolean value assessing whether or not the contextual</commentsAfter>
      <commentsAfter>-- PrimitiveTrans is preceding a multiple transition in its Path.</commentsAfter>
      <commentsAfter>-- If the contextual PrimitiveTrans is the last transition of its Path, the</commentsAfter>
      <commentsAfter>-- helper returns false. Otherwise, it returns the value of the 'isMultiple'</commentsAfter>
      <commentsAfter>-- attribute of the next transition in the path.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsAfter>
      <commentsAfter>-- RETURN:	Boolean</commentsAfter>
      <definition location="201:8-205:27">
        <feature xsi:type="ocl:Operation" location="202:7-205:27" name="getLoopTarget">
          <returnType xsi:type="ocl:OclModelElement" location="202:25-202:50" name="Transition" model="/2"/>
          <body xsi:type="ocl:LetExp" location="203:2-205:27">
            <variable location="203:6-203:46" varName="p" variableExp="/0/@elements.15/@definition/@feature/@body/@in_/@variable/@initExpression/@source/@source /0/@elements.15/@definition/@feature/@body/@in_/@in_/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="203:10-203:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="203:32-203:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="203:32-203:36" referredVariable="/18"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:LetExp" location="204:5-205:27">
              <variable location="204:9-204:51" varName="i" variableExp="/0/@elements.15/@definition/@feature/@body/@in_/@in_/@arguments.0/@source">
                <type xsi:type="ocl:IntegerType" location="204:13-204:20"/>
                <initExpression xsi:type="ocl:CollectionOperationCallExp" location="204:23-204:51" operationName="indexOf">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="204:23-204:36" name="transitions">
                    <source xsi:type="ocl:VariableExp" location="204:23-204:24" referredVariable="/0/@elements.15/@definition/@feature/@body/@variable"/>
                  </source>
                  <arguments xsi:type="ocl:VariableExp" location="204:46-204:50" referredVariable="/19"/>
                </initExpression>
              </variable>
              <in_ xsi:type="ocl:CollectionOperationCallExp" location="205:5-205:27" operationName="at">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="205:5-205:18" name="transitions">
                  <source xsi:type="ocl:VariableExp" location="205:5-205:6" referredVariable="/0/@elements.15/@definition/@feature/@body/@variable"/>
                </source>
                <arguments xsi:type="ocl:OperatorCallExp" location="205:23-205:26" operationName="-">
                  <source xsi:type="ocl:VariableExp" location="205:23-205:24" referredVariable="/0/@elements.15/@definition/@feature/@body/@in_/@variable"/>
                  <arguments xsi:type="ocl:IntegerExp" location="205:25-205:26" integerSymbol="1"/>
                </arguments>
              </in_>
            </in_>
          </body>
        </feature>
        <context_ location="201:8-201:45">
          <context_ xsi:type="ocl:OclModelElement" location="201:16-201:45" name="PrimitiveTrans" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="215:1-223:11">
      <commentsBefore>-- This helper computes a boolean value assessing whether or not the contextual</commentsBefore>
      <commentsBefore>-- PrimitiveTrans is preceding a multiple transition in its Path.</commentsBefore>
      <commentsBefore>-- If the contextual PrimitiveTrans is the last transition of its Path, the</commentsBefore>
      <commentsBefore>-- helper returns false. Otherwise, it returns the value of the 'isMultiple'</commentsBefore>
      <commentsBefore>-- attribute of the next transition in the path.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsBefore>
      <commentsBefore>-- RETURN:	Boolean</commentsBefore>
      <commentsAfter>-- This helper computes the incoming/outgoing loop Transition of the contextual</commentsAfter>
      <commentsAfter>-- multiple PrimitiveTrans.</commentsAfter>
      <commentsAfter>-- For this purpose, it returns the next transition in the path.</commentsAfter>
      <commentsAfter>-- PRECOND:	this helper should only be called from a PrimTransition that</commentsAfter>
      <commentsAfter>-- precedes a multiple PrimitiveTrans.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="215:8-223:10">
        <feature xsi:type="ocl:Operation" location="216:7-223:10" name="loopIncoming">
          <returnType xsi:type="ocl:BooleanType" location="216:24-216:31"/>
          <body xsi:type="ocl:LetExp" location="217:2-223:10">
            <variable location="217:6-217:46" varName="p" variableExp="/0/@elements.16/@definition/@feature/@body/@in_/@variable/@initExpression/@source/@source /0/@elements.16/@definition/@feature/@body/@in_/@in_/@condition/@arguments.0/@source/@source /0/@elements.16/@definition/@feature/@body/@in_/@in_/@elseExpression/@source/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="217:10-217:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="217:32-217:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="217:32-217:36" referredVariable="/20"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:LetExp" location="218:5-223:10">
              <variable location="218:9-218:51" varName="i" variableExp="/0/@elements.16/@definition/@feature/@body/@in_/@in_/@elseExpression/@source/@arguments.0/@source">
                <type xsi:type="ocl:IntegerType" location="218:13-218:20"/>
                <initExpression xsi:type="ocl:CollectionOperationCallExp" location="218:23-218:51" operationName="indexOf">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="218:23-218:36" name="transitions">
                    <source xsi:type="ocl:VariableExp" location="218:23-218:24" referredVariable="/0/@elements.16/@definition/@feature/@body/@variable"/>
                  </source>
                  <arguments xsi:type="ocl:VariableExp" location="218:46-218:50" referredVariable="/21"/>
                </initExpression>
              </variable>
              <in_ xsi:type="ocl:IfExp" location="219:5-223:10">
                <thenExpression xsi:type="ocl:BooleanExp" location="220:4-220:9"/>
                <condition xsi:type="ocl:OperatorCallExp" location="219:8-219:36" operationName="=">
                  <source xsi:type="ocl:VariableExp" location="219:8-219:12" referredVariable="/22"/>
                  <arguments xsi:type="ocl:CollectionOperationCallExp" location="219:15-219:36" operationName="last">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="219:15-219:28" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="219:15-219:16" referredVariable="/0/@elements.16/@definition/@feature/@body/@variable"/>
                    </source>
                  </arguments>
                </condition>
                <elseExpression xsi:type="ocl:NavigationOrAttributeCallExp" location="222:4-222:37" name="isMultiple">
                  <source xsi:type="ocl:CollectionOperationCallExp" location="222:4-222:26" operationName="at">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="222:4-222:17" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="222:4-222:5" referredVariable="/0/@elements.16/@definition/@feature/@body/@variable"/>
                    </source>
                    <arguments xsi:type="ocl:OperatorCallExp" location="222:22-222:25" operationName="+">
                      <source xsi:type="ocl:VariableExp" location="222:22-222:23" referredVariable="/0/@elements.16/@definition/@feature/@body/@in_/@variable"/>
                      <arguments xsi:type="ocl:IntegerExp" location="222:24-222:25" integerSymbol="1"/>
                    </arguments>
                  </source>
                </elseExpression>
              </in_>
            </in_>
          </body>
        </feature>
        <context_ location="215:8-215:45">
          <context_ xsi:type="ocl:OclModelElement" location="215:16-215:45" name="PrimitiveTrans" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="233:1-237:30">
      <commentsBefore>-- This helper computes the incoming/outgoing loop Transition of the contextual</commentsBefore>
      <commentsBefore>-- multiple PrimitiveTrans.</commentsBefore>
      <commentsBefore>-- For this purpose, it returns the next transition in the path.</commentsBefore>
      <commentsBefore>-- PRECOND:	this helper should only be called from a PrimTransition that</commentsBefore>
      <commentsBefore>-- precedes a multiple PrimitiveTrans.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-- This helper computes the set of primitive transitions (except loop</commentsAfter>
      <commentsAfter>-- transitions) that follow the contextual transition.</commentsAfter>
      <commentsAfter>-- For this purpose, the helper first gets the transition next to the</commentsAfter>
      <commentsAfter>-- contextual transition in the same path.</commentsAfter>
      <commentsAfter>-- If this following transition is a PrimitiveTrans and is not multiple, the</commentsAfter>
      <commentsAfter>-- helper returns the transition. If the following transition is a multiple</commentsAfter>
      <commentsAfter>-- PrimitiveTrans, then the helper looks for the transitions that follow this</commentsAfter>
      <commentsAfter>-- next transition by means of a recursive call onto this &quot;next transition&quot;.</commentsAfter>
      <commentsAfter>-- If the following transition is an AlternativeTrans, the helper collects the</commentsAfter>
      <commentsAfter>-- first transition of each alternative path of the AlternativeTrans, and</commentsAfter>
      <commentsAfter>-- returns the calculated set.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!Transition</commentsAfter>
      <commentsAfter>-- IN:		Integer</commentsAfter>
      <commentsAfter>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsAfter>
      <definition location="233:8-237:29">
        <feature xsi:type="ocl:Operation" location="234:7-237:29" name="getLoopIncoming">
          <returnType xsi:type="ocl:OclModelElement" location="234:27-234:52" name="Transition" model="/2"/>
          <body xsi:type="ocl:LetExp" location="235:2-237:29">
            <variable location="235:6-235:46" varName="p" variableExp="/0/@elements.17/@definition/@feature/@body/@in_/@variable/@initExpression/@source/@source /0/@elements.17/@definition/@feature/@body/@in_/@in_/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="235:10-235:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="235:32-235:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="235:32-235:36" referredVariable="/23"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:LetExp" location="236:5-237:29">
              <variable location="236:9-236:51" varName="i" variableExp="/0/@elements.17/@definition/@feature/@body/@in_/@in_/@arguments.0/@source">
                <type xsi:type="ocl:IntegerType" location="236:13-236:20"/>
                <initExpression xsi:type="ocl:CollectionOperationCallExp" location="236:23-236:51" operationName="indexOf">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="236:23-236:36" name="transitions">
                    <source xsi:type="ocl:VariableExp" location="236:23-236:24" referredVariable="/0/@elements.17/@definition/@feature/@body/@variable"/>
                  </source>
                  <arguments xsi:type="ocl:VariableExp" location="236:46-236:50" referredVariable="/24"/>
                </initExpression>
              </variable>
              <in_ xsi:type="ocl:CollectionOperationCallExp" location="237:5-237:29" operationName="at">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="237:5-237:18" name="transitions">
                  <source xsi:type="ocl:VariableExp" location="237:5-237:6" referredVariable="/0/@elements.17/@definition/@feature/@body/@variable"/>
                </source>
                <arguments xsi:type="ocl:OperatorCallExp" location="237:23-237:28" operationName="+">
                  <source xsi:type="ocl:VariableExp" location="237:23-237:24" referredVariable="/0/@elements.17/@definition/@feature/@body/@in_/@variable"/>
                  <arguments xsi:type="ocl:IntegerExp" location="237:27-237:28" integerSymbol="1"/>
                </arguments>
              </in_>
            </in_>
          </body>
        </feature>
        <context_ location="233:8-233:45">
          <context_ xsi:type="ocl:OclModelElement" location="233:16-233:45" name="PrimitiveTrans" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="254:1-270:11">
      <commentsBefore>-- This helper computes the set of primitive transitions (except loop</commentsBefore>
      <commentsBefore>-- transitions) that follow the contextual transition.</commentsBefore>
      <commentsBefore>-- For this purpose, the helper first gets the transition next to the</commentsBefore>
      <commentsBefore>-- contextual transition in the same path.</commentsBefore>
      <commentsBefore>-- If this following transition is a PrimitiveTrans and is not multiple, the</commentsBefore>
      <commentsBefore>-- helper returns the transition. If the following transition is a multiple</commentsBefore>
      <commentsBefore>-- PrimitiveTrans, then the helper looks for the transitions that follow this</commentsBefore>
      <commentsBefore>-- next transition by means of a recursive call onto this &quot;next transition&quot;.</commentsBefore>
      <commentsBefore>-- If the following transition is an AlternativeTrans, the helper collects the</commentsBefore>
      <commentsBefore>-- first transition of each alternative path of the AlternativeTrans, and</commentsBefore>
      <commentsBefore>-- returns the calculated set.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!Transition</commentsBefore>
      <commentsBefore>-- IN:		Integer</commentsBefore>
      <commentsBefore>-- RETURN:	Set(TextualPathExp!PrimitiveTrans)</commentsBefore>
      <commentsAfter>-- This helper computes the Transition (primitive or alternative) that precedes</commentsAfter>
      <commentsAfter>-- the contextual PrimitiveTrans in the input TextualPathExp model.</commentsAfter>
      <commentsAfter>-- To this end, the helper first checks whether or not the contextual</commentsAfter>
      <commentsAfter>-- PrimitiveTrans is the first transition of its Path.</commentsAfter>
      <commentsAfter>-- If the contextual transition is the first of its path, the helper first gets</commentsAfter>
      <commentsAfter>-- the AtlernativeTrans the contextual transition belongs to. It then gets the</commentsAfter>
      <commentsAfter>-- Path in which this AlternativeTrans is defined, and the rank of the</commentsAfter>
      <commentsAfter>-- AlternativeTrans within this Path. From then, it gets the transition that</commentsAfter>
      <commentsAfter>-- precedes the computed AlternativeTrans. The helper returns this preceding</commentsAfter>
      <commentsAfter>-- transition if it is not multiple. If the preceding transition is multiple,</commentsAfter>
      <commentsAfter>-- the helper returns the transition that precedes this preceding transition</commentsAfter>
      <commentsAfter>-- by means of a recursive call of the helper onto the transition that precedes</commentsAfter>
      <commentsAfter>-- the AlternativeTrans.</commentsAfter>
      <commentsAfter>-- If the contextual transition is not the first of its path, the helper</commentsAfter>
      <commentsAfter>-- returns its preceding transition if this last is not multiple. If the</commentsAfter>
      <commentsAfter>-- preceding transition is multiple, the helper returns the preceding</commentsAfter>
      <commentsAfter>-- transition of the preceding transition by means of a recursive call of the</commentsAfter>
      <commentsAfter>-- helper onto the transition preceding the contextual transition.</commentsAfter>
      <commentsAfter>-- PRECOND: this helper should not be called on the root Transition of the</commentsAfter>
      <commentsAfter>-- input model.</commentsAfter>
      <commentsAfter>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsAfter>
      <commentsAfter>-- RETURN:	TextualPathExp!Transition</commentsAfter>
      <definition location="254:8-270:10">
        <feature xsi:type="ocl:Operation" location="255:7-270:10" name="getOutgoing">
          <returnType xsi:type="ocl:SetType" location="255:23-255:57">
            <elementType xsi:type="ocl:OclModelElement" location="255:27-255:56" name="PrimitiveTrans" model="/2"/>
          </returnType>
          <body xsi:type="ocl:LetExp" location="256:2-270:10">
            <variable location="256:6-256:46" varName="p" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@variable/@initExpression/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable/@initExpression/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="256:10-256:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="256:32-256:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="256:32-256:36" referredVariable="/25"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:LetExp" location="257:5-270:10">
              <variable location="257:9-257:51" varName="i" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable/@initExpression/@arguments.0/@source">
                <type xsi:type="ocl:IntegerType" location="257:13-257:20"/>
                <initExpression xsi:type="ocl:CollectionOperationCallExp" location="257:23-257:51" operationName="indexOf">
                  <source xsi:type="ocl:NavigationOrAttributeCallExp" location="257:23-257:36" name="transitions">
                    <source xsi:type="ocl:VariableExp" location="257:23-257:24" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                  </source>
                  <arguments xsi:type="ocl:VariableExp" location="257:46-257:50" referredVariable="/26"/>
                </initExpression>
              </variable>
              <in_ xsi:type="ocl:LetExp" location="258:5-270:10">
                <variable location="258:9-258:65" varName="t" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@condition/@source /0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@thenExpression/@condition/@source/@source /0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@thenExpression/@thenExpression/@elements.0 /0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@thenExpression/@elseExpression/@source /0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@elseExpression/@source/@source">
                  <type xsi:type="ocl:OclModelElement" location="258:13-258:38" name="Transition" model="/2"/>
                  <initExpression xsi:type="ocl:CollectionOperationCallExp" location="258:41-258:65" operationName="at">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="258:41-258:54" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="258:41-258:42" referredVariable="/0/@elements.18/@definition/@feature/@body/@variable"/>
                    </source>
                    <arguments xsi:type="ocl:OperatorCallExp" location="258:59-258:64" operationName="+">
                      <source xsi:type="ocl:VariableExp" location="258:59-258:60" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@variable"/>
                      <arguments xsi:type="ocl:IntegerExp" location="258:63-258:64" integerSymbol="1"/>
                    </arguments>
                  </initExpression>
                </variable>
                <in_ xsi:type="ocl:IfExp" location="259:5-270:10">
                  <thenExpression xsi:type="ocl:IfExp" location="260:4-264:9">
                    <thenExpression xsi:type="ocl:SetExp" location="261:5-261:11">
                      <elements xsi:type="ocl:VariableExp" location="261:9-261:10" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable"/>
                    </thenExpression>
                    <condition xsi:type="ocl:OperatorCallExp" location="260:7-260:23" operationName="not">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="260:11-260:23" name="isMultiple">
                        <source xsi:type="ocl:VariableExp" location="260:11-260:12" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable"/>
                      </source>
                    </condition>
                    <elseExpression xsi:type="ocl:OperationCallExp" location="263:5-263:20" operationName="getOutgoing">
                      <source xsi:type="ocl:VariableExp" location="263:5-263:6" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable"/>
                    </elseExpression>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="259:8-259:52" operationName="oclIsTypeOf">
                    <source xsi:type="ocl:VariableExp" location="259:8-259:9" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable"/>
                    <arguments xsi:type="ocl:OclModelElement" location="259:22-259:51" name="PrimitiveTrans" model="/2"/>
                  </condition>
                  <elseExpression xsi:type="ocl:IterateExp" location="266:3-269:5">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="266:3-266:13" name="altPaths">
                      <source xsi:type="ocl:VariableExp" location="266:3-266:4" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable"/>
                    </source>
                    <body xsi:type="ocl:CollectionOperationCallExp" location="268:5-268:43" operationName="including">
                      <source xsi:type="ocl:VariableExp" location="268:5-268:8" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@elseExpression/@result"/>
                      <arguments xsi:type="ocl:CollectionOperationCallExp" location="268:20-268:42" operationName="first">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="268:20-268:33" name="transitions">
                          <source xsi:type="ocl:VariableExp" location="268:20-268:21" referredVariable="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@elseExpression/@iterators.0"/>
                        </source>
                      </arguments>
                    </body>
                    <iterators location="267:14-267:15" varName="e" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@elseExpression/@body/@arguments.0/@source/@source"/>
                    <result location="267:17-267:65" varName="res" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@elseExpression/@body/@source">
                      <type xsi:type="ocl:SetType" location="267:23-267:57">
                        <elementType xsi:type="ocl:OclModelElement" location="267:27-267:56" name="PrimitiveTrans" model="/2"/>
                      </type>
                      <initExpression xsi:type="ocl:SetExp" location="267:60-267:65"/>
                    </result>
                  </elseExpression>
                </in_>
              </in_>
            </in_>
          </body>
        </feature>
        <context_ location="254:8-254:41">
          <context_ xsi:type="ocl:OclModelElement" location="254:16-254:41" name="Transition" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:Helper" location="295:1-324:8">
      <commentsBefore>-- This helper computes the Transition (primitive or alternative) that precedes</commentsBefore>
      <commentsBefore>-- the contextual PrimitiveTrans in the input TextualPathExp model.</commentsBefore>
      <commentsBefore>-- To this end, the helper first checks whether or not the contextual</commentsBefore>
      <commentsBefore>-- PrimitiveTrans is the first transition of its Path.</commentsBefore>
      <commentsBefore>-- If the contextual transition is the first of its path, the helper first gets</commentsBefore>
      <commentsBefore>-- the AtlernativeTrans the contextual transition belongs to. It then gets the</commentsBefore>
      <commentsBefore>-- Path in which this AlternativeTrans is defined, and the rank of the</commentsBefore>
      <commentsBefore>-- AlternativeTrans within this Path. From then, it gets the transition that</commentsBefore>
      <commentsBefore>-- precedes the computed AlternativeTrans. The helper returns this preceding</commentsBefore>
      <commentsBefore>-- transition if it is not multiple. If the preceding transition is multiple,</commentsBefore>
      <commentsBefore>-- the helper returns the transition that precedes this preceding transition</commentsBefore>
      <commentsBefore>-- by means of a recursive call of the helper onto the transition that precedes</commentsBefore>
      <commentsBefore>-- the AlternativeTrans.</commentsBefore>
      <commentsBefore>-- If the contextual transition is not the first of its path, the helper</commentsBefore>
      <commentsBefore>-- returns its preceding transition if this last is not multiple. If the</commentsBefore>
      <commentsBefore>-- preceding transition is multiple, the helper returns the preceding</commentsBefore>
      <commentsBefore>-- transition of the preceding transition by means of a recursive call of the</commentsBefore>
      <commentsBefore>-- helper onto the transition preceding the contextual transition.</commentsBefore>
      <commentsBefore>-- PRECOND: this helper should not be called on the root Transition of the</commentsBefore>
      <commentsBefore>-- input model.</commentsBefore>
      <commentsBefore>-- CONTEXT: TextualPathExp!PrimitiveTrans</commentsBefore>
      <commentsBefore>-- RETURN:	TextualPathExp!Transition</commentsBefore>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- RULES ----------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-------------------------------------------------------------------------------</commentsAfter>
      <commentsAfter>-- Rule 'Main'</commentsAfter>
      <commentsAfter>-- This rule generates both a PathExp element and its initial State element</commentsAfter>
      <commentsAfter>-- from the input root TextualPathExp element.</commentsAfter>
      <commentsAfter>-- The generated PathExp element accepts an empty string as name. Its set of</commentsAfter>
      <commentsAfter>-- states corresponds to the 'pe_s' elements generated for the input elements</commentsAfter>
      <commentsAfter>-- of the singlePrimTransitions, singleAltTransitions sets, plus the 'pe_s'</commentsAfter>
      <commentsAfter>-- elements generated for AlternativeTransition, plus the initial State</commentsAfter>
      <commentsAfter>-- generated by the current rule. Its set of transitions corresponds to the</commentsAfter>
      <commentsAfter>-- 'pe_t' elements generated for the input elements in the primTransitions,</commentsAfter>
      <commentsAfter>-- altTransitions1, and altTransitions2 sets.</commentsAfter>
      <commentsAfter>-- The generated initial State has an empty set of incoming transitions. Its</commentsAfter>
      <commentsAfter>-- set of outgoing transitions corresponds to the 'pe_t' elements that are</commentsAfter>
      <commentsAfter>-- generated for the outgoing transitions computed by the getOutgoing(0) call.</commentsAfter>
      <definition location="295:8-324:7">
        <feature xsi:type="ocl:Operation" location="296:7-324:7" name="getPreviousTransition">
          <returnType xsi:type="ocl:OclModelElement" location="296:33-296:58" name="Transition" model="/2"/>
          <body xsi:type="ocl:LetExp" location="297:2-324:7">
            <variable location="297:6-297:46" varName="p" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable/@initExpression/@source/@body/@arguments.0 /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@variable/@initExpression/@source/@source /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@variable/@initExpression/@source/@source">
              <type xsi:type="ocl:OclModelElement" location="297:10-297:29" name="Path" model="/2"/>
              <initExpression xsi:type="ocl:OperationCallExp" location="297:32-297:46" operationName="getPath">
                <source xsi:type="ocl:VariableExp" location="297:32-297:36" referredVariable="/27"/>
              </initExpression>
            </variable>
            <in_ xsi:type="ocl:IfExp" location="298:2-324:7">
              <thenExpression xsi:type="ocl:LetExp" location="299:3-314:8">
                <variable location="299:7-302:14" varName="alt" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable/@initExpression/@source/@body/@arguments.0 /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@variable/@initExpression/@arguments.0">
                  <type xsi:type="ocl:OclModelElement" location="299:13-299:44" name="AlternativeTrans" model="/2"/>
                  <initExpression xsi:type="ocl:CollectionOperationCallExp" location="300:4-302:14" operationName="first">
                    <source xsi:type="ocl:IteratorExp" location="300:4-301:42" name="select">
                      <source xsi:type="ocl:OperationCallExp" location="300:4-300:50" operationName="allInstances">
                        <source xsi:type="ocl:OclModelElement" location="300:4-300:35" name="AlternativeTrans" model="/2"/>
                      </source>
                      <body xsi:type="ocl:CollectionOperationCallExp" location="301:18-301:41" operationName="includes">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="301:18-301:28" name="altPaths">
                          <source xsi:type="ocl:VariableExp" location="301:18-301:19" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable/@initExpression/@source/@iterators.0"/>
                        </source>
                        <arguments xsi:type="ocl:VariableExp" location="301:39-301:40" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
                      </body>
                      <iterators location="301:14-301:15" varName="a" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable/@initExpression/@source/@body/@source/@source"/>
                    </source>
                  </initExpression>
                </variable>
                <in_ xsi:type="ocl:LetExp" location="303:6-314:8">
                  <variable location="303:10-306:14" varName="p2" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@variable/@initExpression/@source/@source /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@variable/@initExpression/@source/@source">
                    <type xsi:type="ocl:OclModelElement" location="303:15-303:34" name="Path" model="/2"/>
                    <initExpression xsi:type="ocl:CollectionOperationCallExp" location="304:4-306:14" operationName="first">
                      <source xsi:type="ocl:IteratorExp" location="304:4-305:47" name="select">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="304:4-304:23" name="allPaths">
                          <source xsi:type="ocl:VariableExp" location="304:4-304:14" referredVariable="/29"/>
                        </source>
                        <body xsi:type="ocl:CollectionOperationCallExp" location="305:18-305:46" operationName="includes">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="305:18-305:31" name="transitions">
                            <source xsi:type="ocl:VariableExp" location="305:18-305:19" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable/@initExpression/@source/@iterators.0"/>
                          </source>
                          <arguments xsi:type="ocl:VariableExp" location="305:42-305:45" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable"/>
                        </body>
                        <iterators location="305:14-305:15" varName="a" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable/@initExpression/@source/@body/@source/@source"/>
                      </source>
                    </initExpression>
                  </variable>
                  <in_ xsi:type="ocl:LetExp" location="307:6-314:8">
                    <variable location="307:10-307:52" varName="i" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@variable/@initExpression/@arguments.0/@source">
                      <type xsi:type="ocl:IntegerType" location="307:14-307:21"/>
                      <initExpression xsi:type="ocl:CollectionOperationCallExp" location="307:24-307:52" operationName="indexOf">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="307:24-307:38" name="transitions">
                          <source xsi:type="ocl:VariableExp" location="307:24-307:26" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable"/>
                        </source>
                        <arguments xsi:type="ocl:VariableExp" location="307:48-307:51" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable"/>
                      </initExpression>
                    </variable>
                    <in_ xsi:type="ocl:LetExp" location="308:6-314:8">
                      <variable location="308:10-309:27" varName="t" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@in_/@condition/@source /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@in_/@thenExpression/@source /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@in_/@elseExpression">
                        <type xsi:type="ocl:OclModelElement" location="308:14-308:39" name="Transition" model="/2"/>
                        <initExpression xsi:type="ocl:CollectionOperationCallExp" location="309:4-309:27" operationName="at">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="309:4-309:18" name="transitions">
                            <source xsi:type="ocl:VariableExp" location="309:4-309:6" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable"/>
                          </source>
                          <arguments xsi:type="ocl:OperatorCallExp" location="309:23-309:26" operationName="-">
                            <source xsi:type="ocl:VariableExp" location="309:23-309:24" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@variable"/>
                            <arguments xsi:type="ocl:IntegerExp" location="309:25-309:26" integerSymbol="1"/>
                          </arguments>
                        </initExpression>
                      </variable>
                      <in_ xsi:type="ocl:IfExp" location="310:3-314:8">
                        <thenExpression xsi:type="ocl:OperationCallExp" location="311:4-311:29" operationName="getPreviousTransition">
                          <source xsi:type="ocl:VariableExp" location="311:4-311:5" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@variable"/>
                        </thenExpression>
                        <condition xsi:type="ocl:NavigationOrAttributeCallExp" location="310:6-310:18" name="isMultiple">
                          <source xsi:type="ocl:VariableExp" location="310:6-310:7" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@variable"/>
                        </condition>
                        <elseExpression xsi:type="ocl:VariableExp" location="313:4-313:5" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@variable"/>
                      </in_>
                    </in_>
                  </in_>
                </in_>
              </thenExpression>
              <condition xsi:type="ocl:OperationCallExp" location="298:5-298:25" operationName="isFirstOfPath">
                <source xsi:type="ocl:VariableExp" location="298:5-298:9" referredVariable="/28"/>
              </condition>
              <elseExpression xsi:type="ocl:LetExp" location="316:3-323:8">
                <variable location="316:7-316:49" varName="i" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@variable/@initExpression/@arguments.0/@source">
                  <type xsi:type="ocl:IntegerType" location="316:11-316:18"/>
                  <initExpression xsi:type="ocl:CollectionOperationCallExp" location="316:21-316:49" operationName="indexOf">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="316:21-316:34" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="316:21-316:22" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
                    </source>
                    <arguments xsi:type="ocl:VariableExp" location="316:44-316:48" referredVariable="/30"/>
                  </initExpression>
                </variable>
                <in_ xsi:type="ocl:LetExp" location="317:6-323:8">
                  <variable location="317:10-318:26" varName="t" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@in_/@condition/@source /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@in_/@thenExpression/@source /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@in_/@elseExpression">
                    <type xsi:type="ocl:OclModelElement" location="317:14-317:39" name="Transition" model="/2"/>
                    <initExpression xsi:type="ocl:CollectionOperationCallExp" location="318:4-318:26" operationName="at">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="318:4-318:17" name="transitions">
                        <source xsi:type="ocl:VariableExp" location="318:4-318:5" referredVariable="/0/@elements.19/@definition/@feature/@body/@variable"/>
                      </source>
                      <arguments xsi:type="ocl:OperatorCallExp" location="318:22-318:25" operationName="-">
                        <source xsi:type="ocl:VariableExp" location="318:22-318:23" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@variable"/>
                        <arguments xsi:type="ocl:IntegerExp" location="318:24-318:25" integerSymbol="1"/>
                      </arguments>
                    </initExpression>
                  </variable>
                  <in_ xsi:type="ocl:IfExp" location="319:3-323:8">
                    <thenExpression xsi:type="ocl:OperationCallExp" location="320:4-320:29" operationName="getPreviousTransition">
                      <source xsi:type="ocl:VariableExp" location="320:4-320:5" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@variable"/>
                    </thenExpression>
                    <condition xsi:type="ocl:NavigationOrAttributeCallExp" location="319:6-319:18" name="isMultiple">
                      <source xsi:type="ocl:VariableExp" location="319:6-319:7" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@variable"/>
                    </condition>
                    <elseExpression xsi:type="ocl:VariableExp" location="322:4-322:5" referredVariable="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@variable"/>
                  </in_>
                </in_>
              </elseExpression>
            </in_>
          </body>
        </feature>
        <context_ location="295:8-295:45">
          <context_ xsi:type="ocl:OclModelElement" location="295:16-295:45" name="PrimitiveTrans" model="/2"/>
        </context_>
      </definition>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="344:1-374:2" name="Main">
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- RULES ----------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-------------------------------------------------------------------------------</commentsBefore>
      <commentsBefore>-- Rule 'Main'</commentsBefore>
      <commentsBefore>-- This rule generates both a PathExp element and its initial State element</commentsBefore>
      <commentsBefore>-- from the input root TextualPathExp element.</commentsBefore>
      <commentsBefore>-- The generated PathExp element accepts an empty string as name. Its set of</commentsBefore>
      <commentsBefore>-- states corresponds to the 'pe_s' elements generated for the input elements</commentsBefore>
      <commentsBefore>-- of the singlePrimTransitions, singleAltTransitions sets, plus the 'pe_s'</commentsBefore>
      <commentsBefore>-- elements generated for AlternativeTransition, plus the initial State</commentsBefore>
      <commentsBefore>-- generated by the current rule. Its set of transitions corresponds to the</commentsBefore>
      <commentsBefore>-- 'pe_t' elements generated for the input elements in the primTransitions,</commentsBefore>
      <commentsBefore>-- altTransitions1, and altTransitions2 sets.</commentsBefore>
      <commentsBefore>-- The generated initial State has an empty set of incoming transitions. Its</commentsBefore>
      <commentsBefore>-- set of outgoing transitions corresponds to the 'pe_t' elements that are</commentsBefore>
      <commentsBefore>-- generated for the outgoing transitions computed by the getOutgoing(0) call.</commentsBefore>
      <commentsAfter>-- Rule 'AlternativeTrans'</commentsAfter>
      <commentsAfter>-- This rule generates the State element that closes an input</commentsAfter>
      <commentsAfter>-- AlternativeTransition element. The generated State is the one at which the</commentsAfter>
      <commentsAfter>-- different alternative paths of the AlternativeTransition join.</commentsAfter>
      <commentsAfter>-- Incoming transitions of the generated state correspond to the elements</commentsAfter>
      <commentsAfter>-- generated for the last alternative transitions of the input</commentsAfter>
      <commentsAfter>-- AlternativeTransition element.</commentsAfter>
      <commentsAfter>-- Outgoing transitions of the generated state correspond to the 'pe_t'</commentsAfter>
      <commentsAfter>-- elements generated for the set of transitions returned by the call of</commentsAfter>
      <commentsAfter>-- getOutgoing(1).</commentsAfter>
      <outPattern location="347:2-373:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="348:3-367:4" varName="pe">
          <type xsi:type="ocl:OclModelElement" location="348:8-348:23" name="PathExp" model="/1"/>
          <bindings location="349:4-349:14" propertyName="name">
            <value xsi:type="ocl:StringExp" location="349:12-349:14" stringSymbol=""/>
          </bindings>
          <bindings location="350:4-358:8" propertyName="states">
            <value xsi:type="ocl:SetExp" location="350:14-358:8">
              <elements xsi:type="ocl:IteratorExp" location="351:7-352:56" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="351:7-351:39" name="singlePrimTransitions">
                  <source xsi:type="ocl:VariableExp" location="351:7-351:17" referredVariable="/31"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="352:22-352:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="352:22-352:32" referredVariable="/32"/>
                  <arguments xsi:type="ocl:VariableExp" location="352:45-352:46" referredVariable="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="352:48-352:54" stringSymbol="pe_s"/>
                </body>
                <iterators location="352:18-352:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="353:7-354:56" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="353:7-353:39" name="singleAltTransitions1">
                  <source xsi:type="ocl:VariableExp" location="353:7-353:17" referredVariable="/33"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="354:22-354:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="354:22-354:32" referredVariable="/34"/>
                  <arguments xsi:type="ocl:VariableExp" location="354:45-354:46" referredVariable="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.1/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="354:48-354:54" stringSymbol="pe_s"/>
                </body>
                <iterators location="354:18-354:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.1/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="355:7-356:56" name="collect">
                <source xsi:type="ocl:OperationCallExp" location="355:7-355:53" operationName="allInstances">
                  <source xsi:type="ocl:OclModelElement" location="355:7-355:38" name="AlternativeTrans" model="/2"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="356:22-356:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="356:22-356:32" referredVariable="/35"/>
                  <arguments xsi:type="ocl:VariableExp" location="356:45-356:46" referredVariable="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.2/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="356:48-356:54" stringSymbol="pe_s"/>
                </body>
                <iterators location="356:18-356:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.2/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:VariableExp" location="357:7-357:11" referredVariable="/0/@elements.20/@outPattern/@elements.1"/>
            </value>
          </bindings>
          <bindings location="359:4-366:9" propertyName="transitions">
            <value xsi:type="ocl:SetExp" location="359:19-366:9">
              <elements xsi:type="ocl:IteratorExp" location="360:7-361:56" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="360:7-360:33" name="primTransitions">
                  <source xsi:type="ocl:VariableExp" location="360:7-360:17" referredVariable="/36"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="361:22-361:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="361:22-361:32" referredVariable="/37"/>
                  <arguments xsi:type="ocl:VariableExp" location="361:45-361:46" referredVariable="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.0/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="361:48-361:54" stringSymbol="pe_t"/>
                </body>
                <iterators location="361:18-361:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.0/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="362:7-363:56" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="362:7-362:33" name="altTransitions1">
                  <source xsi:type="ocl:VariableExp" location="362:7-362:17" referredVariable="/38"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="363:22-363:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="363:22-363:32" referredVariable="/39"/>
                  <arguments xsi:type="ocl:VariableExp" location="363:45-363:46" referredVariable="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.1/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="363:48-363:54" stringSymbol="pe_t"/>
                </body>
                <iterators location="363:18-363:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.1/@body/@arguments.0"/>
              </elements>
              <elements xsi:type="ocl:IteratorExp" location="364:7-365:56" name="collect">
                <source xsi:type="ocl:NavigationOrAttributeCallExp" location="364:7-364:33" name="altTransitions2">
                  <source xsi:type="ocl:VariableExp" location="364:7-364:17" referredVariable="/40"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="365:22-365:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="365:22-365:32" referredVariable="/41"/>
                  <arguments xsi:type="ocl:VariableExp" location="365:45-365:46" referredVariable="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.2/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="365:48-365:54" stringSymbol="pe_t"/>
                </body>
                <iterators location="365:18-365:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.2/@body/@arguments.0"/>
              </elements>
            </value>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="369:3-373:4" varName="pe_s" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.3">
          <type xsi:type="ocl:OclModelElement" location="369:10-369:23" name="State" model="/1"/>
          <bindings location="370:4-370:21" propertyName="incoming">
            <value xsi:type="ocl:SetExp" location="370:16-370:21"/>
          </bindings>
          <bindings location="371:4-372:56" propertyName="outgoing">
            <value xsi:type="ocl:IteratorExp" location="371:16-372:56" name="collect">
              <source xsi:type="ocl:SetExp" location="371:16-371:41">
                <elements xsi:type="ocl:NavigationOrAttributeCallExp" location="371:20-371:40" name="rootTrans">
                  <source xsi:type="ocl:VariableExp" location="371:20-371:30" referredVariable="/42"/>
                </elements>
              </source>
              <body xsi:type="ocl:OperationCallExp" location="372:22-372:55" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="372:22-372:32" referredVariable="/43"/>
                <arguments xsi:type="ocl:VariableExp" location="372:45-372:46" referredVariable="/0/@elements.20/@outPattern/@elements.1/@bindings.1/@value/@iterators.0"/>
                <arguments xsi:type="ocl:StringExp" location="372:48-372:54" stringSymbol="pe_t"/>
              </body>
              <iterators location="372:18-372:19" varName="e" variableExp="/0/@elements.20/@outPattern/@elements.1/@bindings.1/@value/@body/@arguments.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="345:2-346:44">
        <elements xsi:type="atl:SimpleInPatternElement" location="346:9-346:44" varName="tpe">
          <type xsi:type="ocl:OclModelElement" location="346:15-346:44" name="TextualPathExp" model="/2"/>
        </elements>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="387:1-404:2" name="AlternativeTrans">
      <commentsBefore>-- Rule 'AlternativeTrans'</commentsBefore>
      <commentsBefore>-- This rule generates the State element that closes an input</commentsBefore>
      <commentsBefore>-- AlternativeTransition element. The generated State is the one at which the</commentsBefore>
      <commentsBefore>-- different alternative paths of the AlternativeTransition join.</commentsBefore>
      <commentsBefore>-- Incoming transitions of the generated state correspond to the elements</commentsBefore>
      <commentsBefore>-- generated for the last alternative transitions of the input</commentsBefore>
      <commentsBefore>-- AlternativeTransition element.</commentsBefore>
      <commentsBefore>-- Outgoing transitions of the generated state correspond to the 'pe_t'</commentsBefore>
      <commentsBefore>-- elements generated for the set of transitions returned by the call of</commentsBefore>
      <commentsBefore>-- getOutgoing(1).</commentsBefore>
      <commentsAfter>-- Rule ''</commentsAfter>
      <commentsAfter>-- This rule generates ...</commentsAfter>
      <commentsAfter>--rule MultipleAlternativeTrans {</commentsAfter>
      <commentsAfter>--	from</commentsAfter>
      <commentsAfter>--		tpe_at : TextualPathExp!AlternativeTrans (</commentsAfter>
      <commentsAfter>--			tpe_at.isMultiple = true</commentsAfter>
      <commentsAfter>--		)</commentsAfter>
      <commentsAfter>--	to </commentsAfter>
      <commentsAfter>--		pe_s : PathExp!State (</commentsAfter>
      <commentsAfter>--			outgoing &lt;- Set{</commentsAfter>
      <commentsAfter>--						tpe_at.getOutgoing()</commentsAfter>
      <commentsAfter>--							->collect(e | thisModule.resolveTemp(e, 'pe_t')),</commentsAfter>
      <commentsAfter>--						pe_t}</commentsAfter>
      <commentsAfter>--		),</commentsAfter>
      <commentsAfter>--		</commentsAfter>
      <commentsAfter>--		pe_t : PathExp!Transition (</commentsAfter>
      <commentsAfter>--			name &lt;- ''--,</commentsAfter>
      <commentsAfter>--			target &lt;- pe_s</commentsAfter>
      <commentsAfter>--		)</commentsAfter>
      <commentsAfter>--}</commentsAfter>
      <commentsAfter>-- Rule 'SinglePrimitiveTrans'</commentsAfter>
      <commentsAfter>-- This rule generates both a Transition and a State for each PrimitiveTrans</commentsAfter>
      <commentsAfter>-- element that belongs to the 'singlePrimTransitions' set.</commentsAfter>
      <commentsAfter>-- The generated transition accepts as name the name of the input</commentsAfter>
      <commentsAfter>-- PrimitiveTrans. If the input PrimitiveTrans is the root transition of the</commentsAfter>
      <commentsAfter>-- input model, its source corresponds to the 'pe_s' initial state generated</commentsAfter>
      <commentsAfter>-- for the input TextualPathExp element by rule 'Main'. Otherwise, the source</commentsAfter>
      <commentsAfter>-- element corresponds to the 'pe_s' element generated for the transition that</commentsAfter>
      <commentsAfter>-- precedes the input PrimitiveTrans in the current Path. Its target is the</commentsAfter>
      <commentsAfter>-- State generated by the rule.</commentsAfter>
      <commentsAfter>-- Incoming transitions for the generated State include the Transition</commentsAfter>
      <commentsAfter>-- generated by the rule and, when the input Transition precedes a multiple</commentsAfter>
      <commentsAfter>-- transition, the 'pe_t' element generated for this next transition.</commentsAfter>
      <commentsAfter>-- If the input PrimitiveTrans is the leaf transition of the input model, the</commentsAfter>
      <commentsAfter>-- generated State has no outgoing transitions. Otherwise, its outgoing</commentsAfter>
      <commentsAfter>-- transition corresponds to the 'pe_t' element generated for the input</commentsAfter>
      <commentsAfter>-- transition returned by the call of getOugoing(). Moreover, if the input</commentsAfter>
      <commentsAfter>-- Transition precedes a multiple transition, the 'pe_t' element generated for</commentsAfter>
      <commentsAfter>-- this next transition is added to the set ougoing transitions of the</commentsAfter>
      <commentsAfter>-- generated State.</commentsAfter>
      <outPattern location="393:2-403:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="394:3-403:4" varName="pe_s">
          <type xsi:type="ocl:OclModelElement" location="394:10-394:23" name="State" model="/1"/>
          <bindings location="395:4-400:9" propertyName="incoming">
            <value xsi:type="ocl:IteratorExp" location="395:16-400:9" name="select">
              <source xsi:type="ocl:NavigationOrAttributeCallExp" location="395:16-395:42" name="altTransitions2">
                <source xsi:type="ocl:VariableExp" location="395:16-395:26" referredVariable="/44"/>
              </source>
              <body xsi:type="ocl:CollectionOperationCallExp" location="396:21-399:22" operationName="includes">
                <source xsi:type="ocl:CollectionOperationCallExp" location="396:21-398:20" operationName="flatten">
                  <source xsi:type="ocl:IteratorExp" location="396:21-397:37" name="collect">
                    <source xsi:type="ocl:NavigationOrAttributeCallExp" location="396:21-396:36" name="altPaths">
                      <source xsi:type="ocl:VariableExp" location="396:21-396:27" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
                    </source>
                    <body xsi:type="ocl:NavigationOrAttributeCallExp" location="397:23-397:36" name="transitions">
                      <source xsi:type="ocl:VariableExp" location="397:23-397:24" referredVariable="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@body/@source/@source/@iterators.0"/>
                    </body>
                    <iterators location="397:19-397:20" varName="b" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@body/@source/@source/@body/@source"/>
                  </source>
                </source>
                <arguments xsi:type="ocl:VariableExp" location="399:20-399:21" referredVariable="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@iterators.0"/>
              </body>
              <iterators location="396:17-396:18" varName="a" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@body/@arguments.0"/>
            </value>
          </bindings>
          <bindings location="401:4-402:56" propertyName="outgoing">
            <value xsi:type="ocl:IteratorExp" location="401:16-402:56" name="collect">
              <source xsi:type="ocl:OperationCallExp" location="401:16-401:36" operationName="getOutgoing">
                <source xsi:type="ocl:VariableExp" location="401:16-401:22" referredVariable="/0/@elements.21/@inPattern/@elements.0"/>
              </source>
              <body xsi:type="ocl:OperationCallExp" location="402:22-402:55" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="402:22-402:32" referredVariable="/45"/>
                <arguments xsi:type="ocl:VariableExp" location="402:45-402:46" referredVariable="/0/@elements.21/@outPattern/@elements.0/@bindings.1/@value/@iterators.0"/>
                <arguments xsi:type="ocl:StringExp" location="402:48-402:54" stringSymbol="pe_t"/>
              </body>
              <iterators location="402:18-402:19" varName="e" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.1/@value/@body/@arguments.0"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="388:2-392:4">
        <elements xsi:type="atl:SimpleInPatternElement" location="389:3-389:43" varName="tpe_at" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@body/@source/@source/@source/@source /0/@elements.21/@outPattern/@elements.0/@bindings.1/@value/@source/@source">
          <type xsi:type="ocl:OclModelElement" location="389:12-389:43" name="AlternativeTrans" model="/2"/>
        </elements>
        <filter xsi:type="ocl:BooleanExp" location="391:4-391:8" booleanSymbol="true">
          <commentsBefore>--			tpe_at.isMultiple = false</commentsBefore>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="449:1-492:2" name="SinglePrimitiveTrans">
      <commentsBefore>-- Rule ''</commentsBefore>
      <commentsBefore>-- This rule generates ...</commentsBefore>
      <commentsBefore>--rule MultipleAlternativeTrans {</commentsBefore>
      <commentsBefore>--	from</commentsBefore>
      <commentsBefore>--		tpe_at : TextualPathExp!AlternativeTrans (</commentsBefore>
      <commentsBefore>--			tpe_at.isMultiple = true</commentsBefore>
      <commentsBefore>--		)</commentsBefore>
      <commentsBefore>--	to </commentsBefore>
      <commentsBefore>--		pe_s : PathExp!State (</commentsBefore>
      <commentsBefore>--			outgoing &lt;- Set{</commentsBefore>
      <commentsBefore>--						tpe_at.getOutgoing()</commentsBefore>
      <commentsBefore>--							->collect(e | thisModule.resolveTemp(e, 'pe_t')),</commentsBefore>
      <commentsBefore>--						pe_t}</commentsBefore>
      <commentsBefore>--		),</commentsBefore>
      <commentsBefore>--		</commentsBefore>
      <commentsBefore>--		pe_t : PathExp!Transition (</commentsBefore>
      <commentsBefore>--			name &lt;- ''--,</commentsBefore>
      <commentsBefore>--			target &lt;- pe_s</commentsBefore>
      <commentsBefore>--		)</commentsBefore>
      <commentsBefore>--}</commentsBefore>
      <commentsBefore>-- Rule 'SinglePrimitiveTrans'</commentsBefore>
      <commentsBefore>-- This rule generates both a Transition and a State for each PrimitiveTrans</commentsBefore>
      <commentsBefore>-- element that belongs to the 'singlePrimTransitions' set.</commentsBefore>
      <commentsBefore>-- The generated transition accepts as name the name of the input</commentsBefore>
      <commentsBefore>-- PrimitiveTrans. If the input PrimitiveTrans is the root transition of the</commentsBefore>
      <commentsBefore>-- input model, its source corresponds to the 'pe_s' initial state generated</commentsBefore>
      <commentsBefore>-- for the input TextualPathExp element by rule 'Main'. Otherwise, the source</commentsBefore>
      <commentsBefore>-- element corresponds to the 'pe_s' element generated for the transition that</commentsBefore>
      <commentsBefore>-- precedes the input PrimitiveTrans in the current Path. Its target is the</commentsBefore>
      <commentsBefore>-- State generated by the rule.</commentsBefore>
      <commentsBefore>-- Incoming transitions for the generated State include the Transition</commentsBefore>
      <commentsBefore>-- generated by the rule and, when the input Transition precedes a multiple</commentsBefore>
      <commentsBefore>-- transition, the 'pe_t' element generated for this next transition.</commentsBefore>
      <commentsBefore>-- If the input PrimitiveTrans is the leaf transition of the input model, the</commentsBefore>
      <commentsBefore>-- generated State has no outgoing transitions. Otherwise, its outgoing</commentsBefore>
      <commentsBefore>-- transition corresponds to the 'pe_t' element generated for the input</commentsBefore>
      <commentsBefore>-- transition returned by the call of getOugoing(). Moreover, if the input</commentsBefore>
      <commentsBefore>-- Transition precedes a multiple transition, the 'pe_t' element generated for</commentsBefore>
      <commentsBefore>-- this next transition is added to the set ougoing transitions of the</commentsBefore>
      <commentsBefore>-- generated State.</commentsBefore>
      <commentsAfter>-- Rule 'MultiplePrimitiveTrans'</commentsAfter>
      <commentsAfter>-- This rule generates a loop transition for each transition that belongs</commentsAfter>
      <commentsAfter>-- to the 'multiplePrimTransitions' set. The generated transition is a</commentsAfter>
      <commentsAfter>-- transition from and to the state generated for the previous input</commentsAfter>
      <commentsAfter>-- transition.</commentsAfter>
      <commentsAfter>-- The generated loop transition accepts the name of the input Transition as</commentsAfter>
      <commentsAfter>-- name.</commentsAfter>
      <commentsAfter>-- If the input PrimitiveTrans is the root transition of the input model, its</commentsAfter>
      <commentsAfter>-- source is the initial State generated by the 'Main' rule. Otherwise, the</commentsAfter>
      <commentsAfter>-- source is computed by the getLoopTarget() helper.</commentsAfter>
      <commentsAfter>-- If the input PrimitiveTrans is the root transition of the input model, its</commentsAfter>
      <commentsAfter>-- target is the initial State generated by the 'Main' rule. Otherwise, the</commentsAfter>
      <commentsAfter>-- target is computed by the getLoopTarget() helper.</commentsAfter>
      <outPattern location="454:2-491:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="455:3-468:4" varName="pe_t" variableExp="/0/@elements.22/@outPattern/@elements.1/@bindings.0/@value/@source/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="455:10-455:28" name="Transition" model="/1"/>
          <bindings location="456:4-456:23" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="456:12-456:23" name="name">
              <source xsi:type="ocl:VariableExp" location="456:12-456:18" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="457:4-466:11" propertyName="source">
            <value xsi:type="ocl:IfExp" location="458:6-466:11">
              <thenExpression xsi:type="ocl:OperationCallExp" location="459:7-459:54" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="459:7-459:17" referredVariable="/48"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="459:30-459:45" name="root">
                  <source xsi:type="ocl:VariableExp" location="459:30-459:40" referredVariable="/49"/>
                </arguments>
                <arguments xsi:type="ocl:StringExp" location="459:47-459:53" stringSymbol="pe_s"/>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="458:9-458:38" operationName="=">
                <source xsi:type="ocl:VariableExp" location="458:9-458:15" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="458:18-458:38" name="rootTrans">
                  <source xsi:type="ocl:VariableExp" location="458:18-458:28" referredVariable="/47"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:LetExp" location="461:7-465:43">
                <variable location="461:11-461:53" varName="p" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@variable/@initExpression/@source/@source /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@in_/@variable/@initExpression/@source/@source">
                  <type xsi:type="ocl:OclModelElement" location="461:15-461:34" name="Path" model="/2"/>
                  <initExpression xsi:type="ocl:OperationCallExp" location="461:37-461:53" operationName="getPath">
                    <source xsi:type="ocl:VariableExp" location="461:37-461:43" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                  </initExpression>
                </variable>
                <in_ xsi:type="ocl:LetExp" location="462:10-465:43">
                  <variable location="462:14-462:58" varName="i" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@in_/@variable/@initExpression/@arguments.0/@source">
                    <type xsi:type="ocl:IntegerType" location="462:18-462:25"/>
                    <initExpression xsi:type="ocl:CollectionOperationCallExp" location="462:28-462:58" operationName="indexOf">
                      <source xsi:type="ocl:NavigationOrAttributeCallExp" location="462:28-462:41" name="transitions">
                        <source xsi:type="ocl:VariableExp" location="462:28-462:29" referredVariable="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@variable"/>
                      </source>
                      <arguments xsi:type="ocl:VariableExp" location="462:51-462:57" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                    </initExpression>
                  </variable>
                  <in_ xsi:type="ocl:LetExp" location="463:10-465:43">
                    <variable location="463:14-464:30" varName="t" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@in_/@in_/@arguments.0">
                      <type xsi:type="ocl:OclModelElement" location="463:18-463:43" name="Transition" model="/2"/>
                      <initExpression xsi:type="ocl:CollectionOperationCallExp" location="464:8-464:30" operationName="at">
                        <source xsi:type="ocl:NavigationOrAttributeCallExp" location="464:8-464:21" name="transitions">
                          <source xsi:type="ocl:VariableExp" location="464:8-464:9" referredVariable="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@variable"/>
                        </source>
                        <arguments xsi:type="ocl:OperatorCallExp" location="464:26-464:29" operationName="-">
                          <source xsi:type="ocl:VariableExp" location="464:26-464:27" referredVariable="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@variable"/>
                          <arguments xsi:type="ocl:IntegerExp" location="464:28-464:29" integerSymbol="1"/>
                        </arguments>
                      </initExpression>
                    </variable>
                    <in_ xsi:type="ocl:OperationCallExp" location="465:10-465:43" operationName="resolveTemp">
                      <source xsi:type="ocl:VariableExp" location="465:10-465:20" referredVariable="/50"/>
                      <arguments xsi:type="ocl:VariableExp" location="465:33-465:34" referredVariable="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@in_/@variable"/>
                      <arguments xsi:type="ocl:StringExp" location="465:36-465:42" stringSymbol="pe_s"/>
                    </in_>
                  </in_>
                </in_>
              </elseExpression>
            </value>
          </bindings>
          <bindings location="467:4-467:18" propertyName="target">
            <value xsi:type="ocl:VariableExp" location="467:14-467:18" referredVariable="/0/@elements.22/@outPattern/@elements.1"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="470:3-491:4" varName="pe_s" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="470:10-470:23" name="State" model="/1"/>
          <bindings location="471:4-477:8" propertyName="incoming">
            <value xsi:type="ocl:CollectionOperationCallExp" location="471:16-477:8" operationName="union">
              <source xsi:type="ocl:SetExp" location="471:16-471:25">
                <elements xsi:type="ocl:VariableExp" location="471:20-471:24" referredVariable="/0/@elements.22/@outPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:IfExp" location="472:8-476:13">
                <thenExpression xsi:type="ocl:SetExp" location="473:9-473:70">
                  <elements xsi:type="ocl:OperationCallExp" location="473:13-473:69" operationName="resolveTemp">
                    <source xsi:type="ocl:VariableExp" location="473:13-473:23" referredVariable="/51"/>
                    <arguments xsi:type="ocl:OperationCallExp" location="473:36-473:60" operationName="getLoopIncoming">
                      <source xsi:type="ocl:VariableExp" location="473:36-473:42" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                    </arguments>
                    <arguments xsi:type="ocl:StringExp" location="473:62-473:68" stringSymbol="pe_t"/>
                  </elements>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="472:11-472:32" operationName="loopIncoming">
                  <source xsi:type="ocl:VariableExp" location="472:11-472:17" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                </condition>
                <elseExpression xsi:type="ocl:SetExp" location="475:9-475:14"/>
              </arguments>
            </value>
          </bindings>
          <bindings location="478:4-490:12" propertyName="outgoing">
            <value xsi:type="ocl:IfExp" location="478:16-490:12">
              <thenExpression xsi:type="ocl:SetExp" location="479:8-479:13"/>
              <condition xsi:type="ocl:OperatorCallExp" location="478:19-478:48" operationName="=">
                <source xsi:type="ocl:VariableExp" location="478:19-478:25" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="478:28-478:48" name="leafTrans">
                  <source xsi:type="ocl:VariableExp" location="478:28-478:38" referredVariable="/52"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:CollectionOperationCallExp" location="481:8-489:10" operationName="union">
                <source xsi:type="ocl:IteratorExp" location="481:8-482:57" name="collect">
                  <source xsi:type="ocl:OperationCallExp" location="481:8-481:28" operationName="getOutgoing">
                    <source xsi:type="ocl:VariableExp" location="481:8-481:14" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                  </source>
                  <body xsi:type="ocl:OperationCallExp" location="482:23-482:56" operationName="resolveTemp">
                    <source xsi:type="ocl:VariableExp" location="482:23-482:33" referredVariable="/53"/>
                    <arguments xsi:type="ocl:VariableExp" location="482:46-482:47" referredVariable="/0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@source/@iterators.0"/>
                    <arguments xsi:type="ocl:StringExp" location="482:49-482:55" stringSymbol="pe_t"/>
                  </body>
                  <iterators location="482:19-482:20" varName="e" variableExp="/0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@source/@body/@arguments.0"/>
                </source>
                <arguments xsi:type="ocl:IfExp" location="484:9-488:14">
                  <thenExpression xsi:type="ocl:SetExp" location="485:10-485:71">
                    <elements xsi:type="ocl:OperationCallExp" location="485:14-485:70" operationName="resolveTemp">
                      <source xsi:type="ocl:VariableExp" location="485:14-485:24" referredVariable="/54"/>
                      <arguments xsi:type="ocl:OperationCallExp" location="485:37-485:61" operationName="getLoopIncoming">
                        <source xsi:type="ocl:VariableExp" location="485:37-485:43" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                      </arguments>
                      <arguments xsi:type="ocl:StringExp" location="485:63-485:69" stringSymbol="pe_t"/>
                    </elements>
                  </thenExpression>
                  <condition xsi:type="ocl:OperationCallExp" location="484:12-484:33" operationName="loopIncoming">
                    <source xsi:type="ocl:VariableExp" location="484:12-484:18" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
                  </condition>
                  <elseExpression xsi:type="ocl:SetExp" location="487:10-487:15"/>
                </arguments>
              </elseExpression>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="450:2-453:10">
        <elements xsi:type="atl:SimpleInPatternElement" location="451:8-451:46" varName="tpe_pt" variableExp="/0/@elements.22/@inPattern/@filter/@arguments.0 /0/@elements.22/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@condition/@source /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@variable/@initExpression/@source /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@variable/@initExpression/@arguments.0 /0/@elements.22/@outPattern/@elements.1/@bindings.0/@value/@arguments.0/@condition/@source /0/@elements.22/@outPattern/@elements.1/@bindings.0/@value/@arguments.0/@thenExpression/@elements.0/@arguments.0/@source /0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@condition/@source /0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@source/@source/@source /0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@arguments.0/@condition/@source /0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@arguments.0/@thenExpression/@elements.0/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="451:17-451:46" name="PrimitiveTrans" model="/2"/>
        </elements>
        <filter xsi:type="ocl:CollectionOperationCallExp" location="452:4-452:54" operationName="includes">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="452:4-452:36" name="singlePrimTransitions">
            <source xsi:type="ocl:VariableExp" location="452:4-452:14" referredVariable="/46"/>
          </source>
          <arguments xsi:type="ocl:VariableExp" location="452:47-452:53" referredVariable="/0/@elements.22/@inPattern/@elements.0"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="508:1-529:2" name="MultiplePrimitiveTrans">
      <commentsBefore>-- Rule 'MultiplePrimitiveTrans'</commentsBefore>
      <commentsBefore>-- This rule generates a loop transition for each transition that belongs</commentsBefore>
      <commentsBefore>-- to the 'multiplePrimTransitions' set. The generated transition is a</commentsBefore>
      <commentsBefore>-- transition from and to the state generated for the previous input</commentsBefore>
      <commentsBefore>-- transition.</commentsBefore>
      <commentsBefore>-- The generated loop transition accepts the name of the input Transition as</commentsBefore>
      <commentsBefore>-- name.</commentsBefore>
      <commentsBefore>-- If the input PrimitiveTrans is the root transition of the input model, its</commentsBefore>
      <commentsBefore>-- source is the initial State generated by the 'Main' rule. Otherwise, the</commentsBefore>
      <commentsBefore>-- source is computed by the getLoopTarget() helper.</commentsBefore>
      <commentsBefore>-- If the input PrimitiveTrans is the root transition of the input model, its</commentsBefore>
      <commentsBefore>-- target is the initial State generated by the 'Main' rule. Otherwise, the</commentsBefore>
      <commentsBefore>-- target is computed by the getLoopTarget() helper.</commentsBefore>
      <commentsAfter>-- Rule 'SingleAltTrans1'</commentsAfter>
      <commentsAfter>-- This rule generates both a Transition and a State for each PrimitiveTrans</commentsAfter>
      <commentsAfter>-- element that belongs to the 'singleAltTransitions1' set.</commentsAfter>
      <commentsAfter>-- The generated transition accepts as name the name of the input</commentsAfter>
      <commentsAfter>-- PrimitiveTrans. Its source element corresponds to the 'pe_s' element</commentsAfter>
      <commentsAfter>-- generated for the transition returned by the call of the</commentsAfter>
      <commentsAfter>-- 'getPrevioustransition' helper. Its target is the State generated by the</commentsAfter>
      <commentsAfter>-- rule.</commentsAfter>
      <commentsAfter>-- Incoming transitions for the generated State include the Transition</commentsAfter>
      <commentsAfter>-- generated by the rule and, when the input Transition precedes a multiple</commentsAfter>
      <commentsAfter>-- transition, the 'pe_t' element generated for this next transition.</commentsAfter>
      <commentsAfter>-- Outgoing transitions for the generated State include to the 'pe_t' element</commentsAfter>
      <commentsAfter>-- generated for the input transition returned by the call of getOugoing(1).</commentsAfter>
      <commentsAfter>-- Moreover, if the input Transition precedes a multiple transition, the 'pe_t'</commentsAfter>
      <commentsAfter>-- element generated for this next transition is added to the set ougoing</commentsAfter>
      <commentsAfter>-- transitions of the generated State.</commentsAfter>
      <outPattern location="513:2-528:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="514:3-528:4" varName="pe_t">
          <type xsi:type="ocl:OclModelElement" location="514:10-514:28" name="Transition" model="/1"/>
          <bindings location="515:4-515:23" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="515:12-515:23" name="name">
              <source xsi:type="ocl:VariableExp" location="515:12-515:18" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="516:4-521:11" propertyName="source">
            <value xsi:type="ocl:IfExp" location="517:6-521:11">
              <thenExpression xsi:type="ocl:OperationCallExp" location="518:7-518:54" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="518:7-518:17" referredVariable="/57"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="518:30-518:45" name="root">
                  <source xsi:type="ocl:VariableExp" location="518:30-518:40" referredVariable="/58"/>
                </arguments>
                <arguments xsi:type="ocl:StringExp" location="518:47-518:53" stringSymbol="pe_s"/>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="517:9-517:38" operationName="=">
                <source xsi:type="ocl:VariableExp" location="517:9-517:15" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="517:18-517:38" name="rootTrans">
                  <source xsi:type="ocl:VariableExp" location="517:18-517:28" referredVariable="/56"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:OperationCallExp" location="520:7-520:29" operationName="getLoopTarget">
                <source xsi:type="ocl:VariableExp" location="520:7-520:13" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
              </elseExpression>
            </value>
          </bindings>
          <bindings location="522:4-527:11" propertyName="target">
            <value xsi:type="ocl:IfExp" location="523:6-527:11">
              <thenExpression xsi:type="ocl:OperationCallExp" location="524:7-524:54" operationName="resolveTemp">
                <source xsi:type="ocl:VariableExp" location="524:7-524:17" referredVariable="/60"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="524:30-524:45" name="root">
                  <source xsi:type="ocl:VariableExp" location="524:30-524:40" referredVariable="/61"/>
                </arguments>
                <arguments xsi:type="ocl:StringExp" location="524:47-524:53" stringSymbol="pe_s"/>
              </thenExpression>
              <condition xsi:type="ocl:OperatorCallExp" location="523:9-523:38" operationName="=">
                <source xsi:type="ocl:VariableExp" location="523:9-523:15" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
                <arguments xsi:type="ocl:NavigationOrAttributeCallExp" location="523:18-523:38" name="rootTrans">
                  <source xsi:type="ocl:VariableExp" location="523:18-523:28" referredVariable="/59"/>
                </arguments>
              </condition>
              <elseExpression xsi:type="ocl:OperationCallExp" location="526:7-526:29" operationName="getLoopTarget">
                <source xsi:type="ocl:VariableExp" location="526:7-526:13" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
              </elseExpression>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="509:2-512:10">
        <elements xsi:type="atl:SimpleInPatternElement" location="510:8-510:46" varName="tpe_pt" variableExp="/0/@elements.23/@inPattern/@filter/@arguments.0 /0/@elements.23/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@condition/@source /0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@source /0/@elements.23/@outPattern/@elements.0/@bindings.2/@value/@condition/@source /0/@elements.23/@outPattern/@elements.0/@bindings.2/@value/@elseExpression/@source">
          <type xsi:type="ocl:OclModelElement" location="510:17-510:46" name="PrimitiveTrans" model="/2"/>
        </elements>
        <filter xsi:type="ocl:CollectionOperationCallExp" location="511:4-511:56" operationName="includes">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="511:4-511:38" name="multiplePrimTransitions">
            <source xsi:type="ocl:VariableExp" location="511:4-511:14" referredVariable="/55"/>
          </source>
          <arguments xsi:type="ocl:VariableExp" location="511:49-511:55" referredVariable="/0/@elements.23/@inPattern/@elements.0"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="548:1-582:2" name="SingleAltTrans1">
      <commentsBefore>-- Rule 'SingleAltTrans1'</commentsBefore>
      <commentsBefore>-- This rule generates both a Transition and a State for each PrimitiveTrans</commentsBefore>
      <commentsBefore>-- element that belongs to the 'singleAltTransitions1' set.</commentsBefore>
      <commentsBefore>-- The generated transition accepts as name the name of the input</commentsBefore>
      <commentsBefore>-- PrimitiveTrans. Its source element corresponds to the 'pe_s' element</commentsBefore>
      <commentsBefore>-- generated for the transition returned by the call of the</commentsBefore>
      <commentsBefore>-- 'getPrevioustransition' helper. Its target is the State generated by the</commentsBefore>
      <commentsBefore>-- rule.</commentsBefore>
      <commentsBefore>-- Incoming transitions for the generated State include the Transition</commentsBefore>
      <commentsBefore>-- generated by the rule and, when the input Transition precedes a multiple</commentsBefore>
      <commentsBefore>-- transition, the 'pe_t' element generated for this next transition.</commentsBefore>
      <commentsBefore>-- Outgoing transitions for the generated State include to the 'pe_t' element</commentsBefore>
      <commentsBefore>-- generated for the input transition returned by the call of getOugoing(1).</commentsBefore>
      <commentsBefore>-- Moreover, if the input Transition precedes a multiple transition, the 'pe_t'</commentsBefore>
      <commentsBefore>-- element generated for this next transition is added to the set ougoing</commentsBefore>
      <commentsBefore>-- transitions of the generated State.</commentsBefore>
      <commentsAfter>-- Rule 'MultipleAltTrans1'</commentsAfter>
      <commentsAfter>-- This rule generates a loop transition for each transition that belongs</commentsAfter>
      <commentsAfter>-- to the 'multipleAltTransitions1' set. The generated transition is a</commentsAfter>
      <commentsAfter>-- transition from and to the state generated for the previous input</commentsAfter>
      <commentsAfter>-- transition.</commentsAfter>
      <commentsAfter>-- The generated loop transition accepts the name of the input Transition as</commentsAfter>
      <commentsAfter>-- name.</commentsAfter>
      <commentsAfter>-- Its source corresponds to the 'pe_s' element generated for the input State</commentsAfter>
      <commentsAfter>-- returned by the call to the getLoopTarget() helper.</commentsAfter>
      <commentsAfter>-- Its target corresponds to the 'pe_s' element generated for the input State</commentsAfter>
      <commentsAfter>-- returned by the call to the getLoopTarget() helper.</commentsAfter>
      <outPattern location="553:2-581:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="554:3-562:4" varName="pe_t" variableExp="/0/@elements.24/@outPattern/@elements.1/@bindings.0/@value/@source/@elements.0">
          <type xsi:type="ocl:OclModelElement" location="554:10-554:28" name="Transition" model="/1"/>
          <bindings location="555:4-555:23" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="555:12-555:23" name="name">
              <source xsi:type="ocl:VariableExp" location="555:12-555:18" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="556:4-560:7" propertyName="source">
            <value xsi:type="ocl:OperationCallExp" location="557:6-560:7" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="557:6-557:16" referredVariable="/63"/>
              <arguments xsi:type="ocl:OperationCallExp" location="558:7-558:37" operationName="getPreviousTransition">
                <source xsi:type="ocl:VariableExp" location="558:7-558:13" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="559:7-559:13" stringSymbol="pe_s"/>
            </value>
          </bindings>
          <bindings location="561:4-561:18" propertyName="target">
            <value xsi:type="ocl:VariableExp" location="561:14-561:18" referredVariable="/0/@elements.24/@outPattern/@elements.1"/>
          </bindings>
        </elements>
        <elements xsi:type="atl:SimpleOutPatternElement" location="564:3-581:4" varName="pe_s" variableExp="/0/@elements.24/@outPattern/@elements.0/@bindings.2/@value">
          <type xsi:type="ocl:OclModelElement" location="564:10-564:23" name="State" model="/1"/>
          <bindings location="565:4-571:8" propertyName="incoming">
            <value xsi:type="ocl:CollectionOperationCallExp" location="565:16-571:8" operationName="union">
              <source xsi:type="ocl:SetExp" location="565:16-565:25">
                <elements xsi:type="ocl:VariableExp" location="565:20-565:24" referredVariable="/0/@elements.24/@outPattern/@elements.0"/>
              </source>
              <arguments xsi:type="ocl:IfExp" location="566:8-570:13">
                <thenExpression xsi:type="ocl:SetExp" location="567:9-567:70">
                  <elements xsi:type="ocl:OperationCallExp" location="567:13-567:69" operationName="resolveTemp">
                    <source xsi:type="ocl:VariableExp" location="567:13-567:23" referredVariable="/64"/>
                    <arguments xsi:type="ocl:OperationCallExp" location="567:36-567:60" operationName="getLoopIncoming">
                      <source xsi:type="ocl:VariableExp" location="567:36-567:42" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                    </arguments>
                    <arguments xsi:type="ocl:StringExp" location="567:62-567:68" stringSymbol="pe_t"/>
                  </elements>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="566:11-566:32" operationName="loopIncoming">
                  <source xsi:type="ocl:VariableExp" location="566:11-566:17" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                </condition>
                <elseExpression xsi:type="ocl:SetExp" location="569:9-569:14"/>
              </arguments>
            </value>
          </bindings>
          <bindings location="572:4-580:9" propertyName="outgoing">
            <value xsi:type="ocl:CollectionOperationCallExp" location="572:16-580:9" operationName="union">
              <source xsi:type="ocl:IteratorExp" location="572:16-573:56" name="collect">
                <source xsi:type="ocl:OperationCallExp" location="572:16-572:36" operationName="getOutgoing">
                  <source xsi:type="ocl:VariableExp" location="572:16-572:22" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                </source>
                <body xsi:type="ocl:OperationCallExp" location="573:22-573:55" operationName="resolveTemp">
                  <source xsi:type="ocl:VariableExp" location="573:22-573:32" referredVariable="/65"/>
                  <arguments xsi:type="ocl:VariableExp" location="573:45-573:46" referredVariable="/0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@source/@iterators.0"/>
                  <arguments xsi:type="ocl:StringExp" location="573:48-573:54" stringSymbol="pe_t"/>
                </body>
                <iterators location="573:18-573:19" varName="e" variableExp="/0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@source/@body/@arguments.0"/>
              </source>
              <arguments xsi:type="ocl:IfExp" location="575:8-579:13">
                <thenExpression xsi:type="ocl:SetExp" location="576:9-576:70">
                  <elements xsi:type="ocl:OperationCallExp" location="576:13-576:69" operationName="resolveTemp">
                    <source xsi:type="ocl:VariableExp" location="576:13-576:23" referredVariable="/66"/>
                    <arguments xsi:type="ocl:OperationCallExp" location="576:36-576:60" operationName="getLoopIncoming">
                      <source xsi:type="ocl:VariableExp" location="576:36-576:42" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                    </arguments>
                    <arguments xsi:type="ocl:StringExp" location="576:62-576:68" stringSymbol="pe_t"/>
                  </elements>
                </thenExpression>
                <condition xsi:type="ocl:OperationCallExp" location="575:11-575:32" operationName="loopIncoming">
                  <source xsi:type="ocl:VariableExp" location="575:11-575:17" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
                </condition>
                <elseExpression xsi:type="ocl:SetExp" location="578:9-578:14"/>
              </arguments>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="549:2-552:10">
        <elements xsi:type="atl:SimpleInPatternElement" location="550:8-550:46" varName="tpe_pt" variableExp="/0/@elements.24/@inPattern/@filter/@arguments.0 /0/@elements.24/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@arguments.0/@source /0/@elements.24/@outPattern/@elements.1/@bindings.0/@value/@arguments.0/@condition/@source /0/@elements.24/@outPattern/@elements.1/@bindings.0/@value/@arguments.0/@thenExpression/@elements.0/@arguments.0/@source /0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@source/@source/@source /0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@arguments.0/@condition/@source /0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@arguments.0/@thenExpression/@elements.0/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="550:17-550:46" name="PrimitiveTrans" model="/2"/>
        </elements>
        <filter xsi:type="ocl:CollectionOperationCallExp" location="551:4-551:54" operationName="includes">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="551:4-551:36" name="singleAltTransitions1">
            <source xsi:type="ocl:VariableExp" location="551:4-551:14" referredVariable="/62"/>
          </source>
          <arguments xsi:type="ocl:VariableExp" location="551:47-551:53" referredVariable="/0/@elements.24/@inPattern/@elements.0"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="596:1-607:2" name="MultipleAltTrans1">
      <commentsBefore>-- Rule 'MultipleAltTrans1'</commentsBefore>
      <commentsBefore>-- This rule generates a loop transition for each transition that belongs</commentsBefore>
      <commentsBefore>-- to the 'multipleAltTransitions1' set. The generated transition is a</commentsBefore>
      <commentsBefore>-- transition from and to the state generated for the previous input</commentsBefore>
      <commentsBefore>-- transition.</commentsBefore>
      <commentsBefore>-- The generated loop transition accepts the name of the input Transition as</commentsBefore>
      <commentsBefore>-- name.</commentsBefore>
      <commentsBefore>-- Its source corresponds to the 'pe_s' element generated for the input State</commentsBefore>
      <commentsBefore>-- returned by the call to the getLoopTarget() helper.</commentsBefore>
      <commentsBefore>-- Its target corresponds to the 'pe_s' element generated for the input State</commentsBefore>
      <commentsBefore>-- returned by the call to the getLoopTarget() helper.</commentsBefore>
      <commentsAfter>-- Rule 'AltTrans2'</commentsAfter>
      <commentsAfter>-- This rule generates a Transition from the last Transition of a Path</commentsAfter>
      <commentsAfter>-- contained by an AlternativeTransition. The generated transition goes from</commentsAfter>
      <commentsAfter>-- the state generated for the previous transition to the final state generated</commentsAfter>
      <commentsAfter>-- for the current AlternativeTransition by the 'AlternativeTrans' helper.</commentsAfter>
      <commentsAfter>-- The generated loop transition accepts the name of the input Transition as</commentsAfter>
      <commentsAfter>-- name.</commentsAfter>
      <commentsAfter>-- Its source corresponds to the 'pe_s' element generated for the input element</commentsAfter>
      <commentsAfter>-- returned by the call of the 'getPreviousTransition()' helper.</commentsAfter>
      <commentsAfter>-- Its target corresponds to the 'pe_s' element generated for the</commentsAfter>
      <commentsAfter>-- AlternativeTransition element that contains the rule input PrimitiveTrans</commentsAfter>
      <commentsAfter>-- element in one of its alternative pathes.</commentsAfter>
      <outPattern location="601:2-606:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="602:3-606:4" varName="pe_t">
          <type xsi:type="ocl:OclModelElement" location="602:10-602:28" name="Transition" model="/1"/>
          <bindings location="603:4-603:23" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="603:12-603:23" name="name">
              <source xsi:type="ocl:VariableExp" location="603:12-603:18" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="604:4-604:68" propertyName="source">
            <value xsi:type="ocl:OperationCallExp" location="604:14-604:68" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="604:14-604:24" referredVariable="/68"/>
              <arguments xsi:type="ocl:OperationCallExp" location="604:37-604:59" operationName="getLoopTarget">
                <source xsi:type="ocl:VariableExp" location="604:37-604:43" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="604:61-604:67" stringSymbol="pe_s"/>
            </value>
          </bindings>
          <bindings location="605:4-605:68" propertyName="target">
            <value xsi:type="ocl:OperationCallExp" location="605:14-605:68" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="605:14-605:24" referredVariable="/69"/>
              <arguments xsi:type="ocl:OperationCallExp" location="605:37-605:59" operationName="getLoopTarget">
                <source xsi:type="ocl:VariableExp" location="605:37-605:43" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="605:61-605:67" stringSymbol="pe_s"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="597:2-600:10">
        <elements xsi:type="atl:SimpleInPatternElement" location="598:8-598:46" varName="tpe_pt" variableExp="/0/@elements.25/@inPattern/@filter/@arguments.0 /0/@elements.25/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@arguments.0/@source /0/@elements.25/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source">
          <type xsi:type="ocl:OclModelElement" location="598:17-598:46" name="PrimitiveTrans" model="/2"/>
        </elements>
        <filter xsi:type="ocl:CollectionOperationCallExp" location="599:4-599:56" operationName="includes">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="599:4-599:38" name="multipleAltTransitions1">
            <source xsi:type="ocl:VariableExp" location="599:4-599:14" referredVariable="/67"/>
          </source>
          <arguments xsi:type="ocl:VariableExp" location="599:49-599:55" referredVariable="/0/@elements.25/@inPattern/@elements.0"/>
        </filter>
      </inPattern>
    </elements>
    <elements xsi:type="atl:MatchedRule" location="622:1-643:2" name="AltTrans2">
      <commentsBefore>-- Rule 'AltTrans2'</commentsBefore>
      <commentsBefore>-- This rule generates a Transition from the last Transition of a Path</commentsBefore>
      <commentsBefore>-- contained by an AlternativeTransition. The generated transition goes from</commentsBefore>
      <commentsBefore>-- the state generated for the previous transition to the final state generated</commentsBefore>
      <commentsBefore>-- for the current AlternativeTransition by the 'AlternativeTrans' helper.</commentsBefore>
      <commentsBefore>-- The generated loop transition accepts the name of the input Transition as</commentsBefore>
      <commentsBefore>-- name.</commentsBefore>
      <commentsBefore>-- Its source corresponds to the 'pe_s' element generated for the input element</commentsBefore>
      <commentsBefore>-- returned by the call of the 'getPreviousTransition()' helper.</commentsBefore>
      <commentsBefore>-- Its target corresponds to the 'pe_s' element generated for the</commentsBefore>
      <commentsBefore>-- AlternativeTransition element that contains the rule input PrimitiveTrans</commentsBefore>
      <commentsBefore>-- element in one of its alternative pathes.</commentsBefore>
      <outPattern location="627:2-642:4">
        <elements xsi:type="atl:SimpleOutPatternElement" location="628:3-642:4" varName="pe_t">
          <type xsi:type="ocl:OclModelElement" location="628:10-628:28" name="Transition" model="/1"/>
          <bindings location="629:4-629:23" propertyName="name">
            <value xsi:type="ocl:NavigationOrAttributeCallExp" location="629:12-629:23" name="name">
              <source xsi:type="ocl:VariableExp" location="629:12-629:18" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
            </value>
          </bindings>
          <bindings location="630:4-632:14" propertyName="source">
            <value xsi:type="ocl:OperationCallExp" location="630:14-632:14" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="630:14-630:24" referredVariable="/71"/>
              <arguments xsi:type="ocl:OperationCallExp" location="631:7-631:37" operationName="getPreviousTransition">
                <source xsi:type="ocl:VariableExp" location="631:7-631:13" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="632:7-632:13" stringSymbol="pe_s"/>
            </value>
          </bindings>
          <bindings location="633:4-641:14" propertyName="target">
            <value xsi:type="ocl:OperationCallExp" location="633:14-641:14" operationName="resolveTemp">
              <source xsi:type="ocl:VariableExp" location="633:14-633:24" referredVariable="/72"/>
              <arguments xsi:type="ocl:CollectionOperationCallExp" location="634:7-640:17" operationName="first">
                <source xsi:type="ocl:CollectionOperationCallExp" location="634:7-639:23" operationName="asSequence">
                  <source xsi:type="ocl:IteratorExp" location="634:7-639:9" name="select">
                    <source xsi:type="ocl:OperationCallExp" location="634:7-634:53" operationName="allInstances">
                      <source xsi:type="ocl:OclModelElement" location="634:7-634:38" name="AlternativeTrans" model="/2"/>
                    </source>
                    <body xsi:type="ocl:CollectionOperationCallExp" location="635:21-638:27" operationName="includes">
                      <source xsi:type="ocl:CollectionOperationCallExp" location="635:21-637:20" operationName="flatten">
                        <source xsi:type="ocl:IteratorExp" location="635:21-636:37" name="collect">
                          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="635:21-635:31" name="altPaths">
                            <source xsi:type="ocl:VariableExp" location="635:21-635:22" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source/@source/@iterators.0"/>
                          </source>
                          <body xsi:type="ocl:NavigationOrAttributeCallExp" location="636:23-636:36" name="transitions">
                            <source xsi:type="ocl:VariableExp" location="636:23-636:24" referredVariable="/0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source/@source/@body/@source/@source/@iterators.0"/>
                          </body>
                          <iterators location="636:19-636:20" varName="b" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source/@source/@body/@source/@source/@body/@source"/>
                        </source>
                      </source>
                      <arguments xsi:type="ocl:VariableExp" location="638:20-638:26" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
                    </body>
                    <iterators location="635:17-635:18" varName="a" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source/@source/@body/@source/@source/@source/@source"/>
                  </source>
                </source>
              </arguments>
              <arguments xsi:type="ocl:StringExp" location="641:7-641:13" stringSymbol="pe_s"/>
            </value>
          </bindings>
        </elements>
      </outPattern>
      <inPattern location="623:2-626:10">
        <elements xsi:type="atl:SimpleInPatternElement" location="624:8-624:46" varName="tpe_pt" variableExp="/0/@elements.26/@inPattern/@filter/@arguments.0 /0/@elements.26/@outPattern/@elements.0/@bindings.0/@value/@source /0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@arguments.0/@source /0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source/@source/@body/@arguments.0">
          <type xsi:type="ocl:OclModelElement" location="624:17-624:46" name="PrimitiveTrans" model="/2"/>
        </elements>
        <filter xsi:type="ocl:CollectionOperationCallExp" location="625:4-625:48" operationName="includes">
          <source xsi:type="ocl:NavigationOrAttributeCallExp" location="625:4-625:30" name="altTransitions2">
            <source xsi:type="ocl:VariableExp" location="625:4-625:14" referredVariable="/70"/>
          </source>
          <arguments xsi:type="ocl:VariableExp" location="625:41-625:47" referredVariable="/0/@elements.26/@inPattern/@elements.0"/>
        </filter>
      </inPattern>
    </elements>
  </atl:Module>
  <ocl:OclModel location="2:14-2:21" name="PathExp" elements="/0/@elements.20/@outPattern/@elements.0/@type /0/@elements.20/@outPattern/@elements.1/@type /0/@elements.21/@outPattern/@elements.0/@type /0/@elements.22/@outPattern/@elements.0/@type /0/@elements.22/@outPattern/@elements.1/@type /0/@elements.23/@outPattern/@elements.0/@type /0/@elements.24/@outPattern/@elements.0/@type /0/@elements.24/@outPattern/@elements.1/@type /0/@elements.25/@outPattern/@elements.0/@type /0/@elements.26/@outPattern/@elements.0/@type" model="/0/@outModels.0"/>
  <ocl:OclModel location="2:32-2:46" name="TextualPathExp" elements="/0/@elements.0/@definition/@feature/@type /0/@elements.0/@definition/@feature/@initExpression/@source/@source/@source /0/@elements.1/@definition/@feature/@type /0/@elements.2/@definition/@feature/@type /0/@elements.3/@definition/@feature/@type/@elementType /0/@elements.3/@definition/@feature/@initExpression/@source /0/@elements.4/@definition/@feature/@type/@elementType /0/@elements.4/@definition/@feature/@initExpression/@body/@source/@source/@source/@source /0/@elements.5/@definition/@feature/@type/@elementType /0/@elements.5/@definition/@feature/@initExpression/@source/@source/@source/@source/@source /0/@elements.5/@definition/@feature/@initExpression/@source/@source/@source/@body/@source/@source/@source/@source/@source /0/@elements.5/@definition/@feature/@initExpression/@body/@arguments.0 /0/@elements.6/@definition/@feature/@type/@elementType /0/@elements.7/@definition/@feature/@type/@elementType /0/@elements.8/@definition/@feature/@type/@elementType /0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@result/@type/@elementType/@elementType /0/@elements.8/@definition/@feature/@initExpression/@body/@arguments.0 /0/@elements.9/@definition/@feature/@type/@elementType /0/@elements.10/@definition/@feature/@type/@elementType /0/@elements.11/@definition/@feature/@type/@elementType /0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@result/@type/@elementType/@elementType /0/@elements.11/@definition/@feature/@initExpression/@body/@arguments.0 /0/@elements.12/@definition/@context_/@context_ /0/@elements.12/@definition/@feature/@returnType /0/@elements.13/@definition/@context_/@context_ /0/@elements.13/@definition/@feature/@body/@variable/@type /0/@elements.14/@definition/@context_/@context_ /0/@elements.14/@definition/@feature/@body/@variable/@type /0/@elements.15/@definition/@context_/@context_ /0/@elements.15/@definition/@feature/@returnType /0/@elements.15/@definition/@feature/@body/@variable/@type /0/@elements.16/@definition/@context_/@context_ /0/@elements.16/@definition/@feature/@body/@variable/@type /0/@elements.17/@definition/@context_/@context_ /0/@elements.17/@definition/@feature/@returnType /0/@elements.17/@definition/@feature/@body/@variable/@type /0/@elements.18/@definition/@context_/@context_ /0/@elements.18/@definition/@feature/@returnType/@elementType /0/@elements.18/@definition/@feature/@body/@variable/@type /0/@elements.18/@definition/@feature/@body/@in_/@in_/@variable/@type /0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@condition/@arguments.0 /0/@elements.18/@definition/@feature/@body/@in_/@in_/@in_/@elseExpression/@result/@type/@elementType /0/@elements.19/@definition/@context_/@context_ /0/@elements.19/@definition/@feature/@returnType /0/@elements.19/@definition/@feature/@body/@variable/@type /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable/@type /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@variable/@initExpression/@source/@source/@source /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable/@type /0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@in_/@in_/@variable/@type /0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@in_/@variable/@type /0/@elements.20/@inPattern/@elements.0/@type /0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.2/@source/@source /0/@elements.21/@inPattern/@elements.0/@type /0/@elements.22/@inPattern/@elements.0/@type /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@variable/@type /0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@in_/@variable/@type /0/@elements.23/@inPattern/@elements.0/@type /0/@elements.24/@inPattern/@elements.0/@type /0/@elements.25/@inPattern/@elements.0/@type /0/@elements.26/@inPattern/@elements.0/@type /0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@arguments.0/@source/@source/@source/@source" model="/0/@inModels.0"/>
  <ocl:VariableDeclaration location="23:2-23:12" varName="thisModule" variableExp="/0/@elements.1/@definition/@feature/@initExpression/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="31:2-31:12" varName="thisModule" variableExp="/0/@elements.2/@definition/@feature/@initExpression/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="47:2-47:12" varName="thisModule" variableExp="/0/@elements.4/@definition/@feature/@initExpression/@source/@source"/>
  <ocl:VariableDeclaration location="82:2-82:12" varName="thisModule" variableExp="/0/@elements.6/@definition/@feature/@initExpression/@source/@source"/>
  <ocl:VariableDeclaration location="91:2-91:12" varName="thisModule" variableExp="/0/@elements.7/@definition/@feature/@initExpression/@source/@source"/>
  <ocl:VariableDeclaration location="104:2-104:12" varName="thisModule" variableExp="/0/@elements.8/@definition/@feature/@initExpression/@source/@source/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="121:2-121:12" varName="thisModule" variableExp="/0/@elements.9/@definition/@feature/@initExpression/@source/@source"/>
  <ocl:VariableDeclaration location="130:2-130:12" varName="thisModule" variableExp="/0/@elements.10/@definition/@feature/@initExpression/@source/@source"/>
  <ocl:VariableDeclaration location="143:2-143:12" varName="thisModule" variableExp="/0/@elements.11/@definition/@feature/@initExpression/@source/@source/@source/@source/@source/@source"/>
  <ocl:VariableDeclaration location="162:2-162:12" varName="thisModule" variableExp="/0/@elements.12/@definition/@feature/@body/@source/@source/@source"/>
  <ocl:VariableDeclaration location="163:40-163:44" varName="self" variableExp="/0/@elements.12/@definition/@feature/@body/@source/@body/@arguments.0"/>
  <ocl:VariableDeclaration location="176:32-176:36" varName="self" variableExp="/0/@elements.13/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="177:5-177:9" varName="self" variableExp="/0/@elements.13/@definition/@feature/@body/@in_/@source"/>
  <ocl:VariableDeclaration location="189:32-189:36" varName="self" variableExp="/0/@elements.14/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="190:5-190:9" varName="self" variableExp="/0/@elements.14/@definition/@feature/@body/@in_/@source"/>
  <ocl:VariableDeclaration location="203:32-203:36" varName="self" variableExp="/0/@elements.15/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="204:46-204:50" varName="self" variableExp="/0/@elements.15/@definition/@feature/@body/@in_/@variable/@initExpression/@arguments.0"/>
  <ocl:VariableDeclaration location="217:32-217:36" varName="self" variableExp="/0/@elements.16/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="218:46-218:50" varName="self" variableExp="/0/@elements.16/@definition/@feature/@body/@in_/@variable/@initExpression/@arguments.0"/>
  <ocl:VariableDeclaration location="219:8-219:12" varName="self" variableExp="/0/@elements.16/@definition/@feature/@body/@in_/@in_/@condition/@source"/>
  <ocl:VariableDeclaration location="235:32-235:36" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="236:46-236:50" varName="self" variableExp="/0/@elements.17/@definition/@feature/@body/@in_/@variable/@initExpression/@arguments.0"/>
  <ocl:VariableDeclaration location="256:32-256:36" varName="self" variableExp="/0/@elements.18/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="257:46-257:50" varName="self" variableExp="/0/@elements.18/@definition/@feature/@body/@in_/@variable/@initExpression/@arguments.0"/>
  <ocl:VariableDeclaration location="297:32-297:36" varName="self" variableExp="/0/@elements.19/@definition/@feature/@body/@variable/@initExpression/@source"/>
  <ocl:VariableDeclaration location="298:5-298:9" varName="self" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@condition/@source"/>
  <ocl:VariableDeclaration location="304:4-304:14" varName="thisModule" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@thenExpression/@in_/@variable/@initExpression/@source/@source/@source"/>
  <ocl:VariableDeclaration location="316:44-316:48" varName="self" variableExp="/0/@elements.19/@definition/@feature/@body/@in_/@elseExpression/@variable/@initExpression/@arguments.0"/>
  <ocl:VariableDeclaration location="351:7-351:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@source/@source"/>
  <ocl:VariableDeclaration location="352:22-352:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="353:7-353:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.1/@source/@source"/>
  <ocl:VariableDeclaration location="354:22-354:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.1/@body/@source"/>
  <ocl:VariableDeclaration location="356:22-356:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.1/@value/@elements.2/@body/@source"/>
  <ocl:VariableDeclaration location="360:7-360:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.0/@source/@source"/>
  <ocl:VariableDeclaration location="361:22-361:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.0/@body/@source"/>
  <ocl:VariableDeclaration location="362:7-362:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.1/@source/@source"/>
  <ocl:VariableDeclaration location="363:22-363:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.1/@body/@source"/>
  <ocl:VariableDeclaration location="364:7-364:17" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.2/@source/@source"/>
  <ocl:VariableDeclaration location="365:22-365:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.0/@bindings.2/@value/@elements.2/@body/@source"/>
  <ocl:VariableDeclaration location="371:20-371:30" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.1/@bindings.1/@value/@source/@elements.0/@source"/>
  <ocl:VariableDeclaration location="372:22-372:32" varName="thisModule" variableExp="/0/@elements.20/@outPattern/@elements.1/@bindings.1/@value/@body/@source"/>
  <ocl:VariableDeclaration location="395:16-395:26" varName="thisModule" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.0/@value/@source/@source"/>
  <ocl:VariableDeclaration location="402:22-402:32" varName="thisModule" variableExp="/0/@elements.21/@outPattern/@elements.0/@bindings.1/@value/@body/@source"/>
  <ocl:VariableDeclaration location="452:4-452:14" varName="thisModule" variableExp="/0/@elements.22/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="458:18-458:28" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@condition/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="459:7-459:17" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="459:30-459:40" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="465:10-465:20" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.0/@bindings.1/@value/@elseExpression/@in_/@in_/@in_/@source"/>
  <ocl:VariableDeclaration location="473:13-473:23" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.1/@bindings.0/@value/@arguments.0/@thenExpression/@elements.0/@source"/>
  <ocl:VariableDeclaration location="478:28-478:38" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@condition/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="482:23-482:33" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@source/@body/@source"/>
  <ocl:VariableDeclaration location="485:14-485:24" varName="thisModule" variableExp="/0/@elements.22/@outPattern/@elements.1/@bindings.1/@value/@elseExpression/@arguments.0/@thenExpression/@elements.0/@source"/>
  <ocl:VariableDeclaration location="511:4-511:14" varName="thisModule" variableExp="/0/@elements.23/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="517:18-517:28" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@condition/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="518:7-518:17" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="518:30-518:40" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.1/@value/@thenExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="523:18-523:28" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.2/@value/@condition/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="524:7-524:17" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.2/@value/@thenExpression/@source"/>
  <ocl:VariableDeclaration location="524:30-524:40" varName="thisModule" variableExp="/0/@elements.23/@outPattern/@elements.0/@bindings.2/@value/@thenExpression/@arguments.0/@source"/>
  <ocl:VariableDeclaration location="551:4-551:14" varName="thisModule" variableExp="/0/@elements.24/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="557:6-557:16" varName="thisModule" variableExp="/0/@elements.24/@outPattern/@elements.0/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="567:13-567:23" varName="thisModule" variableExp="/0/@elements.24/@outPattern/@elements.1/@bindings.0/@value/@arguments.0/@thenExpression/@elements.0/@source"/>
  <ocl:VariableDeclaration location="573:22-573:32" varName="thisModule" variableExp="/0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@source/@body/@source"/>
  <ocl:VariableDeclaration location="576:13-576:23" varName="thisModule" variableExp="/0/@elements.24/@outPattern/@elements.1/@bindings.1/@value/@arguments.0/@thenExpression/@elements.0/@source"/>
  <ocl:VariableDeclaration location="599:4-599:14" varName="thisModule" variableExp="/0/@elements.25/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="604:14-604:24" varName="thisModule" variableExp="/0/@elements.25/@outPattern/@elements.0/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="605:14-605:24" varName="thisModule" variableExp="/0/@elements.25/@outPattern/@elements.0/@bindings.2/@value/@source"/>
  <ocl:VariableDeclaration location="625:4-625:14" varName="thisModule" variableExp="/0/@elements.26/@inPattern/@filter/@source/@source"/>
  <ocl:VariableDeclaration location="630:14-630:24" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.1/@value/@source"/>
  <ocl:VariableDeclaration location="633:14-633:24" varName="thisModule" variableExp="/0/@elements.26/@outPattern/@elements.0/@bindings.2/@value/@source"/>
</xmi:XMI>
